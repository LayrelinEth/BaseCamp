{
	"id": "51fda9669f28c5c2249a763e3910720e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"12_ERC-20 Tokens.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.8.2 <0.9.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\n\ncontract WeightedVoting is ERC20 {\n    string private salt = \"value\"; \n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    error TokensClaimed(); \n    error AllTokensClaimed(); \n    error NoTokensHeld(); \n    error QuorumTooHigh(); \n    error AlreadyVoted(); \n    error VotingClosed(); \n\n    struct Issue {\n        EnumerableSet.AddressSet voters; // Set of voters\n        string issueDesc; // Description of the issue\n        uint256 quorum; // Quorum required to close the issue\n        uint256 totalVotes; // Total number of votes casted\n        uint256 votesFor; // Total number of votes in favor\n        uint256 votesAgainst; // Total number of votes against\n        uint256 votesAbstain; // Total number of abstained votes\n        bool passed; // Flag indicating if the issue passed\n        bool closed; // Flag indicating if the issue is closed\n    }\n\n    struct SerializedIssue {\n        address[] voters; // Array of voters\n        string issueDesc; // Description of the issue\n        uint256 quorum; // Quorum required to close the issue\n        uint256 totalVotes; // Total number of votes casted\n        uint256 votesFor; // Total number of votes in favor\n        uint256 votesAgainst; // Total number of votes against\n        uint256 votesAbstain; // Total number of abstained votes\n        bool passed; // Flag indicating if the issue passed\n        bool closed; // Flag indicating if the issue is closed\n    }\n\n    enum Vote {\n        AGAINST,\n        FOR,\n        ABSTAIN\n    }\n\n    Issue[] internal issues;\n\n    mapping(address => bool) public tokensClaimed;\n\n    uint256 public maxSupply = 1000000; // Maximum supply of tokens\n    uint256 public claimAmount = 100; // Amount of tokens to be claimed\n\n    string saltt = \"any\"; // Another string variable\n\n    constructor(string memory _name, string memory _symbol)\n        ERC20(_name, _symbol)\n    {\n        issues.push(); // Pushing an empty issue to start from index 1\n    }\n\n    function claim() public {\n        // Check if all tokens have been claimed\n        if (totalSupply() + claimAmount > maxSupply) {\n            revert AllTokensClaimed();\n        }\n        // Check if the caller has already claimed tokens\n        if (tokensClaimed[msg.sender]) {\n            revert TokensClaimed();\n        }\n        // Mint tokens to the caller\n        _mint(msg.sender, claimAmount);\n        tokensClaimed[msg.sender] = true; // Mark tokens as claimed\n    }\n\n    function createIssue(string calldata _issueDesc, uint256 _quorum)\n        external\n        returns (uint256)\n    {\n        // Check if the caller holds any tokens\n        if (balanceOf(msg.sender) == 0) {\n            revert NoTokensHeld();\n        }\n        // Check if the specified quorum is higher than total supply\n        if (_quorum > totalSupply()) {\n            revert QuorumTooHigh();\n        }\n        // Create a new issue and return its index\n        Issue storage _issue = issues.push();\n        _issue.issueDesc = _issueDesc;\n        _issue.quorum = _quorum;\n        return issues.length - 1;\n    }\n\n    function getIssue(uint256 _issueId)\n        external\n        view\n        returns (SerializedIssue memory)\n    {\n        Issue storage _issue = issues[_issueId];\n        return\n            SerializedIssue({\n                voters: _issue.voters.values(),\n                issueDesc: _issue.issueDesc,\n                quorum: _issue.quorum,\n                totalVotes: _issue.totalVotes,\n                votesFor: _issue.votesFor,\n                votesAgainst: _issue.votesAgainst,\n                votesAbstain: _issue.votesAbstain,\n                passed: _issue.passed,\n                closed: _issue.closed\n            });\n    }\n\n    function vote(uint256 _issueId, Vote _vote) public {\n        Issue storage _issue = issues[_issueId];\n        if (_issue.closed) {\n            revert VotingClosed();\n        }\n        if (_issue.voters.contains(msg.sender)) {\n            revert AlreadyVoted();\n        }\n\n        uint256 nTokens = balanceOf(msg.sender);\n        // Check if the caller holds any tokens\n        if (nTokens == 0) {\n            revert NoTokensHeld();\n        }\n\n        if (_vote == Vote.AGAINST) {\n            _issue.votesAgainst += nTokens;\n        } else if (_vote == Vote.FOR) {\n            _issue.votesFor += nTokens;\n        } else {\n            _issue.votesAbstain += nTokens;\n        }\n\n        _issue.voters.add(msg.sender);\n        _issue.totalVotes += nTokens;\n\n        if (_issue.totalVotes >= _issue.quorum) {\n            _issue.closed = true;\n            if (_issue.votesFor > _issue.votesAgainst) {\n                _issue.passed = true;\n            }\n        }\n    }\n}"
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position is the index of the value in the `values` array plus 1.\n        // Position 0 is used to mean a value is not in the set.\n        mapping(bytes32 value => uint256) _positions;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._positions[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We cache the value's position to prevent multiple reads from the same storage slot\n        uint256 position = set._positions[value];\n\n        if (position != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 valueIndex = position - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (valueIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the lastValue to the index where the value to delete is\n                set._values[valueIndex] = lastValue;\n                // Update the tracked position of the lastValue (that was just moved)\n                set._positions[lastValue] = position;\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the tracked position for the deleted slot\n            delete set._positions[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._positions[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"12_ERC-20 Tokens.sol": {
				"WeightedVoting": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AllTokensClaimed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AlreadyVoted",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NoTokensHeld",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "QuorumTooHigh",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TokensClaimed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "VotingClosed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_issueDesc",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_quorum",
									"type": "uint256"
								}
							],
							"name": "createIssue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_issueId",
									"type": "uint256"
								}
							],
							"name": "getIssue",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address[]",
											"name": "voters",
											"type": "address[]"
										},
										{
											"internalType": "string",
											"name": "issueDesc",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "quorum",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalVotes",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "votesFor",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "votesAgainst",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "votesAbstain",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "passed",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "closed",
											"type": "bool"
										}
									],
									"internalType": "struct WeightedVoting.SerializedIssue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokensClaimed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_issueId",
									"type": "uint256"
								},
								{
									"internalType": "enum WeightedVoting.Vote",
									"name": "_vote",
									"type": "uint8"
								}
							],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"12_ERC-20 Tokens.sol\":189:4844  contract WeightedVoting is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"12_ERC-20 Tokens.sol\":228:257  string private salt = \"value\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x76616c7565000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x05\n  swap1\n  dup2\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"12_ERC-20 Tokens.sol\":1805:1812  1000000 */\n  0x0f4240\n    /* \"12_ERC-20 Tokens.sol\":1778:1812  uint256 public maxSupply = 1000000 */\n  0x08\n  sstore\n    /* \"12_ERC-20 Tokens.sol\":1875:1878  100 */\n  0x64\n    /* \"12_ERC-20 Tokens.sol\":1846:1878  uint256 public claimAmount = 100 */\n  0x09\n  sstore\n    /* \"12_ERC-20 Tokens.sol\":1919:1939  string saltt = \"any\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x616e790000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x0a\n  swap1\n  dup2\n  tag_3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_3:\n  pop\n    /* \"12_ERC-20 Tokens.sol\":1973:2141  constructor(string memory _name, string memory _symbol)... */\n  callvalue\n  dup1\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n    /* \"12_ERC-20 Tokens.sol\":2043:2048  _name */\n  dup2\n    /* \"12_ERC-20 Tokens.sol\":2050:2057  _symbol */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_11\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_11:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"12_ERC-20 Tokens.sol\":2073:2079  issues */\n  0x06\n    /* \"12_ERC-20 Tokens.sol\":2073:2086  issues.push() */\n  0x01\n  dup2\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  pop\n  pop\n    /* \"12_ERC-20 Tokens.sol\":1973:2141  constructor(string memory _name, string memory _symbol)... */\n  pop\n  pop\n    /* \"12_ERC-20 Tokens.sol\":189:4844  contract WeightedVoting is ERC20 {... */\n  jump(tag_14)\n    /* \"#utility.yul\":7:106   */\ntag_15:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_16:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_17:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_18:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_52:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_53\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_54\n  tag_17\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":714:798   */\ntag_53:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_19:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_20:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_21:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_22:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_59\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_21\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1429:1468   */\n  tag_60\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_21\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_23:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_24:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_25:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_64\n    /* \"#utility.yul\":1818:1852   */\n  tag_65\n    /* \"#utility.yul\":1827:1851   */\n  tag_66\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_23\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1818:1852   */\n  tag_24\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1800:1853   */\n  tag_23\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_26:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_27:\n    /* \"#utility.yul\":2056:2095   */\n  tag_69\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_25\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2117:2208   */\n  tag_70\n    /* \"#utility.yul\":2166:2207   */\n  tag_71\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_26\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_22\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_28:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_29:\n    /* \"#utility.yul\":2377:2409   */\n  tag_74\n  tag_28\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2418:2483   */\n  tag_75\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_27\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_30:\n    /* \"#utility.yul\":2555:2675   */\ntag_77:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_80\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_29\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_77)\ntag_79:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_31:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_83\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_19\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2906:2935   */\n  tag_84\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_20\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_85:\n    /* \"#utility.yul\":3133:3213   */\n  tag_86\n    /* \"#utility.yul\":3189:3211   */\n  tag_87\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_20\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_30\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_82:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_32:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_33:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_90\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_32\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_34:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_92\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_33\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_2:\n    /* \"#utility.yul\":3950:3987   */\n  tag_94\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_15\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_96\n  tag_16\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4038:4094   */\ntag_95:\n    /* \"#utility.yul\":4118:4156   */\n  tag_97\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_18\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4203:4270   */\n  tag_98\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_31\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_100\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_101:\n    /* \"#utility.yul\":5144:5211   */\n  tag_102\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_34\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_99)\n    /* \"#utility.yul\":4365:4983   */\ntag_100:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_103\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_19\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_104:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_104)\ntag_106:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_107\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_108\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_33\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_107:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_99:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5309   */\ntag_35:\n    /* \"#utility.yul\":5267:5273   */\n  0x00\n    /* \"#utility.yul\":5300:5302   */\n  0x40\n    /* \"#utility.yul\":5294:5303   */\n  mload\n    /* \"#utility.yul\":5284:5303   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5309   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5315:5432   */\ntag_36:\n    /* \"#utility.yul\":5424:5425   */\n  0x00\n    /* \"#utility.yul\":5421:5422   */\n  dup1\n    /* \"#utility.yul\":5414:5426   */\n  revert\n    /* \"#utility.yul\":5438:5555   */\ntag_37:\n    /* \"#utility.yul\":5547:5548   */\n  0x00\n    /* \"#utility.yul\":5544:5545   */\n  dup1\n    /* \"#utility.yul\":5537:5549   */\n  revert\n    /* \"#utility.yul\":5561:5678   */\ntag_38:\n    /* \"#utility.yul\":5670:5671   */\n  0x00\n    /* \"#utility.yul\":5667:5668   */\n  dup1\n    /* \"#utility.yul\":5660:5672   */\n  revert\n    /* \"#utility.yul\":5684:5801   */\ntag_39:\n    /* \"#utility.yul\":5793:5794   */\n  0x00\n    /* \"#utility.yul\":5790:5791   */\n  dup1\n    /* \"#utility.yul\":5783:5795   */\n  revert\n    /* \"#utility.yul\":5807:5909   */\ntag_40:\n    /* \"#utility.yul\":5848:5854   */\n  0x00\n    /* \"#utility.yul\":5899:5901   */\n  0x1f\n    /* \"#utility.yul\":5895:5902   */\n  not\n    /* \"#utility.yul\":5890:5892   */\n  0x1f\n    /* \"#utility.yul\":5883:5888   */\n  dup4\n    /* \"#utility.yul\":5879:5893   */\n  add\n    /* \"#utility.yul\":5875:5903   */\n  and\n    /* \"#utility.yul\":5865:5903   */\n  swap1\n  pop\n    /* \"#utility.yul\":5807:5909   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5915:6196   */\ntag_41:\n    /* \"#utility.yul\":5998:6025   */\n  tag_116\n    /* \"#utility.yul\":6020:6024   */\n  dup3\n    /* \"#utility.yul\":5998:6025   */\n  tag_40\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":5990:5996   */\n  dup2\n    /* \"#utility.yul\":5986:6026   */\n  add\n    /* \"#utility.yul\":6128:6134   */\n  dup2\n    /* \"#utility.yul\":6116:6126   */\n  dup2\n    /* \"#utility.yul\":6113:6135   */\n  lt\n    /* \"#utility.yul\":6092:6110   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":6080:6090   */\n  dup3\n    /* \"#utility.yul\":6077:6111   */\n  gt\n    /* \"#utility.yul\":6074:6136   */\n  or\n    /* \"#utility.yul\":6071:6159   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6139:6157   */\n  tag_118\n  tag_16\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6071:6159   */\ntag_117:\n    /* \"#utility.yul\":6179:6189   */\n  dup1\n    /* \"#utility.yul\":6175:6177   */\n  0x40\n    /* \"#utility.yul\":6168:6190   */\n  mstore\n    /* \"#utility.yul\":5958:6196   */\n  pop\n    /* \"#utility.yul\":5915:6196   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6202:6331   */\ntag_42:\n    /* \"#utility.yul\":6236:6242   */\n  0x00\n    /* \"#utility.yul\":6263:6283   */\n  tag_120\n  tag_35\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":6253:6283   */\n  swap1\n  pop\n    /* \"#utility.yul\":6292:6325   */\n  tag_121\n    /* \"#utility.yul\":6320:6324   */\n  dup3\n    /* \"#utility.yul\":6312:6318   */\n  dup3\n    /* \"#utility.yul\":6292:6325   */\n  tag_41\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6202:6331   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6337:6645   */\ntag_43:\n    /* \"#utility.yul\":6399:6403   */\n  0x00\n    /* \"#utility.yul\":6489:6507   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":6481:6487   */\n  dup3\n    /* \"#utility.yul\":6478:6508   */\n  gt\n    /* \"#utility.yul\":6475:6531   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":6511:6529   */\n  tag_124\n  tag_16\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6475:6531   */\ntag_123:\n    /* \"#utility.yul\":6549:6578   */\n  tag_125\n    /* \"#utility.yul\":6571:6577   */\n  dup3\n    /* \"#utility.yul\":6549:6578   */\n  tag_40\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6541:6578   */\n  swap1\n  pop\n    /* \"#utility.yul\":6633:6637   */\n  0x20\n    /* \"#utility.yul\":6627:6631   */\n  dup2\n    /* \"#utility.yul\":6623:6638   */\n  add\n    /* \"#utility.yul\":6615:6638   */\n  swap1\n  pop\n    /* \"#utility.yul\":6337:6645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6651:6790   */\ntag_44:\n    /* \"#utility.yul\":6740:6746   */\n  dup3\n    /* \"#utility.yul\":6735:6738   */\n  dup2\n    /* \"#utility.yul\":6730:6733   */\n  dup4\n    /* \"#utility.yul\":6724:6747   */\n  mcopy\n    /* \"#utility.yul\":6781:6782   */\n  0x00\n    /* \"#utility.yul\":6772:6778   */\n  dup4\n    /* \"#utility.yul\":6767:6770   */\n  dup4\n    /* \"#utility.yul\":6763:6779   */\n  add\n    /* \"#utility.yul\":6756:6783   */\n  mstore\n    /* \"#utility.yul\":6651:6790   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6796:7230   */\ntag_45:\n    /* \"#utility.yul\":6885:6890   */\n  0x00\n    /* \"#utility.yul\":6910:6976   */\n  tag_128\n    /* \"#utility.yul\":6926:6975   */\n  tag_129\n    /* \"#utility.yul\":6968:6974   */\n  dup5\n    /* \"#utility.yul\":6926:6975   */\n  tag_43\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":6910:6976   */\n  tag_42\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6901:6976   */\n  swap1\n  pop\n    /* \"#utility.yul\":6999:7005   */\n  dup3\n    /* \"#utility.yul\":6992:6997   */\n  dup2\n    /* \"#utility.yul\":6985:7006   */\n  mstore\n    /* \"#utility.yul\":7037:7041   */\n  0x20\n    /* \"#utility.yul\":7030:7035   */\n  dup2\n    /* \"#utility.yul\":7026:7042   */\n  add\n    /* \"#utility.yul\":7075:7078   */\n  dup5\n    /* \"#utility.yul\":7066:7072   */\n  dup5\n    /* \"#utility.yul\":7061:7064   */\n  dup5\n    /* \"#utility.yul\":7057:7073   */\n  add\n    /* \"#utility.yul\":7054:7079   */\n  gt\n    /* \"#utility.yul\":7051:7163   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":7082:7161   */\n  tag_131\n  tag_39\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7051:7163   */\ntag_130:\n    /* \"#utility.yul\":7172:7224   */\n  tag_132\n    /* \"#utility.yul\":7217:7223   */\n  dup5\n    /* \"#utility.yul\":7212:7215   */\n  dup3\n    /* \"#utility.yul\":7207:7210   */\n  dup6\n    /* \"#utility.yul\":7172:7224   */\n  tag_44\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":6891:7230   */\n  pop\n    /* \"#utility.yul\":6796:7230   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7250:7605   */\ntag_46:\n    /* \"#utility.yul\":7317:7322   */\n  0x00\n    /* \"#utility.yul\":7366:7369   */\n  dup3\n    /* \"#utility.yul\":7359:7363   */\n  0x1f\n    /* \"#utility.yul\":7351:7357   */\n  dup4\n    /* \"#utility.yul\":7347:7364   */\n  add\n    /* \"#utility.yul\":7343:7370   */\n  slt\n    /* \"#utility.yul\":7333:7455   */\n  tag_134\n  jumpi\n    /* \"#utility.yul\":7374:7453   */\n  tag_135\n  tag_38\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":7333:7455   */\ntag_134:\n    /* \"#utility.yul\":7484:7490   */\n  dup2\n    /* \"#utility.yul\":7478:7491   */\n  mload\n    /* \"#utility.yul\":7509:7599   */\n  tag_136\n    /* \"#utility.yul\":7595:7598   */\n  dup5\n    /* \"#utility.yul\":7587:7593   */\n  dup3\n    /* \"#utility.yul\":7580:7584   */\n  0x20\n    /* \"#utility.yul\":7572:7578   */\n  dup7\n    /* \"#utility.yul\":7568:7585   */\n  add\n    /* \"#utility.yul\":7509:7599   */\n  tag_45\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":7500:7599   */\n  swap2\n  pop\n    /* \"#utility.yul\":7323:7605   */\n  pop\n    /* \"#utility.yul\":7250:7605   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7611:8464   */\ntag_6:\n    /* \"#utility.yul\":7710:7716   */\n  0x00\n    /* \"#utility.yul\":7718:7724   */\n  dup1\n    /* \"#utility.yul\":7767:7769   */\n  0x40\n    /* \"#utility.yul\":7755:7764   */\n  dup4\n    /* \"#utility.yul\":7746:7753   */\n  dup6\n    /* \"#utility.yul\":7742:7765   */\n  sub\n    /* \"#utility.yul\":7738:7770   */\n  slt\n    /* \"#utility.yul\":7735:7854   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":7773:7852   */\n  tag_139\n  tag_36\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":7735:7854   */\ntag_138:\n    /* \"#utility.yul\":7914:7915   */\n  0x00\n    /* \"#utility.yul\":7903:7912   */\n  dup4\n    /* \"#utility.yul\":7899:7916   */\n  add\n    /* \"#utility.yul\":7893:7917   */\n  mload\n    /* \"#utility.yul\":7944:7962   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7936:7942   */\n  dup2\n    /* \"#utility.yul\":7933:7963   */\n  gt\n    /* \"#utility.yul\":7930:8047   */\n  iszero\n  tag_140\n  jumpi\n    /* \"#utility.yul\":7966:8045   */\n  tag_141\n  tag_37\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":7930:8047   */\ntag_140:\n    /* \"#utility.yul\":8071:8145   */\n  tag_142\n    /* \"#utility.yul\":8137:8144   */\n  dup6\n    /* \"#utility.yul\":8128:8134   */\n  dup3\n    /* \"#utility.yul\":8117:8126   */\n  dup7\n    /* \"#utility.yul\":8113:8135   */\n  add\n    /* \"#utility.yul\":8071:8145   */\n  tag_46\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":8061:8145   */\n  swap3\n  pop\n    /* \"#utility.yul\":7864:8155   */\n  pop\n    /* \"#utility.yul\":8215:8217   */\n  0x20\n    /* \"#utility.yul\":8204:8213   */\n  dup4\n    /* \"#utility.yul\":8200:8218   */\n  add\n    /* \"#utility.yul\":8194:8219   */\n  mload\n    /* \"#utility.yul\":8246:8264   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8238:8244   */\n  dup2\n    /* \"#utility.yul\":8235:8265   */\n  gt\n    /* \"#utility.yul\":8232:8349   */\n  iszero\n  tag_143\n  jumpi\n    /* \"#utility.yul\":8268:8347   */\n  tag_144\n  tag_37\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":8232:8349   */\ntag_143:\n    /* \"#utility.yul\":8373:8447   */\n  tag_145\n    /* \"#utility.yul\":8439:8446   */\n  dup6\n    /* \"#utility.yul\":8430:8436   */\n  dup3\n    /* \"#utility.yul\":8419:8428   */\n  dup7\n    /* \"#utility.yul\":8415:8437   */\n  add\n    /* \"#utility.yul\":8373:8447   */\n  tag_46\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":8363:8447   */\n  swap2\n  pop\n    /* \"#utility.yul\":8165:8457   */\n  pop\n    /* \"#utility.yul\":7611:8464   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"12_ERC-20 Tokens.sol\":189:4844  contract WeightedVoting is ERC20 {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"12_ERC-20 Tokens.sol\":189:4844  contract WeightedVoting is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x830953ab\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x976b3113\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x976b3113\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd5abeb01\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x830953ab\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8615d855\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x943e8216\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4e71d92d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x624601b6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"12_ERC-20 Tokens.sol\":2147:2621  function claim() public {... */\n    tag_8:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      stop\n        /* \"12_ERC-20 Tokens.sol\":1726:1771  mapping(address => bool) public tokensClaimed */\n    tag_9:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"12_ERC-20 Tokens.sol\":1846:1878  uint256 public claimAmount = 100 */\n    tag_11:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"12_ERC-20 Tokens.sol\":2627:3239  function createIssue(string calldata _issueDesc, uint256 _quorum)... */\n    tag_12:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"12_ERC-20 Tokens.sol\":3880:4842  function vote(uint256 _issueId, Vote _vote) public {... */\n    tag_13:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"12_ERC-20 Tokens.sol\":3245:3874  function getIssue(uint256 _issueId)... */\n    tag_15:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_16:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"12_ERC-20 Tokens.sol\":1778:1812  uint256 public maxSupply = 1000000 */\n    tag_17:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_18:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_91\n      jump\t// in\n    tag_92:\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"12_ERC-20 Tokens.sol\":2147:2621  function claim() public {... */\n    tag_46:\n        /* \"12_ERC-20 Tokens.sol\":2264:2273  maxSupply */\n      sload(0x08)\n        /* \"12_ERC-20 Tokens.sol\":2250:2261  claimAmount */\n      sload(0x09)\n        /* \"12_ERC-20 Tokens.sol\":2234:2247  totalSupply() */\n      tag_110\n        /* \"12_ERC-20 Tokens.sol\":2234:2245  totalSupply */\n      tag_33\n        /* \"12_ERC-20 Tokens.sol\":2234:2247  totalSupply() */\n      jump\t// in\n    tag_110:\n        /* \"12_ERC-20 Tokens.sol\":2234:2261  totalSupply() + claimAmount */\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"12_ERC-20 Tokens.sol\":2234:2273  totalSupply() + claimAmount > maxSupply */\n      gt\n        /* \"12_ERC-20 Tokens.sol\":2230:2325  if (totalSupply() + claimAmount > maxSupply) {... */\n      iszero\n      tag_113\n      jumpi\n        /* \"12_ERC-20 Tokens.sol\":2296:2314  AllTokensClaimed() */\n      mload(0x40)\n      0xcbe2483100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"12_ERC-20 Tokens.sol\":2230:2325  if (totalSupply() + claimAmount > maxSupply) {... */\n    tag_113:\n        /* \"12_ERC-20 Tokens.sol\":2396:2409  tokensClaimed */\n      0x07\n        /* \"12_ERC-20 Tokens.sol\":2396:2421  tokensClaimed[msg.sender] */\n      0x00\n        /* \"12_ERC-20 Tokens.sol\":2410:2420  msg.sender */\n      caller\n        /* \"12_ERC-20 Tokens.sol\":2396:2421  tokensClaimed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"12_ERC-20 Tokens.sol\":2392:2470  if (tokensClaimed[msg.sender]) {... */\n      iszero\n      tag_114\n      jumpi\n        /* \"12_ERC-20 Tokens.sol\":2444:2459  TokensClaimed() */\n      mload(0x40)\n      0x0b1327a600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"12_ERC-20 Tokens.sol\":2392:2470  if (tokensClaimed[msg.sender]) {... */\n    tag_114:\n        /* \"12_ERC-20 Tokens.sol\":2516:2546  _mint(msg.sender, claimAmount) */\n      tag_115\n        /* \"12_ERC-20 Tokens.sol\":2522:2532  msg.sender */\n      caller\n        /* \"12_ERC-20 Tokens.sol\":2534:2545  claimAmount */\n      sload(0x09)\n        /* \"12_ERC-20 Tokens.sol\":2516:2521  _mint */\n      tag_116\n        /* \"12_ERC-20 Tokens.sol\":2516:2546  _mint(msg.sender, claimAmount) */\n      jump\t// in\n    tag_115:\n        /* \"12_ERC-20 Tokens.sol\":2584:2588  true */\n      0x01\n        /* \"12_ERC-20 Tokens.sol\":2556:2569  tokensClaimed */\n      0x07\n        /* \"12_ERC-20 Tokens.sol\":2556:2581  tokensClaimed[msg.sender] */\n      0x00\n        /* \"12_ERC-20 Tokens.sol\":2570:2580  msg.sender */\n      caller\n        /* \"12_ERC-20 Tokens.sol\":2556:2581  tokensClaimed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"12_ERC-20 Tokens.sol\":2556:2588  tokensClaimed[msg.sender] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"12_ERC-20 Tokens.sol\":2147:2621  function claim() public {... */\n      jump\t// out\n        /* \"12_ERC-20 Tokens.sol\":1726:1771  mapping(address => bool) public tokensClaimed */\n    tag_50:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"12_ERC-20 Tokens.sol\":1846:1878  uint256 public claimAmount = 100 */\n    tag_57:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"12_ERC-20 Tokens.sol\":2627:3239  function createIssue(string calldata _issueDesc, uint256 _quorum)... */\n    tag_62:\n        /* \"12_ERC-20 Tokens.sol\":2727:2734  uint256 */\n      0x00\n        /* \"12_ERC-20 Tokens.sol\":2827:2828  0 */\n      dup1\n        /* \"12_ERC-20 Tokens.sol\":2802:2823  balanceOf(msg.sender) */\n      tag_119\n        /* \"12_ERC-20 Tokens.sol\":2812:2822  msg.sender */\n      caller\n        /* \"12_ERC-20 Tokens.sol\":2802:2811  balanceOf */\n      tag_54\n        /* \"12_ERC-20 Tokens.sol\":2802:2823  balanceOf(msg.sender) */\n      jump\t// in\n    tag_119:\n        /* \"12_ERC-20 Tokens.sol\":2802:2828  balanceOf(msg.sender) == 0 */\n      sub\n        /* \"12_ERC-20 Tokens.sol\":2798:2876  if (balanceOf(msg.sender) == 0) {... */\n      tag_120\n      jumpi\n        /* \"12_ERC-20 Tokens.sol\":2851:2865  NoTokensHeld() */\n      mload(0x40)\n      0x8439960d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"12_ERC-20 Tokens.sol\":2798:2876  if (balanceOf(msg.sender) == 0) {... */\n    tag_120:\n        /* \"12_ERC-20 Tokens.sol\":2968:2981  totalSupply() */\n      tag_121\n        /* \"12_ERC-20 Tokens.sol\":2968:2979  totalSupply */\n      tag_33\n        /* \"12_ERC-20 Tokens.sol\":2968:2981  totalSupply() */\n      jump\t// in\n    tag_121:\n        /* \"12_ERC-20 Tokens.sol\":2958:2965  _quorum */\n      dup3\n        /* \"12_ERC-20 Tokens.sol\":2958:2981  _quorum > totalSupply() */\n      gt\n        /* \"12_ERC-20 Tokens.sol\":2954:3030  if (_quorum > totalSupply()) {... */\n      iszero\n      tag_122\n      jumpi\n        /* \"12_ERC-20 Tokens.sol\":3004:3019  QuorumTooHigh() */\n      mload(0x40)\n      0x0d92730000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"12_ERC-20 Tokens.sol\":2954:3030  if (_quorum > totalSupply()) {... */\n    tag_122:\n        /* \"12_ERC-20 Tokens.sol\":3090:3110  Issue storage _issue */\n      0x00\n        /* \"12_ERC-20 Tokens.sol\":3113:3119  issues */\n      0x06\n        /* \"12_ERC-20 Tokens.sol\":3113:3126  issues.push() */\n      0x01\n      dup2\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x09\n      mul\n      add\n        /* \"12_ERC-20 Tokens.sol\":3090:3126  Issue storage _issue = issues.push() */\n      swap1\n      pop\n        /* \"12_ERC-20 Tokens.sol\":3155:3165  _issueDesc */\n      dup5\n      dup5\n        /* \"12_ERC-20 Tokens.sol\":3136:3142  _issue */\n      dup3\n        /* \"12_ERC-20 Tokens.sol\":3136:3152  _issue.issueDesc */\n      0x02\n      add\n        /* \"12_ERC-20 Tokens.sol\":3136:3165  _issue.issueDesc = _issueDesc */\n      swap2\n      dup3\n      tag_124\n      swap3\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      pop\n        /* \"12_ERC-20 Tokens.sol\":3191:3198  _quorum */\n      dup3\n        /* \"12_ERC-20 Tokens.sol\":3175:3181  _issue */\n      dup2\n        /* \"12_ERC-20 Tokens.sol\":3175:3188  _issue.quorum */\n      0x03\n      add\n        /* \"12_ERC-20 Tokens.sol\":3175:3198  _issue.quorum = _quorum */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"12_ERC-20 Tokens.sol\":3231:3232  1 */\n      0x01\n        /* \"12_ERC-20 Tokens.sol\":3215:3221  issues */\n      0x06\n        /* \"12_ERC-20 Tokens.sol\":3215:3228  issues.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"12_ERC-20 Tokens.sol\":3215:3232  issues.length - 1 */\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"12_ERC-20 Tokens.sol\":3208:3232  return issues.length - 1 */\n      swap2\n      pop\n      pop\n        /* \"12_ERC-20 Tokens.sol\":2627:3239  function createIssue(string calldata _issueDesc, uint256 _quorum)... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"12_ERC-20 Tokens.sol\":3880:4842  function vote(uint256 _issueId, Vote _vote) public {... */\n    tag_67:\n        /* \"12_ERC-20 Tokens.sol\":3941:3961  Issue storage _issue */\n      0x00\n        /* \"12_ERC-20 Tokens.sol\":3964:3970  issues */\n      0x06\n        /* \"12_ERC-20 Tokens.sol\":3971:3979  _issueId */\n      dup4\n        /* \"12_ERC-20 Tokens.sol\":3964:3980  issues[_issueId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_129\n      jumpi\n      tag_130\n      tag_131\n      jump\t// in\n    tag_130:\n    tag_129:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x09\n      mul\n      add\n        /* \"12_ERC-20 Tokens.sol\":3941:3980  Issue storage _issue = issues[_issueId] */\n      swap1\n      pop\n        /* \"12_ERC-20 Tokens.sol\":3994:4000  _issue */\n      dup1\n        /* \"12_ERC-20 Tokens.sol\":3994:4007  _issue.closed */\n      0x08\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"12_ERC-20 Tokens.sol\":3990:4055  if (_issue.closed) {... */\n      iszero\n      tag_133\n      jumpi\n        /* \"12_ERC-20 Tokens.sol\":4030:4044  VotingClosed() */\n      mload(0x40)\n      0x66b6cb4a00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"12_ERC-20 Tokens.sol\":3990:4055  if (_issue.closed) {... */\n    tag_133:\n        /* \"12_ERC-20 Tokens.sol\":4068:4102  _issue.voters.contains(msg.sender) */\n      tag_134\n        /* \"12_ERC-20 Tokens.sol\":4091:4101  msg.sender */\n      caller\n        /* \"12_ERC-20 Tokens.sol\":4068:4074  _issue */\n      dup3\n        /* \"12_ERC-20 Tokens.sol\":4068:4081  _issue.voters */\n      0x00\n      add\n        /* \"12_ERC-20 Tokens.sol\":4068:4090  _issue.voters.contains */\n      tag_135\n      swap1\n        /* \"12_ERC-20 Tokens.sol\":4068:4102  _issue.voters.contains(msg.sender) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_134:\n        /* \"12_ERC-20 Tokens.sol\":4064:4150  if (_issue.voters.contains(msg.sender)) {... */\n      iszero\n      tag_136\n      jumpi\n        /* \"12_ERC-20 Tokens.sol\":4125:4139  AlreadyVoted() */\n      mload(0x40)\n      0x7c9a1cf900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"12_ERC-20 Tokens.sol\":4064:4150  if (_issue.voters.contains(msg.sender)) {... */\n    tag_136:\n        /* \"12_ERC-20 Tokens.sol\":4160:4175  uint256 nTokens */\n      0x00\n        /* \"12_ERC-20 Tokens.sol\":4178:4199  balanceOf(msg.sender) */\n      tag_137\n        /* \"12_ERC-20 Tokens.sol\":4188:4198  msg.sender */\n      caller\n        /* \"12_ERC-20 Tokens.sol\":4178:4187  balanceOf */\n      tag_54\n        /* \"12_ERC-20 Tokens.sol\":4178:4199  balanceOf(msg.sender) */\n      jump\t// in\n    tag_137:\n        /* \"12_ERC-20 Tokens.sol\":4160:4199  uint256 nTokens = balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"12_ERC-20 Tokens.sol\":4272:4273  0 */\n      0x00\n        /* \"12_ERC-20 Tokens.sol\":4261:4268  nTokens */\n      dup2\n        /* \"12_ERC-20 Tokens.sol\":4261:4273  nTokens == 0 */\n      sub\n        /* \"12_ERC-20 Tokens.sol\":4257:4321  if (nTokens == 0) {... */\n      tag_138\n      jumpi\n        /* \"12_ERC-20 Tokens.sol\":4296:4310  NoTokensHeld() */\n      mload(0x40)\n      0x8439960d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"12_ERC-20 Tokens.sol\":4257:4321  if (nTokens == 0) {... */\n    tag_138:\n        /* \"12_ERC-20 Tokens.sol\":4344:4356  Vote.AGAINST */\n      0x00\n        /* \"12_ERC-20 Tokens.sol\":4335:4356  _vote == Vote.AGAINST */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_139\n      jumpi\n      tag_140\n      tag_141\n      jump\t// in\n    tag_140:\n    tag_139:\n        /* \"12_ERC-20 Tokens.sol\":4335:4340  _vote */\n      dup4\n        /* \"12_ERC-20 Tokens.sol\":4335:4356  _vote == Vote.AGAINST */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_142\n      jumpi\n      tag_143\n      tag_141\n      jump\t// in\n    tag_143:\n    tag_142:\n      sub\n        /* \"12_ERC-20 Tokens.sol\":4331:4554  if (_vote == Vote.AGAINST) {... */\n      tag_144\n      jumpi\n        /* \"12_ERC-20 Tokens.sol\":4395:4402  nTokens */\n      dup1\n        /* \"12_ERC-20 Tokens.sol\":4372:4378  _issue */\n      dup3\n        /* \"12_ERC-20 Tokens.sol\":4372:4391  _issue.votesAgainst */\n      0x06\n      add\n      0x00\n        /* \"12_ERC-20 Tokens.sol\":4372:4402  _issue.votesAgainst += nTokens */\n      dup3\n      dup3\n      sload\n      tag_145\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_145:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"12_ERC-20 Tokens.sol\":4331:4554  if (_vote == Vote.AGAINST) {... */\n      jump(tag_146)\n    tag_144:\n        /* \"12_ERC-20 Tokens.sol\":4432:4440  Vote.FOR */\n      0x01\n        /* \"12_ERC-20 Tokens.sol\":4423:4440  _vote == Vote.FOR */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_147\n      jumpi\n      tag_148\n      tag_141\n      jump\t// in\n    tag_148:\n    tag_147:\n        /* \"12_ERC-20 Tokens.sol\":4423:4428  _vote */\n      dup4\n        /* \"12_ERC-20 Tokens.sol\":4423:4440  _vote == Vote.FOR */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_149\n      jumpi\n      tag_150\n      tag_141\n      jump\t// in\n    tag_150:\n    tag_149:\n      sub\n        /* \"12_ERC-20 Tokens.sol\":4419:4554  if (_vote == Vote.FOR) {... */\n      tag_151\n      jumpi\n        /* \"12_ERC-20 Tokens.sol\":4475:4482  nTokens */\n      dup1\n        /* \"12_ERC-20 Tokens.sol\":4456:4462  _issue */\n      dup3\n        /* \"12_ERC-20 Tokens.sol\":4456:4471  _issue.votesFor */\n      0x05\n      add\n      0x00\n        /* \"12_ERC-20 Tokens.sol\":4456:4482  _issue.votesFor += nTokens */\n      dup3\n      dup3\n      sload\n      tag_152\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_152:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"12_ERC-20 Tokens.sol\":4419:4554  if (_vote == Vote.FOR) {... */\n      jump(tag_153)\n    tag_151:\n        /* \"12_ERC-20 Tokens.sol\":4536:4543  nTokens */\n      dup1\n        /* \"12_ERC-20 Tokens.sol\":4513:4519  _issue */\n      dup3\n        /* \"12_ERC-20 Tokens.sol\":4513:4532  _issue.votesAbstain */\n      0x07\n      add\n      0x00\n        /* \"12_ERC-20 Tokens.sol\":4513:4543  _issue.votesAbstain += nTokens */\n      dup3\n      dup3\n      sload\n      tag_154\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_154:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"12_ERC-20 Tokens.sol\":4419:4554  if (_vote == Vote.FOR) {... */\n    tag_153:\n        /* \"12_ERC-20 Tokens.sol\":4331:4554  if (_vote == Vote.AGAINST) {... */\n    tag_146:\n        /* \"12_ERC-20 Tokens.sol\":4564:4593  _issue.voters.add(msg.sender) */\n      tag_155\n        /* \"12_ERC-20 Tokens.sol\":4582:4592  msg.sender */\n      caller\n        /* \"12_ERC-20 Tokens.sol\":4564:4570  _issue */\n      dup4\n        /* \"12_ERC-20 Tokens.sol\":4564:4577  _issue.voters */\n      0x00\n      add\n        /* \"12_ERC-20 Tokens.sol\":4564:4581  _issue.voters.add */\n      tag_156\n      swap1\n        /* \"12_ERC-20 Tokens.sol\":4564:4593  _issue.voters.add(msg.sender) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_155:\n      pop\n        /* \"12_ERC-20 Tokens.sol\":4624:4631  nTokens */\n      dup1\n        /* \"12_ERC-20 Tokens.sol\":4603:4609  _issue */\n      dup3\n        /* \"12_ERC-20 Tokens.sol\":4603:4620  _issue.totalVotes */\n      0x04\n      add\n      0x00\n        /* \"12_ERC-20 Tokens.sol\":4603:4631  _issue.totalVotes += nTokens */\n      dup3\n      dup3\n      sload\n      tag_157\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_157:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"12_ERC-20 Tokens.sol\":4667:4673  _issue */\n      dup2\n        /* \"12_ERC-20 Tokens.sol\":4667:4680  _issue.quorum */\n      0x03\n      add\n      sload\n        /* \"12_ERC-20 Tokens.sol\":4646:4652  _issue */\n      dup3\n        /* \"12_ERC-20 Tokens.sol\":4646:4663  _issue.totalVotes */\n      0x04\n      add\n      sload\n        /* \"12_ERC-20 Tokens.sol\":4646:4680  _issue.totalVotes >= _issue.quorum */\n      lt\n        /* \"12_ERC-20 Tokens.sol\":4642:4836  if (_issue.totalVotes >= _issue.quorum) {... */\n      tag_158\n      jumpi\n        /* \"12_ERC-20 Tokens.sol\":4712:4716  true */\n      0x01\n        /* \"12_ERC-20 Tokens.sol\":4696:4702  _issue */\n      dup3\n        /* \"12_ERC-20 Tokens.sol\":4696:4709  _issue.closed */\n      0x08\n      add\n      0x01\n        /* \"12_ERC-20 Tokens.sol\":4696:4716  _issue.closed = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"12_ERC-20 Tokens.sol\":4752:4758  _issue */\n      dup2\n        /* \"12_ERC-20 Tokens.sol\":4752:4771  _issue.votesAgainst */\n      0x06\n      add\n      sload\n        /* \"12_ERC-20 Tokens.sol\":4734:4740  _issue */\n      dup3\n        /* \"12_ERC-20 Tokens.sol\":4734:4749  _issue.votesFor */\n      0x05\n      add\n      sload\n        /* \"12_ERC-20 Tokens.sol\":4734:4771  _issue.votesFor > _issue.votesAgainst */\n      gt\n        /* \"12_ERC-20 Tokens.sol\":4730:4826  if (_issue.votesFor > _issue.votesAgainst) {... */\n      iszero\n      tag_159\n      jumpi\n        /* \"12_ERC-20 Tokens.sol\":4807:4811  true */\n      0x01\n        /* \"12_ERC-20 Tokens.sol\":4791:4797  _issue */\n      dup3\n        /* \"12_ERC-20 Tokens.sol\":4791:4804  _issue.passed */\n      0x08\n      add\n      0x00\n        /* \"12_ERC-20 Tokens.sol\":4791:4811  _issue.passed = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"12_ERC-20 Tokens.sol\":4730:4826  if (_issue.votesFor > _issue.votesAgainst) {... */\n    tag_159:\n        /* \"12_ERC-20 Tokens.sol\":4642:4836  if (_issue.totalVotes >= _issue.quorum) {... */\n    tag_158:\n        /* \"12_ERC-20 Tokens.sol\":3931:4842  {... */\n      pop\n      pop\n        /* \"12_ERC-20 Tokens.sol\":3880:4842  function vote(uint256 _issueId, Vote _vote) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_161\n      swap1\n      tag_91\n      jump\t// in\n    tag_161:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_162\n      swap1\n      tag_91\n      jump\t// in\n    tag_162:\n      dup1\n      iszero\n      tag_163\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_164\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_163)\n    tag_164:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_165:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_165\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_163:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"12_ERC-20 Tokens.sol\":3245:3874  function getIssue(uint256 _issueId)... */\n    tag_74:\n        /* \"12_ERC-20 Tokens.sol\":3328:3350  SerializedIssue memory */\n      tag_166\n      tag_167\n      jump\t// in\n    tag_166:\n        /* \"12_ERC-20 Tokens.sol\":3366:3386  Issue storage _issue */\n      0x00\n        /* \"12_ERC-20 Tokens.sol\":3389:3395  issues */\n      0x06\n        /* \"12_ERC-20 Tokens.sol\":3396:3404  _issueId */\n      dup4\n        /* \"12_ERC-20 Tokens.sol\":3389:3405  issues[_issueId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_169\n      jumpi\n      tag_170\n      tag_131\n      jump\t// in\n    tag_170:\n    tag_169:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x09\n      mul\n      add\n        /* \"12_ERC-20 Tokens.sol\":3366:3405  Issue storage _issue = issues[_issueId] */\n      swap1\n      pop\n        /* \"12_ERC-20 Tokens.sol\":3434:3867  SerializedIssue({... */\n      mload(0x40)\n      dup1\n      0x0120\n      add\n      0x40\n      mstore\n      dup1\n        /* \"12_ERC-20 Tokens.sol\":3476:3498  _issue.voters.values() */\n      tag_172\n        /* \"12_ERC-20 Tokens.sol\":3476:3482  _issue */\n      dup4\n        /* \"12_ERC-20 Tokens.sol\":3476:3489  _issue.voters */\n      0x00\n      add\n        /* \"12_ERC-20 Tokens.sol\":3476:3496  _issue.voters.values */\n      tag_173\n        /* \"12_ERC-20 Tokens.sol\":3476:3498  _issue.voters.values() */\n      jump\t// in\n    tag_172:\n        /* \"12_ERC-20 Tokens.sol\":3434:3867  SerializedIssue({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"12_ERC-20 Tokens.sol\":3527:3533  _issue */\n      dup3\n        /* \"12_ERC-20 Tokens.sol\":3527:3543  _issue.issueDesc */\n      0x02\n      add\n        /* \"12_ERC-20 Tokens.sol\":3434:3867  SerializedIssue({... */\n      dup1\n      sload\n      tag_174\n      swap1\n      tag_91\n      jump\t// in\n    tag_174:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_175\n      swap1\n      tag_91\n      jump\t// in\n    tag_175:\n      dup1\n      iszero\n      tag_176\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_177\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_176)\n    tag_177:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_178:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_178\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_176:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n        /* \"12_ERC-20 Tokens.sol\":3569:3575  _issue */\n      dup3\n        /* \"12_ERC-20 Tokens.sol\":3569:3582  _issue.quorum */\n      0x03\n      add\n      sload\n        /* \"12_ERC-20 Tokens.sol\":3434:3867  SerializedIssue({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"12_ERC-20 Tokens.sol\":3612:3618  _issue */\n      dup3\n        /* \"12_ERC-20 Tokens.sol\":3612:3629  _issue.totalVotes */\n      0x04\n      add\n      sload\n        /* \"12_ERC-20 Tokens.sol\":3434:3867  SerializedIssue({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"12_ERC-20 Tokens.sol\":3657:3663  _issue */\n      dup3\n        /* \"12_ERC-20 Tokens.sol\":3657:3672  _issue.votesFor */\n      0x05\n      add\n      sload\n        /* \"12_ERC-20 Tokens.sol\":3434:3867  SerializedIssue({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"12_ERC-20 Tokens.sol\":3704:3710  _issue */\n      dup3\n        /* \"12_ERC-20 Tokens.sol\":3704:3723  _issue.votesAgainst */\n      0x06\n      add\n      sload\n        /* \"12_ERC-20 Tokens.sol\":3434:3867  SerializedIssue({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"12_ERC-20 Tokens.sol\":3755:3761  _issue */\n      dup3\n        /* \"12_ERC-20 Tokens.sol\":3755:3774  _issue.votesAbstain */\n      0x07\n      add\n      sload\n        /* \"12_ERC-20 Tokens.sol\":3434:3867  SerializedIssue({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"12_ERC-20 Tokens.sol\":3800:3806  _issue */\n      dup3\n        /* \"12_ERC-20 Tokens.sol\":3800:3813  _issue.passed */\n      0x08\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"12_ERC-20 Tokens.sol\":3434:3867  SerializedIssue({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n        /* \"12_ERC-20 Tokens.sol\":3839:3845  _issue */\n      dup3\n        /* \"12_ERC-20 Tokens.sol\":3839:3852  _issue.closed */\n      0x08\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"12_ERC-20 Tokens.sol\":3434:3867  SerializedIssue({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"12_ERC-20 Tokens.sol\":3415:3867  return... */\n      swap2\n      pop\n      pop\n        /* \"12_ERC-20 Tokens.sol\":3245:3874  function getIssue(uint256 _issueId)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"12_ERC-20 Tokens.sol\":1778:1812  uint256 public maxSupply = 1000000 */\n    tag_82:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_188\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_190\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_198\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_200\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_203\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_205\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8871:9036  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8951:8955  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8974:9029  _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_207\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8984:8987  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8984:8994  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9020:9025  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9004:9027  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8996:9028  bytes32(uint256(uint160(value))) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8974:8983  _contains */\n      tag_208\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8974:9029  _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8967:9029  return _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8871:9036  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8316:8466  function add(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8386:8390  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8409:8459  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_210\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8414:8417  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8414:8424  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8450:8455  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8434:8457  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8426:8458  bytes32(uint256(uint160(value))) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8409:8413  _add */\n      tag_211\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8409:8459  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8402:8459  return _add(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8316:8466  function add(AddressSet storage set, address value) internal returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10270:10570  function values(AddressSet storage set) internal view returns (address[] memory) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10333:10349  address[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10361:10383  bytes32[] memory store */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10386:10405  _values(set._inner) */\n      tag_213\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10394:10397  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10394:10404  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10386:10393  _values */\n      tag_214\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10386:10405  _values(set._inner) */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10361:10405  bytes32[] memory store = _values(set._inner) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10415:10438  address[] memory result */\n      0x60\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10525:10530  store */\n      dup2\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10515:10530  result := store */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10557:10563  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10550:10563  return result */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10270:10570  function values(AddressSet storage set) internal view returns (address[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_216\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_221\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_223\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_224\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_224:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_225)\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_226\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_228\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_229)\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_230\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4264:4393  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4337:4341  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4385:4386  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4363  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4374  set._positions */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4381  set._positions[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4375:4380  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4381  set._positions[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4386  set._positions[value] != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4353:4386  return set._positions[value] != 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4264:4393  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2241:2647  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2304:2308  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2325:2346  _contains(set, value) */\n      tag_233\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2335:2338  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2340:2345  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2325:2334  _contains */\n      tag_208\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2325:2346  _contains(set, value) */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2320:2641  if (!_contains(set, value)) {... */\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2362:2365  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2362:2373  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2379:2384  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2362:2385  set._values.push(value) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2544:2547  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2544:2555  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2544:2562  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2523  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2534  set._positions */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2541  set._positions[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2535:2540  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2541  set._positions[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2562  set._positions[value] = set._values.length */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2583:2587  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2576:2587  return true */\n      swap1\n      pop\n      jump(tag_232)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2320:2641  if (!_contains(set, value)) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2625:2630  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2618:2630  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2241:2647  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_232:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5581:5690  function _values(Set storage set) private view returns (bytes32[] memory) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5637:5653  bytes32[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5672:5675  set */\n      dup2\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5672:5683  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5665:5683  return set._values */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_238\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_239:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_239\n      jumpi\n    tag_238:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5581:5690  function _values(Set storage set) private view returns (bytes32[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_167:\n      mload(0x40)\n      dup1\n      0x0120\n      add\n      0x40\n      mstore\n      dup1\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_240:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_241:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_242:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_243:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_244:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_304\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_240\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":711:782   */\n      tag_305\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_241\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_306\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_242\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":881:910   */\n      tag_307\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_243\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_25:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_309\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_244\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_246:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1446:1563   */\n    tag_247:\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1552:1553   */\n      dup1\n        /* \"#utility.yul\":1545:1557   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_248:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_249:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_315\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_248\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_250:\n        /* \"#utility.yul\":1876:1900   */\n      tag_317\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_249\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_318:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_251:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_320\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_250\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_252:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_253:\n        /* \"#utility.yul\":2232:2256   */\n      tag_323\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_252\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_324\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_324:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_254:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_326\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_253\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_28:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_329\n      tag_246\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":2525:2644   */\n    tag_328:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_330\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_251\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_331\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_254\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_255:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_256:\n        /* \"#utility.yul\":3089:3110   */\n      tag_334\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_255\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_31:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_336\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_256\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_257:\n        /* \"#utility.yul\":3426:3450   */\n      tag_338\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_252\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_35:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_340\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_257\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_38:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_343\n      tag_246\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":3801:3920   */\n    tag_342:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_344\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_251\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_345\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_251\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_346\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_254\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_258:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_259:\n        /* \"#utility.yul\":4491:4513   */\n      tag_349\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_258\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_44:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_351\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_259\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_49:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_354\n      tag_246\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":4822:4941   */\n    tag_353:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_355\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_251\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5198   */\n    tag_260:\n        /* \"#utility.yul\":5190:5191   */\n      0x00\n        /* \"#utility.yul\":5187:5188   */\n      dup1\n        /* \"#utility.yul\":5180:5192   */\n      revert\n        /* \"#utility.yul\":5204:5321   */\n    tag_261:\n        /* \"#utility.yul\":5313:5314   */\n      0x00\n        /* \"#utility.yul\":5310:5311   */\n      dup1\n        /* \"#utility.yul\":5303:5315   */\n      revert\n        /* \"#utility.yul\":5327:5444   */\n    tag_262:\n        /* \"#utility.yul\":5436:5437   */\n      0x00\n        /* \"#utility.yul\":5433:5434   */\n      dup1\n        /* \"#utility.yul\":5426:5438   */\n      revert\n        /* \"#utility.yul\":5464:6017   */\n    tag_263:\n        /* \"#utility.yul\":5522:5530   */\n      0x00\n        /* \"#utility.yul\":5532:5538   */\n      dup1\n        /* \"#utility.yul\":5582:5585   */\n      dup4\n        /* \"#utility.yul\":5575:5579   */\n      0x1f\n        /* \"#utility.yul\":5567:5573   */\n      dup5\n        /* \"#utility.yul\":5563:5580   */\n      add\n        /* \"#utility.yul\":5559:5586   */\n      slt\n        /* \"#utility.yul\":5549:5671   */\n      tag_360\n      jumpi\n        /* \"#utility.yul\":5590:5669   */\n      tag_361\n      tag_260\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":5549:5671   */\n    tag_360:\n        /* \"#utility.yul\":5703:5709   */\n      dup3\n        /* \"#utility.yul\":5690:5710   */\n      calldataload\n        /* \"#utility.yul\":5680:5710   */\n      swap1\n      pop\n        /* \"#utility.yul\":5733:5751   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5725:5731   */\n      dup2\n        /* \"#utility.yul\":5722:5752   */\n      gt\n        /* \"#utility.yul\":5719:5836   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":5755:5834   */\n      tag_363\n      tag_261\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":5719:5836   */\n    tag_362:\n        /* \"#utility.yul\":5869:5873   */\n      0x20\n        /* \"#utility.yul\":5861:5867   */\n      dup4\n        /* \"#utility.yul\":5857:5874   */\n      add\n        /* \"#utility.yul\":5845:5874   */\n      swap2\n      pop\n        /* \"#utility.yul\":5923:5926   */\n      dup4\n        /* \"#utility.yul\":5915:5919   */\n      0x01\n        /* \"#utility.yul\":5907:5913   */\n      dup3\n        /* \"#utility.yul\":5903:5920   */\n      mul\n        /* \"#utility.yul\":5893:5901   */\n      dup4\n        /* \"#utility.yul\":5889:5921   */\n      add\n        /* \"#utility.yul\":5886:5927   */\n      gt\n        /* \"#utility.yul\":5883:6011   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":5930:6009   */\n      tag_365\n      tag_262\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":5883:6011   */\n    tag_364:\n        /* \"#utility.yul\":5464:6017   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6023:6697   */\n    tag_61:\n        /* \"#utility.yul\":6103:6109   */\n      0x00\n        /* \"#utility.yul\":6111:6117   */\n      dup1\n        /* \"#utility.yul\":6119:6125   */\n      0x00\n        /* \"#utility.yul\":6168:6170   */\n      0x40\n        /* \"#utility.yul\":6156:6165   */\n      dup5\n        /* \"#utility.yul\":6147:6154   */\n      dup7\n        /* \"#utility.yul\":6143:6166   */\n      sub\n        /* \"#utility.yul\":6139:6171   */\n      slt\n        /* \"#utility.yul\":6136:6255   */\n      iszero\n      tag_367\n      jumpi\n        /* \"#utility.yul\":6174:6253   */\n      tag_368\n      tag_246\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":6136:6255   */\n    tag_367:\n        /* \"#utility.yul\":6322:6323   */\n      0x00\n        /* \"#utility.yul\":6311:6320   */\n      dup5\n        /* \"#utility.yul\":6307:6324   */\n      add\n        /* \"#utility.yul\":6294:6325   */\n      calldataload\n        /* \"#utility.yul\":6352:6370   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6344:6350   */\n      dup2\n        /* \"#utility.yul\":6341:6371   */\n      gt\n        /* \"#utility.yul\":6338:6455   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":6374:6453   */\n      tag_370\n      tag_247\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":6338:6455   */\n    tag_369:\n        /* \"#utility.yul\":6487:6552   */\n      tag_371\n        /* \"#utility.yul\":6544:6551   */\n      dup7\n        /* \"#utility.yul\":6535:6541   */\n      dup3\n        /* \"#utility.yul\":6524:6533   */\n      dup8\n        /* \"#utility.yul\":6520:6542   */\n      add\n        /* \"#utility.yul\":6487:6552   */\n      tag_263\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":6469:6552   */\n      swap4\n      pop\n      swap4\n      pop\n        /* \"#utility.yul\":6265:6562   */\n      pop\n        /* \"#utility.yul\":6601:6603   */\n      0x20\n        /* \"#utility.yul\":6627:6680   */\n      tag_372\n        /* \"#utility.yul\":6672:6679   */\n      dup7\n        /* \"#utility.yul\":6663:6669   */\n      dup3\n        /* \"#utility.yul\":6652:6661   */\n      dup8\n        /* \"#utility.yul\":6648:6670   */\n      add\n        /* \"#utility.yul\":6627:6680   */\n      tag_254\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":6617:6680   */\n      swap2\n      pop\n        /* \"#utility.yul\":6572:6690   */\n      pop\n        /* \"#utility.yul\":6023:6697   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6703:6809   */\n    tag_264:\n        /* \"#utility.yul\":6783:6784   */\n      0x03\n        /* \"#utility.yul\":6776:6781   */\n      dup2\n        /* \"#utility.yul\":6773:6785   */\n      lt\n        /* \"#utility.yul\":6763:6803   */\n      tag_374\n      jumpi\n        /* \"#utility.yul\":6799:6800   */\n      0x00\n        /* \"#utility.yul\":6796:6797   */\n      dup1\n        /* \"#utility.yul\":6789:6801   */\n      revert\n        /* \"#utility.yul\":6763:6803   */\n    tag_374:\n        /* \"#utility.yul\":6703:6809   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6815:6968   */\n    tag_265:\n        /* \"#utility.yul\":6868:6873   */\n      0x00\n        /* \"#utility.yul\":6906:6912   */\n      dup2\n        /* \"#utility.yul\":6893:6913   */\n      calldataload\n        /* \"#utility.yul\":6884:6913   */\n      swap1\n      pop\n        /* \"#utility.yul\":6922:6962   */\n      tag_376\n        /* \"#utility.yul\":6956:6961   */\n      dup2\n        /* \"#utility.yul\":6922:6962   */\n      tag_264\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":6815:6968   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6974:7462   */\n    tag_66:\n        /* \"#utility.yul\":7049:7055   */\n      0x00\n        /* \"#utility.yul\":7057:7063   */\n      dup1\n        /* \"#utility.yul\":7106:7108   */\n      0x40\n        /* \"#utility.yul\":7094:7103   */\n      dup4\n        /* \"#utility.yul\":7085:7092   */\n      dup6\n        /* \"#utility.yul\":7081:7104   */\n      sub\n        /* \"#utility.yul\":7077:7109   */\n      slt\n        /* \"#utility.yul\":7074:7193   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":7112:7191   */\n      tag_379\n      tag_246\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":7074:7193   */\n    tag_378:\n        /* \"#utility.yul\":7232:7233   */\n      0x00\n        /* \"#utility.yul\":7257:7310   */\n      tag_380\n        /* \"#utility.yul\":7302:7309   */\n      dup6\n        /* \"#utility.yul\":7293:7299   */\n      dup3\n        /* \"#utility.yul\":7282:7291   */\n      dup7\n        /* \"#utility.yul\":7278:7300   */\n      add\n        /* \"#utility.yul\":7257:7310   */\n      tag_254\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":7247:7310   */\n      swap3\n      pop\n        /* \"#utility.yul\":7203:7320   */\n      pop\n        /* \"#utility.yul\":7359:7361   */\n      0x20\n        /* \"#utility.yul\":7385:7445   */\n      tag_381\n        /* \"#utility.yul\":7437:7444   */\n      dup6\n        /* \"#utility.yul\":7428:7434   */\n      dup3\n        /* \"#utility.yul\":7417:7426   */\n      dup7\n        /* \"#utility.yul\":7413:7435   */\n      add\n        /* \"#utility.yul\":7385:7445   */\n      tag_265\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":7375:7445   */\n      swap2\n      pop\n        /* \"#utility.yul\":7330:7455   */\n      pop\n        /* \"#utility.yul\":6974:7462   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7468:7797   */\n    tag_73:\n        /* \"#utility.yul\":7527:7533   */\n      0x00\n        /* \"#utility.yul\":7576:7578   */\n      0x20\n        /* \"#utility.yul\":7564:7573   */\n      dup3\n        /* \"#utility.yul\":7555:7562   */\n      dup5\n        /* \"#utility.yul\":7551:7574   */\n      sub\n        /* \"#utility.yul\":7547:7579   */\n      slt\n        /* \"#utility.yul\":7544:7663   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":7582:7661   */\n      tag_384\n      tag_246\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":7544:7663   */\n    tag_383:\n        /* \"#utility.yul\":7702:7703   */\n      0x00\n        /* \"#utility.yul\":7727:7780   */\n      tag_385\n        /* \"#utility.yul\":7772:7779   */\n      dup5\n        /* \"#utility.yul\":7763:7769   */\n      dup3\n        /* \"#utility.yul\":7752:7761   */\n      dup6\n        /* \"#utility.yul\":7748:7770   */\n      add\n        /* \"#utility.yul\":7727:7780   */\n      tag_254\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":7717:7780   */\n      swap2\n      pop\n        /* \"#utility.yul\":7673:7790   */\n      pop\n        /* \"#utility.yul\":7468:7797   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7803:7917   */\n    tag_266:\n        /* \"#utility.yul\":7870:7876   */\n      0x00\n        /* \"#utility.yul\":7904:7909   */\n      dup2\n        /* \"#utility.yul\":7898:7910   */\n      mload\n        /* \"#utility.yul\":7888:7910   */\n      swap1\n      pop\n        /* \"#utility.yul\":7803:7917   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7923:8097   */\n    tag_267:\n        /* \"#utility.yul\":8012:8023   */\n      0x00\n        /* \"#utility.yul\":8046:8052   */\n      dup3\n        /* \"#utility.yul\":8041:8044   */\n      dup3\n        /* \"#utility.yul\":8034:8053   */\n      mstore\n        /* \"#utility.yul\":8086:8090   */\n      0x20\n        /* \"#utility.yul\":8081:8084   */\n      dup3\n        /* \"#utility.yul\":8077:8091   */\n      add\n        /* \"#utility.yul\":8062:8091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7923:8097   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8103:8235   */\n    tag_268:\n        /* \"#utility.yul\":8170:8174   */\n      0x00\n        /* \"#utility.yul\":8193:8196   */\n      dup2\n        /* \"#utility.yul\":8185:8196   */\n      swap1\n      pop\n        /* \"#utility.yul\":8223:8227   */\n      0x20\n        /* \"#utility.yul\":8218:8221   */\n      dup3\n        /* \"#utility.yul\":8214:8228   */\n      add\n        /* \"#utility.yul\":8206:8228   */\n      swap1\n      pop\n        /* \"#utility.yul\":8103:8235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8241:8349   */\n    tag_269:\n        /* \"#utility.yul\":8318:8342   */\n      tag_390\n        /* \"#utility.yul\":8336:8341   */\n      dup2\n        /* \"#utility.yul\":8318:8342   */\n      tag_249\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":8313:8316   */\n      dup3\n        /* \"#utility.yul\":8306:8343   */\n      mstore\n        /* \"#utility.yul\":8241:8349   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8355:8534   */\n    tag_270:\n        /* \"#utility.yul\":8424:8434   */\n      0x00\n        /* \"#utility.yul\":8445:8491   */\n      tag_392\n        /* \"#utility.yul\":8487:8490   */\n      dup4\n        /* \"#utility.yul\":8479:8485   */\n      dup4\n        /* \"#utility.yul\":8445:8491   */\n      tag_269\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":8523:8527   */\n      0x20\n        /* \"#utility.yul\":8518:8521   */\n      dup4\n        /* \"#utility.yul\":8514:8528   */\n      add\n        /* \"#utility.yul\":8500:8528   */\n      swap1\n      pop\n        /* \"#utility.yul\":8355:8534   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8540:8653   */\n    tag_271:\n        /* \"#utility.yul\":8610:8614   */\n      0x00\n        /* \"#utility.yul\":8642:8646   */\n      0x20\n        /* \"#utility.yul\":8637:8640   */\n      dup3\n        /* \"#utility.yul\":8633:8647   */\n      add\n        /* \"#utility.yul\":8625:8647   */\n      swap1\n      pop\n        /* \"#utility.yul\":8540:8653   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8689:9401   */\n    tag_272:\n        /* \"#utility.yul\":8798:8801   */\n      0x00\n        /* \"#utility.yul\":8827:8881   */\n      tag_395\n        /* \"#utility.yul\":8875:8880   */\n      dup3\n        /* \"#utility.yul\":8827:8881   */\n      tag_266\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":8897:8973   */\n      tag_396\n        /* \"#utility.yul\":8966:8972   */\n      dup2\n        /* \"#utility.yul\":8961:8964   */\n      dup6\n        /* \"#utility.yul\":8897:8973   */\n      tag_267\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":8890:8973   */\n      swap4\n      pop\n        /* \"#utility.yul\":8997:9053   */\n      tag_397\n        /* \"#utility.yul\":9047:9052   */\n      dup4\n        /* \"#utility.yul\":8997:9053   */\n      tag_268\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":9076:9083   */\n      dup1\n        /* \"#utility.yul\":9107:9108   */\n      0x00\n        /* \"#utility.yul\":9092:9376   */\n    tag_398:\n        /* \"#utility.yul\":9117:9123   */\n      dup4\n        /* \"#utility.yul\":9114:9115   */\n      dup2\n        /* \"#utility.yul\":9111:9124   */\n      lt\n        /* \"#utility.yul\":9092:9376   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":9193:9199   */\n      dup2\n        /* \"#utility.yul\":9187:9200   */\n      mload\n        /* \"#utility.yul\":9220:9283   */\n      tag_401\n        /* \"#utility.yul\":9279:9282   */\n      dup9\n        /* \"#utility.yul\":9264:9277   */\n      dup3\n        /* \"#utility.yul\":9220:9283   */\n      tag_270\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":9213:9283   */\n      swap8\n      pop\n        /* \"#utility.yul\":9306:9366   */\n      tag_402\n        /* \"#utility.yul\":9359:9365   */\n      dup4\n        /* \"#utility.yul\":9306:9366   */\n      tag_271\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":9296:9366   */\n      swap3\n      pop\n        /* \"#utility.yul\":9152:9376   */\n      pop\n        /* \"#utility.yul\":9139:9140   */\n      0x01\n        /* \"#utility.yul\":9136:9137   */\n      dup2\n        /* \"#utility.yul\":9132:9141   */\n      add\n        /* \"#utility.yul\":9127:9141   */\n      swap1\n      pop\n        /* \"#utility.yul\":9092:9376   */\n      jump(tag_398)\n    tag_400:\n        /* \"#utility.yul\":9096:9110   */\n      pop\n        /* \"#utility.yul\":9392:9395   */\n      dup6\n        /* \"#utility.yul\":9385:9395   */\n      swap4\n      pop\n        /* \"#utility.yul\":8803:9401   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8689:9401   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9407:9566   */\n    tag_273:\n        /* \"#utility.yul\":9481:9492   */\n      0x00\n        /* \"#utility.yul\":9515:9521   */\n      dup3\n        /* \"#utility.yul\":9510:9513   */\n      dup3\n        /* \"#utility.yul\":9503:9522   */\n      mstore\n        /* \"#utility.yul\":9555:9559   */\n      0x20\n        /* \"#utility.yul\":9550:9553   */\n      dup3\n        /* \"#utility.yul\":9546:9560   */\n      add\n        /* \"#utility.yul\":9531:9560   */\n      swap1\n      pop\n        /* \"#utility.yul\":9407:9566   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9572:9929   */\n    tag_274:\n        /* \"#utility.yul\":9650:9653   */\n      0x00\n        /* \"#utility.yul\":9678:9717   */\n      tag_405\n        /* \"#utility.yul\":9711:9716   */\n      dup3\n        /* \"#utility.yul\":9678:9717   */\n      tag_240\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":9733:9794   */\n      tag_406\n        /* \"#utility.yul\":9787:9793   */\n      dup2\n        /* \"#utility.yul\":9782:9785   */\n      dup6\n        /* \"#utility.yul\":9733:9794   */\n      tag_273\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":9726:9794   */\n      swap4\n      pop\n        /* \"#utility.yul\":9803:9868   */\n      tag_407\n        /* \"#utility.yul\":9861:9867   */\n      dup2\n        /* \"#utility.yul\":9856:9859   */\n      dup6\n        /* \"#utility.yul\":9849:9853   */\n      0x20\n        /* \"#utility.yul\":9842:9847   */\n      dup7\n        /* \"#utility.yul\":9838:9854   */\n      add\n        /* \"#utility.yul\":9803:9868   */\n      tag_242\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":9893:9922   */\n      tag_408\n        /* \"#utility.yul\":9915:9921   */\n      dup2\n        /* \"#utility.yul\":9893:9922   */\n      tag_243\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":9888:9891   */\n      dup5\n        /* \"#utility.yul\":9884:9923   */\n      add\n        /* \"#utility.yul\":9877:9923   */\n      swap2\n      pop\n        /* \"#utility.yul\":9654:9929   */\n      pop\n        /* \"#utility.yul\":9572:9929   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9935:10043   */\n    tag_275:\n        /* \"#utility.yul\":10012:10036   */\n      tag_410\n        /* \"#utility.yul\":10030:10035   */\n      dup2\n        /* \"#utility.yul\":10012:10036   */\n      tag_252\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":10007:10010   */\n      dup3\n        /* \"#utility.yul\":10000:10037   */\n      mstore\n        /* \"#utility.yul\":9935:10043   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10049:10148   */\n    tag_276:\n        /* \"#utility.yul\":10120:10141   */\n      tag_412\n        /* \"#utility.yul\":10135:10140   */\n      dup2\n        /* \"#utility.yul\":10120:10141   */\n      tag_255\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":10115:10118   */\n      dup3\n        /* \"#utility.yul\":10108:10142   */\n      mstore\n        /* \"#utility.yul\":10049:10148   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10240:12210   */\n    tag_277:\n        /* \"#utility.yul\":10371:10374   */\n      0x00\n        /* \"#utility.yul\":10407:10413   */\n      0x0120\n        /* \"#utility.yul\":10402:10405   */\n      dup4\n        /* \"#utility.yul\":10398:10414   */\n      add\n        /* \"#utility.yul\":10498:10502   */\n      0x00\n        /* \"#utility.yul\":10491:10496   */\n      dup4\n        /* \"#utility.yul\":10487:10503   */\n      add\n        /* \"#utility.yul\":10481:10504   */\n      mload\n        /* \"#utility.yul\":10551:10554   */\n      dup5\n        /* \"#utility.yul\":10545:10549   */\n      dup3\n        /* \"#utility.yul\":10541:10555   */\n      sub\n        /* \"#utility.yul\":10534:10538   */\n      0x00\n        /* \"#utility.yul\":10529:10532   */\n      dup7\n        /* \"#utility.yul\":10525:10539   */\n      add\n        /* \"#utility.yul\":10518:10556   */\n      mstore\n        /* \"#utility.yul\":10577:10680   */\n      tag_414\n        /* \"#utility.yul\":10675:10679   */\n      dup3\n        /* \"#utility.yul\":10661:10673   */\n      dup3\n        /* \"#utility.yul\":10577:10680   */\n      tag_272\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":10569:10680   */\n      swap2\n      pop\n        /* \"#utility.yul\":10424:10691   */\n      pop\n        /* \"#utility.yul\":10778:10782   */\n      0x20\n        /* \"#utility.yul\":10771:10776   */\n      dup4\n        /* \"#utility.yul\":10767:10783   */\n      add\n        /* \"#utility.yul\":10761:10784   */\n      mload\n        /* \"#utility.yul\":10831:10834   */\n      dup5\n        /* \"#utility.yul\":10825:10829   */\n      dup3\n        /* \"#utility.yul\":10821:10835   */\n      sub\n        /* \"#utility.yul\":10814:10818   */\n      0x20\n        /* \"#utility.yul\":10809:10812   */\n      dup7\n        /* \"#utility.yul\":10805:10819   */\n      add\n        /* \"#utility.yul\":10798:10836   */\n      mstore\n        /* \"#utility.yul\":10857:10930   */\n      tag_415\n        /* \"#utility.yul\":10925:10929   */\n      dup3\n        /* \"#utility.yul\":10911:10923   */\n      dup3\n        /* \"#utility.yul\":10857:10930   */\n      tag_274\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":10849:10930   */\n      swap2\n      pop\n        /* \"#utility.yul\":10701:10941   */\n      pop\n        /* \"#utility.yul\":11025:11029   */\n      0x40\n        /* \"#utility.yul\":11018:11023   */\n      dup4\n        /* \"#utility.yul\":11014:11030   */\n      add\n        /* \"#utility.yul\":11008:11031   */\n      mload\n        /* \"#utility.yul\":11044:11107   */\n      tag_416\n        /* \"#utility.yul\":11101:11105   */\n      0x40\n        /* \"#utility.yul\":11096:11099   */\n      dup7\n        /* \"#utility.yul\":11092:11106   */\n      add\n        /* \"#utility.yul\":11078:11090   */\n      dup3\n        /* \"#utility.yul\":11044:11107   */\n      tag_275\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":10951:11117   */\n      pop\n        /* \"#utility.yul\":11205:11209   */\n      0x60\n        /* \"#utility.yul\":11198:11203   */\n      dup4\n        /* \"#utility.yul\":11194:11210   */\n      add\n        /* \"#utility.yul\":11188:11211   */\n      mload\n        /* \"#utility.yul\":11224:11287   */\n      tag_417\n        /* \"#utility.yul\":11281:11285   */\n      0x60\n        /* \"#utility.yul\":11276:11279   */\n      dup7\n        /* \"#utility.yul\":11272:11286   */\n      add\n        /* \"#utility.yul\":11258:11270   */\n      dup3\n        /* \"#utility.yul\":11224:11287   */\n      tag_275\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":11127:11297   */\n      pop\n        /* \"#utility.yul\":11383:11387   */\n      0x80\n        /* \"#utility.yul\":11376:11381   */\n      dup4\n        /* \"#utility.yul\":11372:11388   */\n      add\n        /* \"#utility.yul\":11366:11389   */\n      mload\n        /* \"#utility.yul\":11402:11465   */\n      tag_418\n        /* \"#utility.yul\":11459:11463   */\n      0x80\n        /* \"#utility.yul\":11454:11457   */\n      dup7\n        /* \"#utility.yul\":11450:11464   */\n      add\n        /* \"#utility.yul\":11436:11448   */\n      dup3\n        /* \"#utility.yul\":11402:11465   */\n      tag_275\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":11307:11475   */\n      pop\n        /* \"#utility.yul\":11565:11569   */\n      0xa0\n        /* \"#utility.yul\":11558:11563   */\n      dup4\n        /* \"#utility.yul\":11554:11570   */\n      add\n        /* \"#utility.yul\":11548:11571   */\n      mload\n        /* \"#utility.yul\":11584:11647   */\n      tag_419\n        /* \"#utility.yul\":11641:11645   */\n      0xa0\n        /* \"#utility.yul\":11636:11639   */\n      dup7\n        /* \"#utility.yul\":11632:11646   */\n      add\n        /* \"#utility.yul\":11618:11630   */\n      dup3\n        /* \"#utility.yul\":11584:11647   */\n      tag_275\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":11485:11657   */\n      pop\n        /* \"#utility.yul\":11747:11751   */\n      0xc0\n        /* \"#utility.yul\":11740:11745   */\n      dup4\n        /* \"#utility.yul\":11736:11752   */\n      add\n        /* \"#utility.yul\":11730:11753   */\n      mload\n        /* \"#utility.yul\":11766:11829   */\n      tag_420\n        /* \"#utility.yul\":11823:11827   */\n      0xc0\n        /* \"#utility.yul\":11818:11821   */\n      dup7\n        /* \"#utility.yul\":11814:11828   */\n      add\n        /* \"#utility.yul\":11800:11812   */\n      dup3\n        /* \"#utility.yul\":11766:11829   */\n      tag_275\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":11667:11839   */\n      pop\n        /* \"#utility.yul\":11923:11927   */\n      0xe0\n        /* \"#utility.yul\":11916:11921   */\n      dup4\n        /* \"#utility.yul\":11912:11928   */\n      add\n        /* \"#utility.yul\":11906:11929   */\n      mload\n        /* \"#utility.yul\":11942:11999   */\n      tag_421\n        /* \"#utility.yul\":11993:11997   */\n      0xe0\n        /* \"#utility.yul\":11988:11991   */\n      dup7\n        /* \"#utility.yul\":11984:11998   */\n      add\n        /* \"#utility.yul\":11970:11982   */\n      dup3\n        /* \"#utility.yul\":11942:11999   */\n      tag_276\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":11849:12009   */\n      pop\n        /* \"#utility.yul\":12093:12099   */\n      0x0100\n        /* \"#utility.yul\":12086:12091   */\n      dup4\n        /* \"#utility.yul\":12082:12100   */\n      add\n        /* \"#utility.yul\":12076:12101   */\n      mload\n        /* \"#utility.yul\":12114:12173   */\n      tag_422\n        /* \"#utility.yul\":12165:12171   */\n      0x0100\n        /* \"#utility.yul\":12160:12163   */\n      dup7\n        /* \"#utility.yul\":12156:12172   */\n      add\n        /* \"#utility.yul\":12142:12154   */\n      dup3\n        /* \"#utility.yul\":12114:12173   */\n      tag_276\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":12019:12183   */\n      pop\n        /* \"#utility.yul\":12200:12204   */\n      dup1\n        /* \"#utility.yul\":12193:12204   */\n      swap2\n      pop\n        /* \"#utility.yul\":10376:12210   */\n      pop\n        /* \"#utility.yul\":10240:12210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12216:12613   */\n    tag_76:\n        /* \"#utility.yul\":12371:12375   */\n      0x00\n        /* \"#utility.yul\":12409:12411   */\n      0x20\n        /* \"#utility.yul\":12398:12407   */\n      dup3\n        /* \"#utility.yul\":12394:12412   */\n      add\n        /* \"#utility.yul\":12386:12412   */\n      swap1\n      pop\n        /* \"#utility.yul\":12458:12467   */\n      dup2\n        /* \"#utility.yul\":12452:12456   */\n      dup2\n        /* \"#utility.yul\":12448:12468   */\n      sub\n        /* \"#utility.yul\":12444:12445   */\n      0x00\n        /* \"#utility.yul\":12433:12442   */\n      dup4\n        /* \"#utility.yul\":12429:12446   */\n      add\n        /* \"#utility.yul\":12422:12469   */\n      mstore\n        /* \"#utility.yul\":12486:12606   */\n      tag_424\n        /* \"#utility.yul\":12601:12605   */\n      dup2\n        /* \"#utility.yul\":12592:12598   */\n      dup5\n        /* \"#utility.yul\":12486:12606   */\n      tag_277\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":12478:12606   */\n      swap1\n      pop\n        /* \"#utility.yul\":12216:12613   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12619:13093   */\n    tag_86:\n        /* \"#utility.yul\":12687:12693   */\n      0x00\n        /* \"#utility.yul\":12695:12701   */\n      dup1\n        /* \"#utility.yul\":12744:12746   */\n      0x40\n        /* \"#utility.yul\":12732:12741   */\n      dup4\n        /* \"#utility.yul\":12723:12730   */\n      dup6\n        /* \"#utility.yul\":12719:12742   */\n      sub\n        /* \"#utility.yul\":12715:12747   */\n      slt\n        /* \"#utility.yul\":12712:12831   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":12750:12829   */\n      tag_427\n      tag_246\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":12712:12831   */\n    tag_426:\n        /* \"#utility.yul\":12870:12871   */\n      0x00\n        /* \"#utility.yul\":12895:12948   */\n      tag_428\n        /* \"#utility.yul\":12940:12947   */\n      dup6\n        /* \"#utility.yul\":12931:12937   */\n      dup3\n        /* \"#utility.yul\":12920:12929   */\n      dup7\n        /* \"#utility.yul\":12916:12938   */\n      add\n        /* \"#utility.yul\":12895:12948   */\n      tag_251\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":12885:12948   */\n      swap3\n      pop\n        /* \"#utility.yul\":12841:12958   */\n      pop\n        /* \"#utility.yul\":12997:12999   */\n      0x20\n        /* \"#utility.yul\":13023:13076   */\n      tag_429\n        /* \"#utility.yul\":13068:13075   */\n      dup6\n        /* \"#utility.yul\":13059:13065   */\n      dup3\n        /* \"#utility.yul\":13048:13057   */\n      dup7\n        /* \"#utility.yul\":13044:13066   */\n      add\n        /* \"#utility.yul\":13023:13076   */\n      tag_251\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":13013:13076   */\n      swap2\n      pop\n        /* \"#utility.yul\":12968:13086   */\n      pop\n        /* \"#utility.yul\":12619:13093   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13099:13279   */\n    tag_278:\n        /* \"#utility.yul\":13147:13224   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13144:13145   */\n      0x00\n        /* \"#utility.yul\":13137:13225   */\n      mstore\n        /* \"#utility.yul\":13244:13248   */\n      0x22\n        /* \"#utility.yul\":13241:13242   */\n      0x04\n        /* \"#utility.yul\":13234:13249   */\n      mstore\n        /* \"#utility.yul\":13268:13272   */\n      0x24\n        /* \"#utility.yul\":13265:13266   */\n      0x00\n        /* \"#utility.yul\":13258:13273   */\n      revert\n        /* \"#utility.yul\":13285:13605   */\n    tag_91:\n        /* \"#utility.yul\":13329:13335   */\n      0x00\n        /* \"#utility.yul\":13366:13367   */\n      0x02\n        /* \"#utility.yul\":13360:13364   */\n      dup3\n        /* \"#utility.yul\":13356:13368   */\n      div\n        /* \"#utility.yul\":13346:13368   */\n      swap1\n      pop\n        /* \"#utility.yul\":13413:13414   */\n      0x01\n        /* \"#utility.yul\":13407:13411   */\n      dup3\n        /* \"#utility.yul\":13403:13415   */\n      and\n        /* \"#utility.yul\":13434:13452   */\n      dup1\n        /* \"#utility.yul\":13424:13505   */\n      tag_432\n      jumpi\n        /* \"#utility.yul\":13490:13494   */\n      0x7f\n        /* \"#utility.yul\":13482:13488   */\n      dup3\n        /* \"#utility.yul\":13478:13495   */\n      and\n        /* \"#utility.yul\":13468:13495   */\n      swap2\n      pop\n        /* \"#utility.yul\":13424:13505   */\n    tag_432:\n        /* \"#utility.yul\":13552:13554   */\n      0x20\n        /* \"#utility.yul\":13544:13550   */\n      dup3\n        /* \"#utility.yul\":13541:13555   */\n      lt\n        /* \"#utility.yul\":13521:13539   */\n      dup2\n        /* \"#utility.yul\":13518:13556   */\n      sub\n        /* \"#utility.yul\":13515:13599   */\n      tag_433\n      jumpi\n        /* \"#utility.yul\":13571:13589   */\n      tag_434\n      tag_278\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":13515:13599   */\n    tag_433:\n        /* \"#utility.yul\":13336:13605   */\n      pop\n        /* \"#utility.yul\":13285:13605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13611:13791   */\n    tag_279:\n        /* \"#utility.yul\":13659:13736   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13656:13657   */\n      0x00\n        /* \"#utility.yul\":13649:13737   */\n      mstore\n        /* \"#utility.yul\":13756:13760   */\n      0x11\n        /* \"#utility.yul\":13753:13754   */\n      0x04\n        /* \"#utility.yul\":13746:13761   */\n      mstore\n        /* \"#utility.yul\":13780:13784   */\n      0x24\n        /* \"#utility.yul\":13777:13778   */\n      0x00\n        /* \"#utility.yul\":13770:13785   */\n      revert\n        /* \"#utility.yul\":13797:13988   */\n    tag_112:\n        /* \"#utility.yul\":13837:13840   */\n      0x00\n        /* \"#utility.yul\":13856:13876   */\n      tag_437\n        /* \"#utility.yul\":13874:13875   */\n      dup3\n        /* \"#utility.yul\":13856:13876   */\n      tag_252\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":13851:13876   */\n      swap2\n      pop\n        /* \"#utility.yul\":13890:13910   */\n      tag_438\n        /* \"#utility.yul\":13908:13909   */\n      dup4\n        /* \"#utility.yul\":13890:13910   */\n      tag_252\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":13885:13910   */\n      swap3\n      pop\n        /* \"#utility.yul\":13933:13934   */\n      dup3\n        /* \"#utility.yul\":13930:13931   */\n      dup3\n        /* \"#utility.yul\":13926:13935   */\n      add\n        /* \"#utility.yul\":13919:13935   */\n      swap1\n      pop\n        /* \"#utility.yul\":13954:13957   */\n      dup1\n        /* \"#utility.yul\":13951:13952   */\n      dup3\n        /* \"#utility.yul\":13948:13958   */\n      gt\n        /* \"#utility.yul\":13945:13981   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":13961:13979   */\n      tag_440\n      tag_279\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":13945:13981   */\n    tag_439:\n        /* \"#utility.yul\":13797:13988   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13994:14091   */\n    tag_280:\n        /* \"#utility.yul\":14053:14059   */\n      0x00\n        /* \"#utility.yul\":14081:14084   */\n      dup3\n        /* \"#utility.yul\":14071:14084   */\n      swap1\n      pop\n        /* \"#utility.yul\":13994:14091   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14097:14277   */\n    tag_281:\n        /* \"#utility.yul\":14145:14222   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14142:14143   */\n      0x00\n        /* \"#utility.yul\":14135:14223   */\n      mstore\n        /* \"#utility.yul\":14242:14246   */\n      0x41\n        /* \"#utility.yul\":14239:14240   */\n      0x04\n        /* \"#utility.yul\":14232:14247   */\n      mstore\n        /* \"#utility.yul\":14266:14270   */\n      0x24\n        /* \"#utility.yul\":14263:14264   */\n      0x00\n        /* \"#utility.yul\":14256:14271   */\n      revert\n        /* \"#utility.yul\":14283:14424   */\n    tag_282:\n        /* \"#utility.yul\":14332:14336   */\n      0x00\n        /* \"#utility.yul\":14355:14358   */\n      dup2\n        /* \"#utility.yul\":14347:14358   */\n      swap1\n      pop\n        /* \"#utility.yul\":14378:14381   */\n      dup2\n        /* \"#utility.yul\":14375:14376   */\n      0x00\n        /* \"#utility.yul\":14368:14382   */\n      mstore\n        /* \"#utility.yul\":14412:14416   */\n      0x20\n        /* \"#utility.yul\":14409:14410   */\n      0x00\n        /* \"#utility.yul\":14399:14417   */\n      keccak256\n        /* \"#utility.yul\":14391:14417   */\n      swap1\n      pop\n        /* \"#utility.yul\":14283:14424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14430:14523   */\n    tag_283:\n        /* \"#utility.yul\":14467:14473   */\n      0x00\n        /* \"#utility.yul\":14514:14516   */\n      0x20\n        /* \"#utility.yul\":14509:14511   */\n      0x1f\n        /* \"#utility.yul\":14502:14507   */\n      dup4\n        /* \"#utility.yul\":14498:14512   */\n      add\n        /* \"#utility.yul\":14494:14517   */\n      div\n        /* \"#utility.yul\":14484:14517   */\n      swap1\n      pop\n        /* \"#utility.yul\":14430:14523   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14529:14636   */\n    tag_284:\n        /* \"#utility.yul\":14573:14581   */\n      0x00\n        /* \"#utility.yul\":14623:14628   */\n      dup3\n        /* \"#utility.yul\":14617:14621   */\n      dup3\n        /* \"#utility.yul\":14613:14629   */\n      shl\n        /* \"#utility.yul\":14592:14629   */\n      swap1\n      pop\n        /* \"#utility.yul\":14529:14636   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14642:15035   */\n    tag_285:\n        /* \"#utility.yul\":14711:14717   */\n      0x00\n        /* \"#utility.yul\":14761:14762   */\n      0x08\n        /* \"#utility.yul\":14749:14759   */\n      dup4\n        /* \"#utility.yul\":14745:14763   */\n      mul\n        /* \"#utility.yul\":14784:14881   */\n      tag_447\n        /* \"#utility.yul\":14814:14880   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14803:14812   */\n      dup3\n        /* \"#utility.yul\":14784:14881   */\n      tag_284\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":14902:14941   */\n      tag_448\n        /* \"#utility.yul\":14932:14940   */\n      dup7\n        /* \"#utility.yul\":14921:14930   */\n      dup4\n        /* \"#utility.yul\":14902:14941   */\n      tag_284\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":14890:14941   */\n      swap6\n      pop\n        /* \"#utility.yul\":14974:14978   */\n      dup1\n        /* \"#utility.yul\":14970:14979   */\n      not\n        /* \"#utility.yul\":14963:14968   */\n      dup5\n        /* \"#utility.yul\":14959:14980   */\n      and\n        /* \"#utility.yul\":14950:14980   */\n      swap4\n      pop\n        /* \"#utility.yul\":15023:15027   */\n      dup1\n        /* \"#utility.yul\":15013:15021   */\n      dup7\n        /* \"#utility.yul\":15009:15028   */\n      and\n        /* \"#utility.yul\":15002:15007   */\n      dup5\n        /* \"#utility.yul\":14999:15029   */\n      or\n        /* \"#utility.yul\":14989:15029   */\n      swap3\n      pop\n        /* \"#utility.yul\":14718:15035   */\n      pop\n      pop\n        /* \"#utility.yul\":14642:15035   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15041:15101   */\n    tag_286:\n        /* \"#utility.yul\":15069:15072   */\n      0x00\n        /* \"#utility.yul\":15090:15095   */\n      dup2\n        /* \"#utility.yul\":15083:15095   */\n      swap1\n      pop\n        /* \"#utility.yul\":15041:15101   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15107:15249   */\n    tag_287:\n        /* \"#utility.yul\":15157:15166   */\n      0x00\n        /* \"#utility.yul\":15190:15243   */\n      tag_451\n        /* \"#utility.yul\":15208:15242   */\n      tag_452\n        /* \"#utility.yul\":15217:15241   */\n      tag_453\n        /* \"#utility.yul\":15235:15240   */\n      dup5\n        /* \"#utility.yul\":15217:15241   */\n      tag_252\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":15208:15242   */\n      tag_286\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":15190:15243   */\n      tag_252\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":15177:15243   */\n      swap1\n      pop\n        /* \"#utility.yul\":15107:15249   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15255:15330   */\n    tag_288:\n        /* \"#utility.yul\":15298:15301   */\n      0x00\n        /* \"#utility.yul\":15319:15324   */\n      dup2\n        /* \"#utility.yul\":15312:15324   */\n      swap1\n      pop\n        /* \"#utility.yul\":15255:15330   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15336:15605   */\n    tag_289:\n        /* \"#utility.yul\":15446:15485   */\n      tag_456\n        /* \"#utility.yul\":15477:15484   */\n      dup4\n        /* \"#utility.yul\":15446:15485   */\n      tag_287\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":15507:15598   */\n      tag_457\n        /* \"#utility.yul\":15556:15597   */\n      tag_458\n        /* \"#utility.yul\":15580:15596   */\n      dup3\n        /* \"#utility.yul\":15556:15597   */\n      tag_288\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":15548:15554   */\n      dup5\n        /* \"#utility.yul\":15541:15545   */\n      dup5\n        /* \"#utility.yul\":15535:15546   */\n      sload\n        /* \"#utility.yul\":15507:15598   */\n      tag_285\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":15501:15505   */\n      dup3\n        /* \"#utility.yul\":15494:15599   */\n      sstore\n        /* \"#utility.yul\":15412:15605   */\n      pop\n        /* \"#utility.yul\":15336:15605   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15611:15684   */\n    tag_290:\n        /* \"#utility.yul\":15656:15659   */\n      0x00\n        /* \"#utility.yul\":15611:15684   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15690:15879   */\n    tag_291:\n        /* \"#utility.yul\":15767:15799   */\n      tag_461\n      tag_290\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":15808:15873   */\n      tag_462\n        /* \"#utility.yul\":15866:15872   */\n      dup2\n        /* \"#utility.yul\":15858:15864   */\n      dup5\n        /* \"#utility.yul\":15852:15856   */\n      dup5\n        /* \"#utility.yul\":15808:15873   */\n      tag_289\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":15743:15879   */\n      pop\n        /* \"#utility.yul\":15690:15879   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15885:16071   */\n    tag_292:\n        /* \"#utility.yul\":15945:16065   */\n    tag_464:\n        /* \"#utility.yul\":15962:15965   */\n      dup2\n        /* \"#utility.yul\":15955:15960   */\n      dup2\n        /* \"#utility.yul\":15952:15966   */\n      lt\n        /* \"#utility.yul\":15945:16065   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":16016:16055   */\n      tag_467\n        /* \"#utility.yul\":16053:16054   */\n      0x00\n        /* \"#utility.yul\":16046:16051   */\n      dup3\n        /* \"#utility.yul\":16016:16055   */\n      tag_291\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":15989:15990   */\n      0x01\n        /* \"#utility.yul\":15982:15987   */\n      dup2\n        /* \"#utility.yul\":15978:15991   */\n      add\n        /* \"#utility.yul\":15969:15991   */\n      swap1\n      pop\n        /* \"#utility.yul\":15945:16065   */\n      jump(tag_464)\n    tag_466:\n        /* \"#utility.yul\":15885:16071   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16077:16620   */\n    tag_293:\n        /* \"#utility.yul\":16178:16180   */\n      0x1f\n        /* \"#utility.yul\":16173:16176   */\n      dup3\n        /* \"#utility.yul\":16170:16181   */\n      gt\n        /* \"#utility.yul\":16167:16613   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":16212:16250   */\n      tag_470\n        /* \"#utility.yul\":16244:16249   */\n      dup2\n        /* \"#utility.yul\":16212:16250   */\n      tag_282\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":16296:16325   */\n      tag_471\n        /* \"#utility.yul\":16314:16324   */\n      dup5\n        /* \"#utility.yul\":16296:16325   */\n      tag_283\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":16286:16294   */\n      dup2\n        /* \"#utility.yul\":16282:16326   */\n      add\n        /* \"#utility.yul\":16479:16481   */\n      0x20\n        /* \"#utility.yul\":16467:16477   */\n      dup6\n        /* \"#utility.yul\":16464:16482   */\n      lt\n        /* \"#utility.yul\":16461:16510   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":16500:16508   */\n      dup2\n        /* \"#utility.yul\":16485:16508   */\n      swap1\n      pop\n        /* \"#utility.yul\":16461:16510   */\n    tag_472:\n        /* \"#utility.yul\":16523:16603   */\n      tag_473\n        /* \"#utility.yul\":16579:16601   */\n      tag_474\n        /* \"#utility.yul\":16597:16600   */\n      dup6\n        /* \"#utility.yul\":16579:16601   */\n      tag_283\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":16569:16577   */\n      dup4\n        /* \"#utility.yul\":16565:16602   */\n      add\n        /* \"#utility.yul\":16552:16563   */\n      dup3\n        /* \"#utility.yul\":16523:16603   */\n      tag_292\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":16182:16613   */\n      pop\n      pop\n        /* \"#utility.yul\":16167:16613   */\n    tag_469:\n        /* \"#utility.yul\":16077:16620   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16626:16743   */\n    tag_294:\n        /* \"#utility.yul\":16680:16688   */\n      0x00\n        /* \"#utility.yul\":16730:16735   */\n      dup3\n        /* \"#utility.yul\":16724:16728   */\n      dup3\n        /* \"#utility.yul\":16720:16736   */\n      shr\n        /* \"#utility.yul\":16699:16736   */\n      swap1\n      pop\n        /* \"#utility.yul\":16626:16743   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16749:16918   */\n    tag_295:\n        /* \"#utility.yul\":16793:16799   */\n      0x00\n        /* \"#utility.yul\":16826:16877   */\n      tag_477\n        /* \"#utility.yul\":16874:16875   */\n      0x00\n        /* \"#utility.yul\":16870:16876   */\n      not\n        /* \"#utility.yul\":16862:16867   */\n      dup5\n        /* \"#utility.yul\":16859:16860   */\n      0x08\n        /* \"#utility.yul\":16855:16868   */\n      mul\n        /* \"#utility.yul\":16826:16877   */\n      tag_294\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":16822:16878   */\n      not\n        /* \"#utility.yul\":16907:16911   */\n      dup1\n        /* \"#utility.yul\":16901:16905   */\n      dup4\n        /* \"#utility.yul\":16897:16912   */\n      and\n        /* \"#utility.yul\":16887:16912   */\n      swap2\n      pop\n        /* \"#utility.yul\":16800:16918   */\n      pop\n        /* \"#utility.yul\":16749:16918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16923:17218   */\n    tag_296:\n        /* \"#utility.yul\":16999:17003   */\n      0x00\n        /* \"#utility.yul\":17145:17174   */\n      tag_479\n        /* \"#utility.yul\":17170:17173   */\n      dup4\n        /* \"#utility.yul\":17164:17168   */\n      dup4\n        /* \"#utility.yul\":17145:17174   */\n      tag_295\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":17137:17174   */\n      swap2\n      pop\n        /* \"#utility.yul\":17207:17210   */\n      dup3\n        /* \"#utility.yul\":17204:17205   */\n      0x02\n        /* \"#utility.yul\":17200:17211   */\n      mul\n        /* \"#utility.yul\":17194:17198   */\n      dup3\n        /* \"#utility.yul\":17191:17212   */\n      or\n        /* \"#utility.yul\":17183:17212   */\n      swap1\n      pop\n        /* \"#utility.yul\":16923:17218   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17223:18626   */\n    tag_125:\n        /* \"#utility.yul\":17347:17391   */\n      tag_481\n        /* \"#utility.yul\":17387:17390   */\n      dup4\n        /* \"#utility.yul\":17382:17385   */\n      dup4\n        /* \"#utility.yul\":17347:17391   */\n      tag_280\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":17456:17474   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17448:17454   */\n      dup2\n        /* \"#utility.yul\":17445:17475   */\n      gt\n        /* \"#utility.yul\":17442:17498   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":17478:17496   */\n      tag_483\n      tag_281\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":17442:17498   */\n    tag_482:\n        /* \"#utility.yul\":17522:17560   */\n      tag_484\n        /* \"#utility.yul\":17554:17558   */\n      dup3\n        /* \"#utility.yul\":17548:17559   */\n      sload\n        /* \"#utility.yul\":17522:17560   */\n      tag_91\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":17607:17674   */\n      tag_485\n        /* \"#utility.yul\":17667:17673   */\n      dup3\n        /* \"#utility.yul\":17659:17665   */\n      dup3\n        /* \"#utility.yul\":17653:17657   */\n      dup6\n        /* \"#utility.yul\":17607:17674   */\n      tag_293\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":17701:17702   */\n      0x00\n        /* \"#utility.yul\":17730:17732   */\n      0x1f\n        /* \"#utility.yul\":17722:17728   */\n      dup4\n        /* \"#utility.yul\":17719:17733   */\n      gt\n        /* \"#utility.yul\":17747:17748   */\n      0x01\n        /* \"#utility.yul\":17742:18374   */\n      dup2\n      eq\n      tag_487\n      jumpi\n        /* \"#utility.yul\":18418:18419   */\n      0x00\n        /* \"#utility.yul\":18435:18441   */\n      dup5\n        /* \"#utility.yul\":18432:18516   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":18491:18500   */\n      dup3\n        /* \"#utility.yul\":18486:18489   */\n      dup8\n        /* \"#utility.yul\":18482:18501   */\n      add\n        /* \"#utility.yul\":18469:18502   */\n      calldataload\n        /* \"#utility.yul\":18460:18502   */\n      swap1\n      pop\n        /* \"#utility.yul\":18432:18516   */\n    tag_488:\n        /* \"#utility.yul\":18542:18609   */\n      tag_489\n        /* \"#utility.yul\":18602:18608   */\n      dup6\n        /* \"#utility.yul\":18595:18600   */\n      dup3\n        /* \"#utility.yul\":18542:18609   */\n      tag_296\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":18536:18540   */\n      dup7\n        /* \"#utility.yul\":18529:18610   */\n      sstore\n        /* \"#utility.yul\":18391:18620   */\n      pop\n        /* \"#utility.yul\":17712:18620   */\n      jump(tag_486)\n        /* \"#utility.yul\":17742:18374   */\n    tag_487:\n        /* \"#utility.yul\":17794:17798   */\n      0x1f\n        /* \"#utility.yul\":17790:17799   */\n      not\n        /* \"#utility.yul\":17782:17788   */\n      dup5\n        /* \"#utility.yul\":17778:17800   */\n      and\n        /* \"#utility.yul\":17828:17865   */\n      tag_490\n        /* \"#utility.yul\":17860:17864   */\n      dup7\n        /* \"#utility.yul\":17828:17865   */\n      tag_282\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":17887:17888   */\n      0x00\n        /* \"#utility.yul\":17901:18116   */\n    tag_491:\n        /* \"#utility.yul\":17915:17922   */\n      dup3\n        /* \"#utility.yul\":17912:17913   */\n      dup2\n        /* \"#utility.yul\":17909:17923   */\n      lt\n        /* \"#utility.yul\":17901:18116   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":18001:18010   */\n      dup5\n        /* \"#utility.yul\":17996:17999   */\n      dup10\n        /* \"#utility.yul\":17992:18011   */\n      add\n        /* \"#utility.yul\":17979:18012   */\n      calldataload\n        /* \"#utility.yul\":17971:17977   */\n      dup3\n        /* \"#utility.yul\":17964:18013   */\n      sstore\n        /* \"#utility.yul\":18052:18053   */\n      0x01\n        /* \"#utility.yul\":18044:18050   */\n      dup3\n        /* \"#utility.yul\":18040:18054   */\n      add\n        /* \"#utility.yul\":18030:18054   */\n      swap2\n      pop\n        /* \"#utility.yul\":18099:18101   */\n      0x20\n        /* \"#utility.yul\":18088:18097   */\n      dup6\n        /* \"#utility.yul\":18084:18102   */\n      add\n        /* \"#utility.yul\":18071:18102   */\n      swap5\n      pop\n        /* \"#utility.yul\":17938:17942   */\n      0x20\n        /* \"#utility.yul\":17935:17936   */\n      dup2\n        /* \"#utility.yul\":17931:17943   */\n      add\n        /* \"#utility.yul\":17926:17943   */\n      swap1\n      pop\n        /* \"#utility.yul\":17901:18116   */\n      jump(tag_491)\n    tag_493:\n        /* \"#utility.yul\":18144:18150   */\n      dup7\n        /* \"#utility.yul\":18135:18142   */\n      dup4\n        /* \"#utility.yul\":18132:18151   */\n      lt\n        /* \"#utility.yul\":18129:18315   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":18209:18218   */\n      dup5\n        /* \"#utility.yul\":18204:18207   */\n      dup10\n        /* \"#utility.yul\":18200:18219   */\n      add\n        /* \"#utility.yul\":18187:18220   */\n      calldataload\n        /* \"#utility.yul\":18252:18300   */\n      tag_495\n        /* \"#utility.yul\":18294:18298   */\n      0x1f\n        /* \"#utility.yul\":18286:18292   */\n      dup10\n        /* \"#utility.yul\":18282:18299   */\n      and\n        /* \"#utility.yul\":18271:18280   */\n      dup3\n        /* \"#utility.yul\":18252:18300   */\n      tag_295\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":18244:18250   */\n      dup4\n        /* \"#utility.yul\":18237:18301   */\n      sstore\n        /* \"#utility.yul\":18152:18315   */\n      pop\n        /* \"#utility.yul\":18129:18315   */\n    tag_494:\n        /* \"#utility.yul\":18361:18362   */\n      0x01\n        /* \"#utility.yul\":18357:18358   */\n      0x02\n        /* \"#utility.yul\":18349:18355   */\n      dup9\n        /* \"#utility.yul\":18345:18359   */\n      mul\n        /* \"#utility.yul\":18341:18363   */\n      add\n        /* \"#utility.yul\":18335:18339   */\n      dup9\n        /* \"#utility.yul\":18328:18364   */\n      sstore\n        /* \"#utility.yul\":17749:18374   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17712:18620   */\n    tag_486:\n      pop\n        /* \"#utility.yul\":17322:18626   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17223:18626   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18632:18826   */\n    tag_127:\n        /* \"#utility.yul\":18672:18676   */\n      0x00\n        /* \"#utility.yul\":18692:18712   */\n      tag_497\n        /* \"#utility.yul\":18710:18711   */\n      dup3\n        /* \"#utility.yul\":18692:18712   */\n      tag_252\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":18687:18712   */\n      swap2\n      pop\n        /* \"#utility.yul\":18726:18746   */\n      tag_498\n        /* \"#utility.yul\":18744:18745   */\n      dup4\n        /* \"#utility.yul\":18726:18746   */\n      tag_252\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":18721:18746   */\n      swap3\n      pop\n        /* \"#utility.yul\":18770:18771   */\n      dup3\n        /* \"#utility.yul\":18767:18768   */\n      dup3\n        /* \"#utility.yul\":18763:18772   */\n      sub\n        /* \"#utility.yul\":18755:18772   */\n      swap1\n      pop\n        /* \"#utility.yul\":18794:18795   */\n      dup2\n        /* \"#utility.yul\":18788:18792   */\n      dup2\n        /* \"#utility.yul\":18785:18796   */\n      gt\n        /* \"#utility.yul\":18782:18819   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":18799:18817   */\n      tag_500\n      tag_279\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":18782:18819   */\n    tag_499:\n        /* \"#utility.yul\":18632:18826   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18832:19012   */\n    tag_131:\n        /* \"#utility.yul\":18880:18957   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18877:18878   */\n      0x00\n        /* \"#utility.yul\":18870:18958   */\n      mstore\n        /* \"#utility.yul\":18977:18981   */\n      0x32\n        /* \"#utility.yul\":18974:18975   */\n      0x04\n        /* \"#utility.yul\":18967:18982   */\n      mstore\n        /* \"#utility.yul\":19001:19005   */\n      0x24\n        /* \"#utility.yul\":18998:18999   */\n      0x00\n        /* \"#utility.yul\":18991:19006   */\n      revert\n        /* \"#utility.yul\":19018:19198   */\n    tag_141:\n        /* \"#utility.yul\":19066:19143   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19063:19064   */\n      0x00\n        /* \"#utility.yul\":19056:19144   */\n      mstore\n        /* \"#utility.yul\":19163:19167   */\n      0x21\n        /* \"#utility.yul\":19160:19161   */\n      0x04\n        /* \"#utility.yul\":19153:19168   */\n      mstore\n        /* \"#utility.yul\":19187:19191   */\n      0x24\n        /* \"#utility.yul\":19184:19185   */\n      0x00\n        /* \"#utility.yul\":19177:19192   */\n      revert\n        /* \"#utility.yul\":19204:19322   */\n    tag_297:\n        /* \"#utility.yul\":19291:19315   */\n      tag_504\n        /* \"#utility.yul\":19309:19314   */\n      dup2\n        /* \"#utility.yul\":19291:19315   */\n      tag_249\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":19286:19289   */\n      dup3\n        /* \"#utility.yul\":19279:19316   */\n      mstore\n        /* \"#utility.yul\":19204:19322   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19328:19770   */\n    tag_192:\n        /* \"#utility.yul\":19477:19481   */\n      0x00\n        /* \"#utility.yul\":19515:19517   */\n      0x60\n        /* \"#utility.yul\":19504:19513   */\n      dup3\n        /* \"#utility.yul\":19500:19518   */\n      add\n        /* \"#utility.yul\":19492:19518   */\n      swap1\n      pop\n        /* \"#utility.yul\":19528:19599   */\n      tag_506\n        /* \"#utility.yul\":19596:19597   */\n      0x00\n        /* \"#utility.yul\":19585:19594   */\n      dup4\n        /* \"#utility.yul\":19581:19598   */\n      add\n        /* \"#utility.yul\":19572:19578   */\n      dup7\n        /* \"#utility.yul\":19528:19599   */\n      tag_297\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":19609:19681   */\n      tag_507\n        /* \"#utility.yul\":19677:19679   */\n      0x20\n        /* \"#utility.yul\":19666:19675   */\n      dup4\n        /* \"#utility.yul\":19662:19680   */\n      add\n        /* \"#utility.yul\":19653:19659   */\n      dup6\n        /* \"#utility.yul\":19609:19681   */\n      tag_257\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":19691:19763   */\n      tag_508\n        /* \"#utility.yul\":19759:19761   */\n      0x40\n        /* \"#utility.yul\":19748:19757   */\n      dup4\n        /* \"#utility.yul\":19744:19762   */\n      add\n        /* \"#utility.yul\":19735:19741   */\n      dup5\n        /* \"#utility.yul\":19691:19763   */\n      tag_257\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":19328:19770   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19776:19998   */\n    tag_197:\n        /* \"#utility.yul\":19869:19873   */\n      0x00\n        /* \"#utility.yul\":19907:19909   */\n      0x20\n        /* \"#utility.yul\":19896:19905   */\n      dup3\n        /* \"#utility.yul\":19892:19910   */\n      add\n        /* \"#utility.yul\":19884:19910   */\n      swap1\n      pop\n        /* \"#utility.yul\":19920:19991   */\n      tag_510\n        /* \"#utility.yul\":19988:19989   */\n      0x00\n        /* \"#utility.yul\":19977:19986   */\n      dup4\n        /* \"#utility.yul\":19973:19990   */\n      add\n        /* \"#utility.yul\":19964:19970   */\n      dup5\n        /* \"#utility.yul\":19920:19991   */\n      tag_297\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":19776:19998   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ad8b52685fce24c8d059e75d65eaec6fd9d8cd0d2ccd1ed1bf32f0e8cb7709ba64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_102": {
									"entryPoint": null,
									"id": 102,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_543": {
									"entryPoint": null,
									"id": 543,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1225,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 1335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 1137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1047,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 703,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1211,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 325,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 280,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1064,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1068,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1060,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1056,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 463,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 641,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8467:7",
										"nodeType": "YulBlock",
										"src": "0:8467:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "140:152:7",
													"nodeType": "YulBlock",
													"src": "140:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:7",
																		"nodeType": "YulLiteral",
																		"src": "157:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:7",
																		"nodeType": "YulLiteral",
																		"src": "160:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:7"
																},
																"nativeSrc": "150:88:7",
																"nodeType": "YulFunctionCall",
																"src": "150:88:7"
															},
															"nativeSrc": "150:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:7",
																		"nodeType": "YulLiteral",
																		"src": "254:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:7",
																		"nodeType": "YulLiteral",
																		"src": "257:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:7"
																},
																"nativeSrc": "247:15:7",
																"nodeType": "YulFunctionCall",
																"src": "247:15:7"
															},
															"nativeSrc": "247:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:7",
																		"nodeType": "YulLiteral",
																		"src": "278:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:7",
																		"nodeType": "YulLiteral",
																		"src": "281:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:7"
																},
																"nativeSrc": "271:15:7",
																"nodeType": "YulFunctionCall",
																"src": "271:15:7"
															},
															"nativeSrc": "271:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:7"
											},
											{
												"body": {
													"nativeSrc": "326:152:7",
													"nodeType": "YulBlock",
													"src": "326:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:7",
																		"nodeType": "YulLiteral",
																		"src": "343:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:7",
																		"nodeType": "YulLiteral",
																		"src": "346:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:7"
																},
																"nativeSrc": "336:88:7",
																"nodeType": "YulFunctionCall",
																"src": "336:88:7"
															},
															"nativeSrc": "336:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:7",
																		"nodeType": "YulLiteral",
																		"src": "440:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:7",
																		"nodeType": "YulLiteral",
																		"src": "443:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:7"
																},
																"nativeSrc": "433:15:7",
																"nodeType": "YulFunctionCall",
																"src": "433:15:7"
															},
															"nativeSrc": "433:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:7",
																		"nodeType": "YulLiteral",
																		"src": "464:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:7",
																		"nodeType": "YulLiteral",
																		"src": "467:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:7"
																},
																"nativeSrc": "457:15:7",
																"nodeType": "YulFunctionCall",
																"src": "457:15:7"
															},
															"nativeSrc": "457:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:7"
											},
											{
												"body": {
													"nativeSrc": "535:269:7",
													"nodeType": "YulBlock",
													"src": "535:269:7",
													"statements": [
														{
															"nativeSrc": "545:22:7",
															"nodeType": "YulAssignment",
															"src": "545:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:7",
																		"nodeType": "YulLiteral",
																		"src": "565:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:7"
																},
																"nativeSrc": "555:12:7",
																"nodeType": "YulFunctionCall",
																"src": "555:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:7"
																}
															]
														},
														{
															"nativeSrc": "576:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:7",
																		"nodeType": "YulLiteral",
																		"src": "612:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:7"
																},
																"nativeSrc": "602:12:7",
																"nodeType": "YulFunctionCall",
																"src": "602:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:7",
																	"nodeType": "YulTypedName",
																	"src": "580:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:7",
																"nodeType": "YulBlock",
																"src": "653:51:7",
																"statements": [
																	{
																		"nativeSrc": "667:27:7",
																		"nodeType": "YulAssignment",
																		"src": "667:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:7",
																					"nodeType": "YulLiteral",
																					"src": "689:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:7"
																			},
																			"nativeSrc": "677:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:7"
																},
																"nativeSrc": "626:26:7",
																"nodeType": "YulFunctionCall",
																"src": "626:26:7"
															},
															"nativeSrc": "623:81:7",
															"nodeType": "YulIf",
															"src": "623:81:7"
														},
														{
															"body": {
																"nativeSrc": "756:42:7",
																"nodeType": "YulBlock",
																"src": "756:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:7"
																			},
																			"nativeSrc": "770:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:7"
																		},
																		"nativeSrc": "770:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:7",
																				"nodeType": "YulLiteral",
																				"src": "751:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:7"
																		},
																		"nativeSrc": "740:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:7"
																},
																"nativeSrc": "717:38:7",
																"nodeType": "YulFunctionCall",
																"src": "717:38:7"
															},
															"nativeSrc": "714:84:7",
															"nodeType": "YulIf",
															"src": "714:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:7",
														"nodeType": "YulTypedName",
														"src": "519:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:7",
														"nodeType": "YulTypedName",
														"src": "528:6:7",
														"type": ""
													}
												],
												"src": "484:320:7"
											},
											{
												"body": {
													"nativeSrc": "864:87:7",
													"nodeType": "YulBlock",
													"src": "864:87:7",
													"statements": [
														{
															"nativeSrc": "874:11:7",
															"nodeType": "YulAssignment",
															"src": "874:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:7",
																"nodeType": "YulIdentifier",
																"src": "882:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:7",
																		"nodeType": "YulLiteral",
																		"src": "902:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:7"
																},
																"nativeSrc": "895:14:7",
																"nodeType": "YulFunctionCall",
																"src": "895:14:7"
															},
															"nativeSrc": "895:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:7"
														},
														{
															"nativeSrc": "918:26:7",
															"nodeType": "YulAssignment",
															"src": "918:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:7",
																		"nodeType": "YulLiteral",
																		"src": "936:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:7",
																		"nodeType": "YulLiteral",
																		"src": "939:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:7"
																},
																"nativeSrc": "926:18:7",
																"nodeType": "YulFunctionCall",
																"src": "926:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:7",
														"nodeType": "YulTypedName",
														"src": "851:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:7",
														"nodeType": "YulTypedName",
														"src": "859:4:7",
														"type": ""
													}
												],
												"src": "810:141:7"
											},
											{
												"body": {
													"nativeSrc": "1001:49:7",
													"nodeType": "YulBlock",
													"src": "1001:49:7",
													"statements": [
														{
															"nativeSrc": "1011:33:7",
															"nodeType": "YulAssignment",
															"src": "1011:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:7"
																		},
																		"nativeSrc": "1025:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:7"
																},
																"nativeSrc": "1021:23:7",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:7",
														"nodeType": "YulTypedName",
														"src": "984:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:7",
														"nodeType": "YulTypedName",
														"src": "994:6:7",
														"type": ""
													}
												],
												"src": "957:93:7"
											},
											{
												"body": {
													"nativeSrc": "1109:54:7",
													"nodeType": "YulBlock",
													"src": "1109:54:7",
													"statements": [
														{
															"nativeSrc": "1119:37:7",
															"nodeType": "YulAssignment",
															"src": "1119:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:7"
																},
																"nativeSrc": "1140:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:7",
														"nodeType": "YulTypedName",
														"src": "1084:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:7",
														"nodeType": "YulTypedName",
														"src": "1090:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:7",
														"nodeType": "YulTypedName",
														"src": "1100:8:7",
														"type": ""
													}
												],
												"src": "1056:107:7"
											},
											{
												"body": {
													"nativeSrc": "1245:317:7",
													"nodeType": "YulBlock",
													"src": "1245:317:7",
													"statements": [
														{
															"nativeSrc": "1255:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:7"
																},
																"nativeSrc": "1272:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:7",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:7",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:7"
																},
																"nativeSrc": "1311:97:7",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:7",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:7",
															"nodeType": "YulAssignment",
															"src": "1417:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:7"
																},
																"nativeSrc": "1429:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:7"
																}
															]
														},
														{
															"nativeSrc": "1477:30:7",
															"nodeType": "YulAssignment",
															"src": "1477:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:7"
																		},
																		"nativeSrc": "1497:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:7"
																},
																"nativeSrc": "1486:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:7"
																}
															]
														},
														{
															"nativeSrc": "1516:40:7",
															"nodeType": "YulAssignment",
															"src": "1516:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:7"
																		},
																		"nativeSrc": "1536:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:7"
																},
																"nativeSrc": "1526:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:7",
														"nodeType": "YulTypedName",
														"src": "1206:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:7",
														"nodeType": "YulTypedName",
														"src": "1213:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:7",
														"nodeType": "YulTypedName",
														"src": "1225:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:7",
														"nodeType": "YulTypedName",
														"src": "1238:6:7",
														"type": ""
													}
												],
												"src": "1169:393:7"
											},
											{
												"body": {
													"nativeSrc": "1613:32:7",
													"nodeType": "YulBlock",
													"src": "1613:32:7",
													"statements": [
														{
															"nativeSrc": "1623:16:7",
															"nodeType": "YulAssignment",
															"src": "1623:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:7",
																"nodeType": "YulIdentifier",
																"src": "1634:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:7",
														"nodeType": "YulTypedName",
														"src": "1595:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:7",
														"nodeType": "YulTypedName",
														"src": "1605:7:7",
														"type": ""
													}
												],
												"src": "1568:77:7"
											},
											{
												"body": {
													"nativeSrc": "1683:28:7",
													"nodeType": "YulBlock",
													"src": "1683:28:7",
													"statements": [
														{
															"nativeSrc": "1693:12:7",
															"nodeType": "YulAssignment",
															"src": "1693:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:7",
																"nodeType": "YulIdentifier",
																"src": "1700:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:7",
														"nodeType": "YulTypedName",
														"src": "1669:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:7",
														"nodeType": "YulTypedName",
														"src": "1679:3:7",
														"type": ""
													}
												],
												"src": "1651:60:7"
											},
											{
												"body": {
													"nativeSrc": "1777:82:7",
													"nodeType": "YulBlock",
													"src": "1777:82:7",
													"statements": [
														{
															"nativeSrc": "1787:66:7",
															"nodeType": "YulAssignment",
															"src": "1787:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:7"
																				},
																				"nativeSrc": "1827:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:7"
																		},
																		"nativeSrc": "1818:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:7"
																},
																"nativeSrc": "1800:53:7",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:7",
														"nodeType": "YulTypedName",
														"src": "1757:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:7",
														"nodeType": "YulTypedName",
														"src": "1767:9:7",
														"type": ""
													}
												],
												"src": "1717:142:7"
											},
											{
												"body": {
													"nativeSrc": "1912:28:7",
													"nodeType": "YulBlock",
													"src": "1912:28:7",
													"statements": [
														{
															"nativeSrc": "1922:12:7",
															"nodeType": "YulAssignment",
															"src": "1922:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:7",
																"nodeType": "YulIdentifier",
																"src": "1929:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:7",
														"nodeType": "YulTypedName",
														"src": "1898:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:7",
														"nodeType": "YulTypedName",
														"src": "1908:3:7",
														"type": ""
													}
												],
												"src": "1865:75:7"
											},
											{
												"body": {
													"nativeSrc": "2022:193:7",
													"nodeType": "YulBlock",
													"src": "2022:193:7",
													"statements": [
														{
															"nativeSrc": "2032:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:7"
																},
																"nativeSrc": "2056:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:7",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:7"
																				},
																				"nativeSrc": "2145:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:7"
																				},
																				"nativeSrc": "2166:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:7"
																		},
																		"nativeSrc": "2117:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:7"
																},
																"nativeSrc": "2104:105:7",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:7"
															},
															"nativeSrc": "2104:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:7",
														"nodeType": "YulTypedName",
														"src": "1999:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:7",
														"nodeType": "YulTypedName",
														"src": "2005:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:7",
														"nodeType": "YulTypedName",
														"src": "2013:7:7",
														"type": ""
													}
												],
												"src": "1946:269:7"
											},
											{
												"body": {
													"nativeSrc": "2270:24:7",
													"nodeType": "YulBlock",
													"src": "2270:24:7",
													"statements": [
														{
															"nativeSrc": "2280:8:7",
															"nodeType": "YulAssignment",
															"src": "2280:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:7",
																"nodeType": "YulLiteral",
																"src": "2287:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:7",
														"nodeType": "YulTypedName",
														"src": "2266:3:7",
														"type": ""
													}
												],
												"src": "2221:73:7"
											},
											{
												"body": {
													"nativeSrc": "2353:136:7",
													"nodeType": "YulBlock",
													"src": "2353:136:7",
													"statements": [
														{
															"nativeSrc": "2363:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:7"
																},
																"nativeSrc": "2377:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:7"
																},
																"nativeSrc": "2418:65:7",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:7"
															},
															"nativeSrc": "2418:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:7",
														"nodeType": "YulTypedName",
														"src": "2339:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:7",
														"nodeType": "YulTypedName",
														"src": "2345:6:7",
														"type": ""
													}
												],
												"src": "2300:189:7"
											},
											{
												"body": {
													"nativeSrc": "2545:136:7",
													"nodeType": "YulBlock",
													"src": "2545:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:7",
																"nodeType": "YulBlock",
																"src": "2612:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:7"
																			},
																			"nativeSrc": "2626:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:7"
																		},
																		"nativeSrc": "2626:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:7"
																},
																"nativeSrc": "2562:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:7"
															},
															"nativeSrc": "2555:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:7",
																"nodeType": "YulBlock",
																"src": "2577:26:7",
																"statements": [
																	{
																		"nativeSrc": "2579:22:7",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:7"
																			},
																			"nativeSrc": "2588:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:7",
																"nodeType": "YulBlock",
																"src": "2559:2:7",
																"statements": []
															},
															"src": "2555:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:7",
														"nodeType": "YulTypedName",
														"src": "2533:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:7",
														"nodeType": "YulTypedName",
														"src": "2540:3:7",
														"type": ""
													}
												],
												"src": "2495:186:7"
											},
											{
												"body": {
													"nativeSrc": "2766:464:7",
													"nodeType": "YulBlock",
													"src": "2766:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:7",
																"nodeType": "YulBlock",
																"src": "2792:431:7",
																"statements": [
																	{
																		"nativeSrc": "2806:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:7"
																			},
																			"nativeSrc": "2822:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:7",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:7"
																					},
																					"nativeSrc": "2906:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:7"
																			},
																			"nativeSrc": "2892:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:7",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:7",
																			"nodeType": "YulBlock",
																			"src": "3093:27:7",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:7",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:7",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:7"
																			},
																			"nativeSrc": "3074:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:7"
																		},
																		"nativeSrc": "3071:49:7",
																		"nodeType": "YulIf",
																		"src": "3071:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:7"
																							},
																							"nativeSrc": "3189:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:7"
																					},
																					"nativeSrc": "3175:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:7"
																			},
																			"nativeSrc": "3133:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:7"
																		},
																		"nativeSrc": "3133:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:7"
																},
																"nativeSrc": "2780:11:7",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:7"
															},
															"nativeSrc": "2777:446:7",
															"nodeType": "YulIf",
															"src": "2777:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:7",
														"nodeType": "YulTypedName",
														"src": "2742:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:7",
														"nodeType": "YulTypedName",
														"src": "2749:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:7",
														"nodeType": "YulTypedName",
														"src": "2754:10:7",
														"type": ""
													}
												],
												"src": "2687:543:7"
											},
											{
												"body": {
													"nativeSrc": "3299:54:7",
													"nodeType": "YulBlock",
													"src": "3299:54:7",
													"statements": [
														{
															"nativeSrc": "3309:37:7",
															"nodeType": "YulAssignment",
															"src": "3309:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:7"
																},
																"nativeSrc": "3330:16:7",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:7",
														"nodeType": "YulTypedName",
														"src": "3274:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:7",
														"nodeType": "YulTypedName",
														"src": "3280:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:7",
														"nodeType": "YulTypedName",
														"src": "3290:8:7",
														"type": ""
													}
												],
												"src": "3236:117:7"
											},
											{
												"body": {
													"nativeSrc": "3410:118:7",
													"nodeType": "YulBlock",
													"src": "3410:118:7",
													"statements": [
														{
															"nativeSrc": "3420:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:7"
																				},
																				"nativeSrc": "3465:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:7"
																				},
																				"nativeSrc": "3480:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:7"
																		},
																		"nativeSrc": "3436:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:7"
																},
																"nativeSrc": "3432:56:7",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:7",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:7",
															"nodeType": "YulAssignment",
															"src": "3497:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:7"
																},
																"nativeSrc": "3507:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:7",
														"nodeType": "YulTypedName",
														"src": "3387:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:7",
														"nodeType": "YulTypedName",
														"src": "3393:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:7",
														"nodeType": "YulTypedName",
														"src": "3403:6:7",
														"type": ""
													}
												],
												"src": "3359:169:7"
											},
											{
												"body": {
													"nativeSrc": "3614:214:7",
													"nodeType": "YulBlock",
													"src": "3614:214:7",
													"statements": [
														{
															"nativeSrc": "3747:37:7",
															"nodeType": "YulAssignment",
															"src": "3747:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:7"
																},
																"nativeSrc": "3755:29:7",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:7"
																}
															]
														},
														{
															"nativeSrc": "3793:29:7",
															"nodeType": "YulAssignment",
															"src": "3793:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:7"
																		},
																		"nativeSrc": "3810:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:7"
																},
																"nativeSrc": "3801:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:7",
														"nodeType": "YulTypedName",
														"src": "3595:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:7",
														"nodeType": "YulTypedName",
														"src": "3601:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:7",
														"nodeType": "YulTypedName",
														"src": "3609:4:7",
														"type": ""
													}
												],
												"src": "3533:295:7"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:7",
													"nodeType": "YulBlock",
													"src": "3925:1303:7",
													"statements": [
														{
															"nativeSrc": "3936:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:7"
																},
																"nativeSrc": "3950:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:7",
																"nodeType": "YulBlock",
																"src": "4072:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:7"
																			},
																			"nativeSrc": "4074:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:7"
																		},
																		"nativeSrc": "4074:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:7",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:7"
																},
																"nativeSrc": "4041:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:7"
															},
															"nativeSrc": "4038:56:7",
															"nodeType": "YulIf",
															"src": "4038:56:7"
														},
														{
															"nativeSrc": "4104:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:7"
																		},
																		"nativeSrc": "4144:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:7"
																},
																"nativeSrc": "4118:38:7",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:7",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:7"
																},
																"nativeSrc": "4203:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:7"
															},
															"nativeSrc": "4203:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:7"
														},
														{
															"nativeSrc": "4280:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:7",
																"nodeType": "YulLiteral",
																"src": "4297:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:7",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:7",
															"nodeType": "YulAssignment",
															"src": "4308:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:7",
																"nodeType": "YulLiteral",
																"src": "4321:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:7",
																		"nodeType": "YulBlock",
																		"src": "4372:611:7",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:7",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:7"
																							},
																							"nativeSrc": "4413:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:7"
																					},
																					"nativeSrc": "4401:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:7",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:7"
																					},
																					"nativeSrc": "4451:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:7",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:7",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:7",
																					"nodeType": "YulBlock",
																					"src": "4569:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:7"
																												},
																												"nativeSrc": "4608:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:7"
																										},
																										"nativeSrc": "4602:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:7"
																								},
																								"nativeSrc": "4587:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:7"
																							},
																							"nativeSrc": "4587:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:7"
																						},
																						{
																							"nativeSrc": "4646:24:7",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:7",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:7"
																								},
																								"nativeSrc": "4656:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:7",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:7",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:7"
																								},
																								"nativeSrc": "4700:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:7"
																					},
																					"nativeSrc": "4532:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:7"
																				},
																				"nativeSrc": "4524:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:7",
																					"nodeType": "YulBlock",
																					"src": "4547:21:7",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:7",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:7",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:7"
																								},
																								"nativeSrc": "4554:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:7",
																					"nodeType": "YulBlock",
																					"src": "4528:3:7",
																					"statements": []
																				},
																				"src": "4524:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:7",
																					"nodeType": "YulBlock",
																					"src": "4768:156:7",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:7"
																										},
																										"nativeSrc": "4809:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:7"
																								},
																								"nativeSrc": "4803:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:7",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:7",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:7"
																												},
																												"nativeSrc": "4891:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:7"
																										},
																										"nativeSrc": "4861:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:7"
																								},
																								"nativeSrc": "4846:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:7"
																							},
																							"nativeSrc": "4846:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:7"
																					},
																					"nativeSrc": "4748:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:7"
																				},
																				"nativeSrc": "4745:179:7",
																				"nodeType": "YulIf",
																				"src": "4745:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:7",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:7"
																									},
																									"nativeSrc": "4954:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:7",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:7"
																							},
																							"nativeSrc": "4950:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:7"
																					},
																					"nativeSrc": "4937:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:7"
																				},
																				"nativeSrc": "4937:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:7"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:7",
																	"nodeType": "YulCase",
																	"src": "4365:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:7",
																		"nodeType": "YulBlock",
																		"src": "5000:222:7",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:7",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:7",
																					"nodeType": "YulBlock",
																					"src": "5051:67:7",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:7",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:7"
																										},
																										"nativeSrc": "5084:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:7"
																								},
																								"nativeSrc": "5078:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:7"
																				},
																				"nativeSrc": "5041:77:7",
																				"nodeType": "YulIf",
																				"src": "5041:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:7"
																							},
																							"nativeSrc": "5144:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:7"
																					},
																					"nativeSrc": "5131:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:7"
																				},
																				"nativeSrc": "5131:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:7"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:7",
																	"nodeType": "YulCase",
																	"src": "4992:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:7"
																},
																"nativeSrc": "4342:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:7"
															},
															"nativeSrc": "4335:887:7",
															"nodeType": "YulSwitch",
															"src": "4335:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:7",
														"nodeType": "YulTypedName",
														"src": "3914:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:7",
														"nodeType": "YulTypedName",
														"src": "3920:3:7",
														"type": ""
													}
												],
												"src": "3833:1395:7"
											},
											{
												"body": {
													"nativeSrc": "5274:35:7",
													"nodeType": "YulBlock",
													"src": "5274:35:7",
													"statements": [
														{
															"nativeSrc": "5284:19:7",
															"nodeType": "YulAssignment",
															"src": "5284:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5300:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5300:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5294:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5294:5:7"
																},
																"nativeSrc": "5294:9:7",
																"nodeType": "YulFunctionCall",
																"src": "5294:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5284:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5284:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "5234:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5267:6:7",
														"nodeType": "YulTypedName",
														"src": "5267:6:7",
														"type": ""
													}
												],
												"src": "5234:75:7"
											},
											{
												"body": {
													"nativeSrc": "5404:28:7",
													"nodeType": "YulBlock",
													"src": "5404:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5421:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5421:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5424:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5424:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5414:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5414:6:7"
																},
																"nativeSrc": "5414:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5414:12:7"
															},
															"nativeSrc": "5414:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "5414:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "5315:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5315:117:7"
											},
											{
												"body": {
													"nativeSrc": "5527:28:7",
													"nodeType": "YulBlock",
													"src": "5527:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5544:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5544:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5547:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5547:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5537:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5537:6:7"
																},
																"nativeSrc": "5537:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5537:12:7"
															},
															"nativeSrc": "5537:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "5537:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "5438:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5438:117:7"
											},
											{
												"body": {
													"nativeSrc": "5650:28:7",
													"nodeType": "YulBlock",
													"src": "5650:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5667:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5667:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5670:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5670:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5660:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5660:6:7"
																},
																"nativeSrc": "5660:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5660:12:7"
															},
															"nativeSrc": "5660:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "5660:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5561:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5561:117:7"
											},
											{
												"body": {
													"nativeSrc": "5773:28:7",
													"nodeType": "YulBlock",
													"src": "5773:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5790:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5790:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5793:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5793:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5783:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5783:6:7"
																},
																"nativeSrc": "5783:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5783:12:7"
															},
															"nativeSrc": "5783:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "5783:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "5684:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5684:117:7"
											},
											{
												"body": {
													"nativeSrc": "5855:54:7",
													"nodeType": "YulBlock",
													"src": "5855:54:7",
													"statements": [
														{
															"nativeSrc": "5865:38:7",
															"nodeType": "YulAssignment",
															"src": "5865:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5883:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5883:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5890:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5890:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5879:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5879:3:7"
																		},
																		"nativeSrc": "5879:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5879:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5899:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5899:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5895:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5895:3:7"
																		},
																		"nativeSrc": "5895:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5895:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5875:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5875:3:7"
																},
																"nativeSrc": "5875:28:7",
																"nodeType": "YulFunctionCall",
																"src": "5875:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5865:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5865:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "5807:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5838:5:7",
														"nodeType": "YulTypedName",
														"src": "5838:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5848:6:7",
														"nodeType": "YulTypedName",
														"src": "5848:6:7",
														"type": ""
													}
												],
												"src": "5807:102:7"
											},
											{
												"body": {
													"nativeSrc": "5958:238:7",
													"nodeType": "YulBlock",
													"src": "5958:238:7",
													"statements": [
														{
															"nativeSrc": "5968:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5968:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5990:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5990:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "6020:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6020:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5998:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "5998:21:7"
																		},
																		"nativeSrc": "5998:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5998:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5986:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5986:3:7"
																},
																"nativeSrc": "5986:40:7",
																"nodeType": "YulFunctionCall",
																"src": "5986:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5972:10:7",
																	"nodeType": "YulTypedName",
																	"src": "5972:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6137:22:7",
																"nodeType": "YulBlock",
																"src": "6137:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6139:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6139:16:7"
																			},
																			"nativeSrc": "6139:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6139:18:7"
																		},
																		"nativeSrc": "6139:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6139:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6080:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "6080:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6092:18:7",
																				"nodeType": "YulLiteral",
																				"src": "6092:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6077:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6077:2:7"
																		},
																		"nativeSrc": "6077:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6077:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6116:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "6116:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6128:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6128:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6113:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6113:2:7"
																		},
																		"nativeSrc": "6113:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6113:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6074:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6074:2:7"
																},
																"nativeSrc": "6074:62:7",
																"nodeType": "YulFunctionCall",
																"src": "6074:62:7"
															},
															"nativeSrc": "6071:88:7",
															"nodeType": "YulIf",
															"src": "6071:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6175:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6175:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6179:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "6179:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6168:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6168:6:7"
																},
																"nativeSrc": "6168:22:7",
																"nodeType": "YulFunctionCall",
																"src": "6168:22:7"
															},
															"nativeSrc": "6168:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "6168:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5915:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5944:6:7",
														"nodeType": "YulTypedName",
														"src": "5944:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5952:4:7",
														"nodeType": "YulTypedName",
														"src": "5952:4:7",
														"type": ""
													}
												],
												"src": "5915:281:7"
											},
											{
												"body": {
													"nativeSrc": "6243:88:7",
													"nodeType": "YulBlock",
													"src": "6243:88:7",
													"statements": [
														{
															"nativeSrc": "6253:30:7",
															"nodeType": "YulAssignment",
															"src": "6253:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "6263:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "6263:18:7"
																},
																"nativeSrc": "6263:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6263:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6253:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6253:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6312:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6312:6:7"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "6320:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6320:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "6292:19:7",
																	"nodeType": "YulIdentifier",
																	"src": "6292:19:7"
																},
																"nativeSrc": "6292:33:7",
																"nodeType": "YulFunctionCall",
																"src": "6292:33:7"
															},
															"nativeSrc": "6292:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "6292:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6202:129:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6227:4:7",
														"nodeType": "YulTypedName",
														"src": "6227:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6236:6:7",
														"nodeType": "YulTypedName",
														"src": "6236:6:7",
														"type": ""
													}
												],
												"src": "6202:129:7"
											},
											{
												"body": {
													"nativeSrc": "6404:241:7",
													"nodeType": "YulBlock",
													"src": "6404:241:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6509:22:7",
																"nodeType": "YulBlock",
																"src": "6509:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6511:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6511:16:7"
																			},
																			"nativeSrc": "6511:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6511:18:7"
																		},
																		"nativeSrc": "6511:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6511:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6481:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6481:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6489:18:7",
																		"nodeType": "YulLiteral",
																		"src": "6489:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6478:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6478:2:7"
																},
																"nativeSrc": "6478:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6478:30:7"
															},
															"nativeSrc": "6475:56:7",
															"nodeType": "YulIf",
															"src": "6475:56:7"
														},
														{
															"nativeSrc": "6541:37:7",
															"nodeType": "YulAssignment",
															"src": "6541:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6571:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6571:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "6549:21:7",
																	"nodeType": "YulIdentifier",
																	"src": "6549:21:7"
																},
																"nativeSrc": "6549:29:7",
																"nodeType": "YulFunctionCall",
																"src": "6549:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6541:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6541:4:7"
																}
															]
														},
														{
															"nativeSrc": "6615:23:7",
															"nodeType": "YulAssignment",
															"src": "6615:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6627:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6627:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6633:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6633:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6623:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6623:3:7"
																},
																"nativeSrc": "6623:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6623:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6615:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6615:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "6337:308:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "6388:6:7",
														"nodeType": "YulTypedName",
														"src": "6388:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "6399:4:7",
														"nodeType": "YulTypedName",
														"src": "6399:4:7",
														"type": ""
													}
												],
												"src": "6337:308:7"
											},
											{
												"body": {
													"nativeSrc": "6713:77:7",
													"nodeType": "YulBlock",
													"src": "6713:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6730:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6730:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6735:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6735:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6740:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6740:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "6724:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6724:5:7"
																},
																"nativeSrc": "6724:23:7",
																"nodeType": "YulFunctionCall",
																"src": "6724:23:7"
															},
															"nativeSrc": "6724:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "6724:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6767:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6767:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6772:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6772:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6763:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6763:3:7"
																		},
																		"nativeSrc": "6763:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6763:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6781:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6781:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6756:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6756:6:7"
																},
																"nativeSrc": "6756:27:7",
																"nodeType": "YulFunctionCall",
																"src": "6756:27:7"
															},
															"nativeSrc": "6756:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "6756:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "6651:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6695:3:7",
														"nodeType": "YulTypedName",
														"src": "6695:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6700:3:7",
														"nodeType": "YulTypedName",
														"src": "6700:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6705:6:7",
														"nodeType": "YulTypedName",
														"src": "6705:6:7",
														"type": ""
													}
												],
												"src": "6651:139:7"
											},
											{
												"body": {
													"nativeSrc": "6891:339:7",
													"nodeType": "YulBlock",
													"src": "6891:339:7",
													"statements": [
														{
															"nativeSrc": "6901:75:7",
															"nodeType": "YulAssignment",
															"src": "6901:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6968:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6968:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "6926:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "6926:41:7"
																		},
																		"nativeSrc": "6926:49:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6926:49:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6910:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "6910:15:7"
																},
																"nativeSrc": "6910:66:7",
																"nodeType": "YulFunctionCall",
																"src": "6910:66:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6901:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6901:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6992:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6992:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6999:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6999:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6985:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6985:6:7"
																},
																"nativeSrc": "6985:21:7",
																"nodeType": "YulFunctionCall",
																"src": "6985:21:7"
															},
															"nativeSrc": "6985:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "6985:21:7"
														},
														{
															"nativeSrc": "7015:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7015:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7030:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7030:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7037:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7037:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7026:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7026:3:7"
																},
																"nativeSrc": "7026:16:7",
																"nodeType": "YulFunctionCall",
																"src": "7026:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7019:3:7",
																	"nodeType": "YulTypedName",
																	"src": "7019:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7080:83:7",
																"nodeType": "YulBlock",
																"src": "7080:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "7082:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7082:77:7"
																			},
																			"nativeSrc": "7082:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7082:79:7"
																		},
																		"nativeSrc": "7082:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7082:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "7061:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7061:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7066:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7066:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7057:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7057:3:7"
																		},
																		"nativeSrc": "7057:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7057:16:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7075:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7075:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7054:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7054:2:7"
																},
																"nativeSrc": "7054:25:7",
																"nodeType": "YulFunctionCall",
																"src": "7054:25:7"
															},
															"nativeSrc": "7051:112:7",
															"nodeType": "YulIf",
															"src": "7051:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7207:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7207:3:7"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "7212:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7212:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7217:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7217:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7172:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "7172:34:7"
																},
																"nativeSrc": "7172:52:7",
																"nodeType": "YulFunctionCall",
																"src": "7172:52:7"
															},
															"nativeSrc": "7172:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "7172:52:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "6796:434:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6864:3:7",
														"nodeType": "YulTypedName",
														"src": "6864:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6869:6:7",
														"nodeType": "YulTypedName",
														"src": "6869:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6877:3:7",
														"nodeType": "YulTypedName",
														"src": "6877:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6885:5:7",
														"nodeType": "YulTypedName",
														"src": "6885:5:7",
														"type": ""
													}
												],
												"src": "6796:434:7"
											},
											{
												"body": {
													"nativeSrc": "7323:282:7",
													"nodeType": "YulBlock",
													"src": "7323:282:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7372:83:7",
																"nodeType": "YulBlock",
																"src": "7372:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7374:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7374:77:7"
																			},
																			"nativeSrc": "7374:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7374:79:7"
																		},
																		"nativeSrc": "7374:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7374:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7351:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7351:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7359:4:7",
																						"nodeType": "YulLiteral",
																						"src": "7359:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7347:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7347:3:7"
																				},
																				"nativeSrc": "7347:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7347:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7366:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7366:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7343:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7343:3:7"
																		},
																		"nativeSrc": "7343:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7343:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7336:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7336:6:7"
																},
																"nativeSrc": "7336:35:7",
																"nodeType": "YulFunctionCall",
																"src": "7336:35:7"
															},
															"nativeSrc": "7333:122:7",
															"nodeType": "YulIf",
															"src": "7333:122:7"
														},
														{
															"nativeSrc": "7464:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7464:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7484:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7484:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7478:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7478:5:7"
																},
																"nativeSrc": "7478:13:7",
																"nodeType": "YulFunctionCall",
																"src": "7478:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7468:6:7",
																	"nodeType": "YulTypedName",
																	"src": "7468:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7500:99:7",
															"nodeType": "YulAssignment",
															"src": "7500:99:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7572:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7572:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7580:4:7",
																				"nodeType": "YulLiteral",
																				"src": "7580:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7568:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7568:3:7"
																		},
																		"nativeSrc": "7568:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7568:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7587:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7587:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7595:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7595:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "7509:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "7509:58:7"
																},
																"nativeSrc": "7509:90:7",
																"nodeType": "YulFunctionCall",
																"src": "7509:90:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7500:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7500:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "7250:355:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7301:6:7",
														"nodeType": "YulTypedName",
														"src": "7301:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7309:3:7",
														"nodeType": "YulTypedName",
														"src": "7309:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7317:5:7",
														"nodeType": "YulTypedName",
														"src": "7317:5:7",
														"type": ""
													}
												],
												"src": "7250:355:7"
											},
											{
												"body": {
													"nativeSrc": "7725:739:7",
													"nodeType": "YulBlock",
													"src": "7725:739:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7771:83:7",
																"nodeType": "YulBlock",
																"src": "7771:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7773:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7773:77:7"
																			},
																			"nativeSrc": "7773:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7773:79:7"
																		},
																		"nativeSrc": "7773:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7773:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7746:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7746:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7755:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7755:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7742:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7742:3:7"
																		},
																		"nativeSrc": "7742:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7742:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7767:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7767:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7738:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7738:3:7"
																},
																"nativeSrc": "7738:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7738:32:7"
															},
															"nativeSrc": "7735:119:7",
															"nodeType": "YulIf",
															"src": "7735:119:7"
														},
														{
															"nativeSrc": "7864:291:7",
															"nodeType": "YulBlock",
															"src": "7864:291:7",
															"statements": [
																{
																	"nativeSrc": "7879:38:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7879:38:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7903:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7903:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7914:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7914:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7899:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7899:3:7"
																				},
																				"nativeSrc": "7899:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7899:17:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7893:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "7893:5:7"
																		},
																		"nativeSrc": "7893:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7893:24:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7883:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7883:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7964:83:7",
																		"nodeType": "YulBlock",
																		"src": "7964:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7966:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "7966:77:7"
																					},
																					"nativeSrc": "7966:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7966:79:7"
																				},
																				"nativeSrc": "7966:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "7966:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7936:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7936:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7944:18:7",
																				"nodeType": "YulLiteral",
																				"src": "7944:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7933:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7933:2:7"
																		},
																		"nativeSrc": "7933:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7933:30:7"
																	},
																	"nativeSrc": "7930:117:7",
																	"nodeType": "YulIf",
																	"src": "7930:117:7"
																},
																{
																	"nativeSrc": "8061:84:7",
																	"nodeType": "YulAssignment",
																	"src": "8061:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8117:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8117:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8128:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8128:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8113:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8113:3:7"
																				},
																				"nativeSrc": "8113:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8113:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8137:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8137:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "8071:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "8071:41:7"
																		},
																		"nativeSrc": "8071:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8071:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8061:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8061:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8165:292:7",
															"nodeType": "YulBlock",
															"src": "8165:292:7",
															"statements": [
																{
																	"nativeSrc": "8180:39:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8180:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8204:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8204:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8215:2:7",
																						"nodeType": "YulLiteral",
																						"src": "8215:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8200:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8200:3:7"
																				},
																				"nativeSrc": "8200:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8200:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8194:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "8194:5:7"
																		},
																		"nativeSrc": "8194:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8194:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8184:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8184:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8266:83:7",
																		"nodeType": "YulBlock",
																		"src": "8266:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8268:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "8268:77:7"
																					},
																					"nativeSrc": "8268:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8268:79:7"
																				},
																				"nativeSrc": "8268:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "8268:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8238:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8238:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8246:18:7",
																				"nodeType": "YulLiteral",
																				"src": "8246:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8235:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8235:2:7"
																		},
																		"nativeSrc": "8235:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8235:30:7"
																	},
																	"nativeSrc": "8232:117:7",
																	"nodeType": "YulIf",
																	"src": "8232:117:7"
																},
																{
																	"nativeSrc": "8363:84:7",
																	"nodeType": "YulAssignment",
																	"src": "8363:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8419:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8419:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8430:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8430:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8415:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8415:3:7"
																				},
																				"nativeSrc": "8415:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8415:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8439:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8439:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "8373:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "8373:41:7"
																		},
																		"nativeSrc": "8373:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8373:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8363:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8363:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "7611:853:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7687:9:7",
														"nodeType": "YulTypedName",
														"src": "7687:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7698:7:7",
														"nodeType": "YulTypedName",
														"src": "7698:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7710:6:7",
														"nodeType": "YulTypedName",
														"src": "7710:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7718:6:7",
														"nodeType": "YulTypedName",
														"src": "7718:6:7",
														"type": ""
													}
												],
												"src": "7611:853:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x76616C7565000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x5 SWAP1 DUP2 PUSH2 0x48 SWAP2 SWAP1 PUSH2 0x348 JUMP JUMPDEST POP PUSH3 0xF4240 PUSH1 0x8 SSTORE PUSH1 0x64 PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x616E790000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0xA SWAP1 DUP2 PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x348 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH2 0xA5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2355 CODESIZE SUB DUP1 PUSH2 0x2355 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x537 JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0x348 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x348 JUMP JUMPDEST POP POP POP PUSH1 0x6 PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP POP POP POP PUSH2 0x5AD JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x189 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x19C JUMPI PUSH2 0x19B PUSH2 0x145 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1FE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x208 DUP7 DUP4 PUSH2 0x1C3 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24C PUSH2 0x247 PUSH2 0x242 DUP5 PUSH2 0x220 JUMP JUMPDEST PUSH2 0x229 JUMP JUMPDEST PUSH2 0x220 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x265 DUP4 PUSH2 0x232 JUMP JUMPDEST PUSH2 0x279 PUSH2 0x271 DUP3 PUSH2 0x253 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1CF JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x28D PUSH2 0x281 JUMP JUMPDEST PUSH2 0x298 DUP2 DUP5 DUP5 PUSH2 0x25C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2BB JUMPI PUSH2 0x2B0 PUSH0 DUP3 PUSH2 0x285 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x29E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x300 JUMPI PUSH2 0x2D1 DUP2 PUSH2 0x1A2 JUMP JUMPDEST PUSH2 0x2DA DUP5 PUSH2 0x1B4 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2E9 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2FD PUSH2 0x2F5 DUP6 PUSH2 0x1B4 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x29D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x320 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x305 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x338 DUP4 DUP4 PUSH2 0x311 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x351 DUP3 PUSH2 0x10E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x36A JUMPI PUSH2 0x369 PUSH2 0x118 JUMP JUMPDEST JUMPDEST PUSH2 0x374 DUP3 SLOAD PUSH2 0x172 JUMP JUMPDEST PUSH2 0x37F DUP3 DUP3 DUP6 PUSH2 0x2BF JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3B0 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x39E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3A8 DUP6 DUP3 PUSH2 0x32D JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x40F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3BE DUP7 PUSH2 0x1A2 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3E5 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3C0 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x402 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3FE PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x311 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x449 DUP3 PUSH2 0x430 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x468 JUMPI PUSH2 0x467 PUSH2 0x118 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47A PUSH2 0x417 JUMP JUMPDEST SWAP1 POP PUSH2 0x486 DUP3 DUP3 PUSH2 0x440 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4A5 JUMPI PUSH2 0x4A4 PUSH2 0x118 JUMP JUMPDEST JUMPDEST PUSH2 0x4AE DUP3 PUSH2 0x430 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4DB PUSH2 0x4D6 DUP5 PUSH2 0x48B JUMP JUMPDEST PUSH2 0x471 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4F7 JUMPI PUSH2 0x4F6 PUSH2 0x42C JUMP JUMPDEST JUMPDEST PUSH2 0x502 DUP5 DUP3 DUP6 PUSH2 0x4BB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x51E JUMPI PUSH2 0x51D PUSH2 0x428 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x52E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4C9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x54D JUMPI PUSH2 0x54C PUSH2 0x420 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x56A JUMPI PUSH2 0x569 PUSH2 0x424 JUMP JUMPDEST JUMPDEST PUSH2 0x576 DUP6 DUP3 DUP7 ADD PUSH2 0x50A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x597 JUMPI PUSH2 0x596 PUSH2 0x424 JUMP JUMPDEST JUMPDEST PUSH2 0x5A3 DUP6 DUP3 DUP7 ADD PUSH2 0x50A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D9B DUP1 PUSH2 0x5BA PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x830953AB GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x976B3113 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x976B3113 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x32C JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x830953AB EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x8615D855 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x943E8216 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x290 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x624601B6 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F6 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x1447 JUMP JUMPDEST PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x40E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x14C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x14E0 JUMP JUMPDEST PUSH2 0x417 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x445 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x154B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x44D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1564 JUMP JUMPDEST PUSH2 0x581 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1564 JUMP JUMPDEST PUSH2 0x59E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x14C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x14C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x14C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x1670 JUMP JUMPDEST PUSH2 0x6C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x298 PUSH2 0x904 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x16AE JUMP JUMPDEST PUSH2 0x994 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x18BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x1447 JUMP JUMPDEST PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x316 PUSH2 0xAF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x14C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x346 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x18DF JUMP JUMPDEST PUSH2 0xAFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x14C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x36B SWAP1 PUSH2 0x194A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x397 SWAP1 PUSH2 0x194A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3F6 PUSH2 0xB7E JUMP JUMPDEST SWAP1 POP PUSH2 0x403 DUP2 DUP6 DUP6 PUSH2 0xB85 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x421 PUSH2 0xB7E JUMP JUMPDEST SWAP1 POP PUSH2 0x42E DUP6 DUP3 DUP6 PUSH2 0xB97 JUMP JUMPDEST PUSH2 0x439 DUP6 DUP6 DUP6 PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x45B PUSH2 0x40E JUMP JUMPDEST PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST GT ISZERO PUSH2 0x49D JUMPI PUSH1 0x40 MLOAD PUSH32 0xCBE2483100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x51E JUMPI PUSH1 0x40 MLOAD PUSH32 0xB1327A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x52A CALLER PUSH1 0x9 SLOAD PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5F4 CALLER PUSH2 0x59E JUMP JUMPDEST SUB PUSH2 0x62B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8439960D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x633 PUSH2 0x40E JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x66C JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92730000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD SWAP1 POP DUP5 DUP5 DUP3 PUSH1 0x2 ADD SWAP2 DUP3 PUSH2 0x6A0 SWAP3 SWAP2 SWAP1 PUSH2 0x1BAE JUMP JUMPDEST POP DUP3 DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 DUP1 SLOAD SWAP1 POP PUSH2 0x6BC SWAP2 SWAP1 PUSH2 0x1C7B JUMP JUMPDEST SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x6DB JUMPI PUSH2 0x6DA PUSH2 0x1CAE JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD SWAP1 POP DUP1 PUSH1 0x8 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x732 JUMPI PUSH1 0x40 MLOAD PUSH32 0x66B6CB4A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x747 CALLER DUP3 PUSH0 ADD PUSH2 0xD98 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x77E JUMPI PUSH1 0x40 MLOAD PUSH32 0x7C9A1CF900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x788 CALLER PUSH2 0x59E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x7C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8439960D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x7D6 JUMPI PUSH2 0x7D5 PUSH2 0x1CDB JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x7E9 JUMPI PUSH2 0x7E8 PUSH2 0x1CDB JUMP JUMPDEST JUMPDEST SUB PUSH2 0x80D JUMPI DUP1 DUP3 PUSH1 0x6 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x801 SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x874 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x821 JUMPI PUSH2 0x820 PUSH2 0x1CDB JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x834 JUMPI PUSH2 0x833 PUSH2 0x1CDB JUMP JUMPDEST JUMPDEST SUB PUSH2 0x858 JUMPI DUP1 DUP3 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x84C SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x873 JUMP JUMPDEST DUP1 DUP3 PUSH1 0x7 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x86B SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST PUSH2 0x889 CALLER DUP4 PUSH0 ADD PUSH2 0xDC5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP1 DUP3 PUSH1 0x4 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x89D SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 ADD SLOAD DUP3 PUSH1 0x4 ADD SLOAD LT PUSH2 0x8FE JUMPI PUSH1 0x1 DUP3 PUSH1 0x8 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 ADD SLOAD DUP3 PUSH1 0x5 ADD SLOAD GT ISZERO PUSH2 0x8FD JUMPI PUSH1 0x1 DUP3 PUSH1 0x8 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x913 SWAP1 PUSH2 0x194A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x93F SWAP1 PUSH2 0x194A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x98A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x961 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x98A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x96D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x99C PUSH2 0x12D9 JUMP JUMPDEST PUSH0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x9B1 JUMPI PUSH2 0x9B0 PUSH2 0x1CAE JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x9D6 DUP4 PUSH0 ADD PUSH2 0xDF2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x9EA SWAP1 PUSH2 0x194A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA16 SWAP1 PUSH2 0x194A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA61 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA38 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA61 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA44 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x4 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x5 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x6 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x7 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x8 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x8 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xADE PUSH2 0xB7E JUMP JUMPDEST SWAP1 POP PUSH2 0xAEB DUP2 DUP6 DUP6 PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB92 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE11 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBA2 DUP5 DUP5 PUSH2 0xAFC JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xC23 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC14 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC22 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE11 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC99 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC90 SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD09 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD00 SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD14 DUP4 DUP4 DUP4 PUSH2 0xFE0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD89 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD80 SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD94 PUSH0 DUP4 DUP4 PUSH2 0xFE0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDBD DUP4 PUSH0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 SHL PUSH2 0x11F9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDEA DUP4 PUSH0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 SHL PUSH2 0x1219 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xE00 DUP4 PUSH0 ADD PUSH2 0x1280 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP2 SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE81 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE78 SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEF1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE8 SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xFDA JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFD1 SWAP2 SWAP1 PUSH2 0x14C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1030 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1024 SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10FE JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10B9 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1145 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x118F JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x11EC SWAP2 SWAP1 PUSH2 0x14C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1224 DUP4 DUP4 PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0x1276 JUMPI DUP3 PUSH0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x127A JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x12CD JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x12B9 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1364 DUP3 PUSH2 0x1322 JUMP JUMPDEST PUSH2 0x136E DUP2 DUP6 PUSH2 0x132C JUMP JUMPDEST SWAP4 POP PUSH2 0x137E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x133C JUMP JUMPDEST PUSH2 0x1387 DUP2 PUSH2 0x134A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13AA DUP2 DUP5 PUSH2 0x135A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13E3 DUP3 PUSH2 0x13BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F3 DUP2 PUSH2 0x13D9 JUMP JUMPDEST DUP2 EQ PUSH2 0x13FD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x140E DUP2 PUSH2 0x13EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1426 DUP2 PUSH2 0x1414 JUMP JUMPDEST DUP2 EQ PUSH2 0x1430 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1441 DUP2 PUSH2 0x141D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x145D JUMPI PUSH2 0x145C PUSH2 0x13B2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x146A DUP6 DUP3 DUP7 ADD PUSH2 0x1400 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x147B DUP6 DUP3 DUP7 ADD PUSH2 0x1433 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1499 DUP2 PUSH2 0x1485 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14B2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1490 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14C1 DUP2 PUSH2 0x1414 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14DA PUSH0 DUP4 ADD DUP5 PUSH2 0x14B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14F7 JUMPI PUSH2 0x14F6 PUSH2 0x13B2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1504 DUP7 DUP3 DUP8 ADD PUSH2 0x1400 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1515 DUP7 DUP3 DUP8 ADD PUSH2 0x1400 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1526 DUP7 DUP3 DUP8 ADD PUSH2 0x1433 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1545 DUP2 PUSH2 0x1530 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x155E PUSH0 DUP4 ADD DUP5 PUSH2 0x153C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1579 JUMPI PUSH2 0x1578 PUSH2 0x13B2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1586 DUP5 DUP3 DUP6 ADD PUSH2 0x1400 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x15B0 JUMPI PUSH2 0x15AF PUSH2 0x158F JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15CD JUMPI PUSH2 0x15CC PUSH2 0x1593 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x15E9 JUMPI PUSH2 0x15E8 PUSH2 0x1597 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1607 JUMPI PUSH2 0x1606 PUSH2 0x13B2 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1624 JUMPI PUSH2 0x1623 PUSH2 0x13B6 JUMP JUMPDEST JUMPDEST PUSH2 0x1630 DUP7 DUP3 DUP8 ADD PUSH2 0x159B JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x1643 DUP7 DUP3 DUP8 ADD PUSH2 0x1433 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1659 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x166A DUP2 PUSH2 0x164D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1686 JUMPI PUSH2 0x1685 PUSH2 0x13B2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1693 DUP6 DUP3 DUP7 ADD PUSH2 0x1433 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16A4 DUP6 DUP3 DUP7 ADD PUSH2 0x165C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16C3 JUMPI PUSH2 0x16C2 PUSH2 0x13B2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16D0 DUP5 DUP3 DUP6 ADD PUSH2 0x1433 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x170B DUP2 PUSH2 0x13D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x171C DUP4 DUP4 PUSH2 0x1702 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x173E DUP3 PUSH2 0x16D9 JUMP JUMPDEST PUSH2 0x1748 DUP2 DUP6 PUSH2 0x16E3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1753 DUP4 PUSH2 0x16F3 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1783 JUMPI DUP2 MLOAD PUSH2 0x176A DUP9 DUP3 PUSH2 0x1711 JUMP JUMPDEST SWAP8 POP PUSH2 0x1775 DUP4 PUSH2 0x1728 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1756 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17AA DUP3 PUSH2 0x1322 JUMP JUMPDEST PUSH2 0x17B4 DUP2 DUP6 PUSH2 0x1790 JUMP JUMPDEST SWAP4 POP PUSH2 0x17C4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x133C JUMP JUMPDEST PUSH2 0x17CD DUP2 PUSH2 0x134A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E1 DUP2 PUSH2 0x1414 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x17F0 DUP2 PUSH2 0x1485 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x120 DUP4 ADD PUSH0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH0 DUP7 ADD MSTORE PUSH2 0x1811 DUP3 DUP3 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x182B DUP3 DUP3 PUSH2 0x17A0 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1840 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x17D8 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x1853 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x17D8 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x1866 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x17D8 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x1879 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x17D8 JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x188C PUSH1 0xC0 DUP7 ADD DUP3 PUSH2 0x17D8 JUMP JUMPDEST POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x189F PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0x17E7 JUMP JUMPDEST POP PUSH2 0x100 DUP4 ADD MLOAD PUSH2 0x18B4 PUSH2 0x100 DUP7 ADD DUP3 PUSH2 0x17E7 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18D7 DUP2 DUP5 PUSH2 0x17F6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18F5 JUMPI PUSH2 0x18F4 PUSH2 0x13B2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1902 DUP6 DUP3 DUP7 ADD PUSH2 0x1400 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1913 DUP6 DUP3 DUP7 ADD PUSH2 0x1400 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1961 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1974 JUMPI PUSH2 0x1973 PUSH2 0x191D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x19B1 DUP3 PUSH2 0x1414 JUMP JUMPDEST SWAP2 POP PUSH2 0x19BC DUP4 PUSH2 0x1414 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x19D4 JUMPI PUSH2 0x19D3 PUSH2 0x197A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1A6D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1A32 JUMP JUMPDEST PUSH2 0x1A77 DUP7 DUP4 PUSH2 0x1A32 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AB2 PUSH2 0x1AAD PUSH2 0x1AA8 DUP5 PUSH2 0x1414 JUMP JUMPDEST PUSH2 0x1A8F JUMP JUMPDEST PUSH2 0x1414 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ACB DUP4 PUSH2 0x1A98 JUMP JUMPDEST PUSH2 0x1ADF PUSH2 0x1AD7 DUP3 PUSH2 0x1AB9 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1A3E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1AF3 PUSH2 0x1AE7 JUMP JUMPDEST PUSH2 0x1AFE DUP2 DUP5 DUP5 PUSH2 0x1AC2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B21 JUMPI PUSH2 0x1B16 PUSH0 DUP3 PUSH2 0x1AEB JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1B04 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1B66 JUMPI PUSH2 0x1B37 DUP2 PUSH2 0x1A11 JUMP JUMPDEST PUSH2 0x1B40 DUP5 PUSH2 0x1A23 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1B4F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1B63 PUSH2 0x1B5B DUP6 PUSH2 0x1A23 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1B03 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B86 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1B6B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B9E DUP4 DUP4 PUSH2 0x1B77 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BB8 DUP4 DUP4 PUSH2 0x19DA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BD1 JUMPI PUSH2 0x1BD0 PUSH2 0x19E4 JUMP JUMPDEST JUMPDEST PUSH2 0x1BDB DUP3 SLOAD PUSH2 0x194A JUMP JUMPDEST PUSH2 0x1BE6 DUP3 DUP3 DUP6 PUSH2 0x1B25 JUMP JUMPDEST PUSH0 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1C13 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1C01 JUMPI DUP3 DUP8 ADD CALLDATALOAD SWAP1 POP JUMPDEST PUSH2 0x1C0B DUP6 DUP3 PUSH2 0x1B93 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1C21 DUP7 PUSH2 0x1A11 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1C48 JUMPI DUP5 DUP10 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C23 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1C65 JUMPI DUP5 DUP10 ADD CALLDATALOAD PUSH2 0x1C61 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1B77 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C85 DUP3 PUSH2 0x1414 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C90 DUP4 PUSH2 0x1414 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1CA8 JUMPI PUSH2 0x1CA7 PUSH2 0x197A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1D11 DUP2 PUSH2 0x13D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D2A PUSH0 DUP4 ADD DUP7 PUSH2 0x1D08 JUMP JUMPDEST PUSH2 0x1D37 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14B8 JUMP JUMPDEST PUSH2 0x1D44 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14B8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D5F PUSH0 DUP4 ADD DUP5 PUSH2 0x1D08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD DUP12 MSTORE PUSH9 0x5FCE24C8D059E75D65 0xEA 0xEC PUSH16 0xD9D8CD0D2CCD1ED1BF32F0E8CB7709BA PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "189:4655:0:-:0;;;228:29;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1805:7;1778:34;;1875:3;1846:32;;1919:20;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1973:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2043:5;2050:7;1970:5:2;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;2073:6:0::1;:13;;;;;;;;;;;;;;;;;;;;;::::0;;1973:168;;189:4655;;7:99:7;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:75::-;5267:6;5300:2;5294:9;5284:19;;5234:75;:::o;5315:117::-;5424:1;5421;5414:12;5438:117;5547:1;5544;5537:12;5561:117;5670:1;5667;5660:12;5684:117;5793:1;5790;5783:12;5807:102;5848:6;5899:2;5895:7;5890:2;5883:5;5879:14;5875:28;5865:38;;5807:102;;;:::o;5915:281::-;5998:27;6020:4;5998:27;:::i;:::-;5990:6;5986:40;6128:6;6116:10;6113:22;6092:18;6080:10;6077:34;6074:62;6071:88;;;6139:18;;:::i;:::-;6071:88;6179:10;6175:2;6168:22;5958:238;5915:281;;:::o;6202:129::-;6236:6;6263:20;;:::i;:::-;6253:30;;6292:33;6320:4;6312:6;6292:33;:::i;:::-;6202:129;;;:::o;6337:308::-;6399:4;6489:18;6481:6;6478:30;6475:56;;;6511:18;;:::i;:::-;6475:56;6549:29;6571:6;6549:29;:::i;:::-;6541:37;;6633:4;6627;6623:15;6615:23;;6337:308;;;:::o;6651:139::-;6740:6;6735:3;6730;6724:23;6781:1;6772:6;6767:3;6763:16;6756:27;6651:139;;;:::o;6796:434::-;6885:5;6910:66;6926:49;6968:6;6926:49;:::i;:::-;6910:66;:::i;:::-;6901:75;;6999:6;6992:5;6985:21;7037:4;7030:5;7026:16;7075:3;7066:6;7061:3;7057:16;7054:25;7051:112;;;7082:79;;:::i;:::-;7051:112;7172:52;7217:6;7212:3;7207;7172:52;:::i;:::-;6891:339;6796:434;;;;;:::o;7250:355::-;7317:5;7366:3;7359:4;7351:6;7347:17;7343:27;7333:122;;7374:79;;:::i;:::-;7333:122;7484:6;7478:13;7509:90;7595:3;7587:6;7580:4;7572:6;7568:17;7509:90;:::i;:::-;7500:99;;7323:282;7250:355;;;;:::o;7611:853::-;7710:6;7718;7767:2;7755:9;7746:7;7742:23;7738:32;7735:119;;;7773:79;;:::i;:::-;7735:119;7914:1;7903:9;7899:17;7893:24;7944:18;7936:6;7933:30;7930:117;;;7966:79;;:::i;:::-;7930:117;8071:74;8137:7;8128:6;8117:9;8113:22;8071:74;:::i;:::-;8061:84;;7864:291;8215:2;8204:9;8200:18;8194:25;8246:18;8238:6;8235:30;8232:117;;;8268:79;;:::i;:::-;8232:117;8373:74;8439:7;8430:6;8419:9;8415:22;8373:74;:::i;:::-;8363:84;;8165:292;7611:853;;;;;:::o;189:4655:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_add_1193": {
									"entryPoint": 4633,
									"id": 1193,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_approve_897": {
									"entryPoint": 2949,
									"id": 897,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_957": {
									"entryPoint": 3601,
									"id": 957,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_contains_1296": {
									"entryPoint": 4601,
									"id": 1296,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_846": {
									"entryPoint": 3353,
									"id": 846,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1122": {
									"entryPoint": 2942,
									"id": 1122,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1005": {
									"entryPoint": 2967,
									"id": 1005,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_736": {
									"entryPoint": 3113,
									"id": 736,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_813": {
									"entryPoint": 4064,
									"id": 813,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_values_1341": {
									"entryPoint": 4736,
									"id": 1341,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@add_1493": {
									"entryPoint": 3525,
									"id": 1493,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_633": {
									"entryPoint": 2812,
									"id": 633,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_657": {
									"entryPoint": 1004,
									"id": 657,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_592": {
									"entryPoint": 1438,
									"id": 592,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claimAmount_82": {
									"entryPoint": 1507,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claim_139": {
									"entryPoint": 1101,
									"id": 139,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@contains_1547": {
									"entryPoint": 3480,
									"id": 1547,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@createIssue_193": {
									"entryPoint": 1513,
									"id": 193,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@decimals_570": {
									"entryPoint": 1093,
									"id": 570,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getIssue_232": {
									"entryPoint": 2452,
									"id": 232,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@maxSupply_79": {
									"entryPoint": 2806,
									"id": 79,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_552": {
									"entryPoint": 860,
									"id": 552,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_561": {
									"entryPoint": 2308,
									"id": 561,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokensClaimed_76": {
									"entryPoint": 1409,
									"id": 76,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_579": {
									"entryPoint": 1038,
									"id": 579,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_689": {
									"entryPoint": 1047,
									"id": 689,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_616": {
									"entryPoint": 2772,
									"id": 616,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@values_1619": {
									"entryPoint": 3570,
									"id": 1619,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@vote_353": {
									"entryPoint": 1734,
									"id": 353,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_enum$_Vote_$68": {
									"entryPoint": 5724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_calldata_ptr": {
									"entryPoint": 5531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_calldata_ptrt_uint256": {
									"entryPoint": 5616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_enum$_Vote_$68": {
									"entryPoint": 5744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 5905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 5890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool": {
									"entryPoint": 6119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr": {
									"entryPoint": 6048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_SerializedIssue_$64_memory_ptr_to_t_struct$_SerializedIssue_$64_memory_ptr_fromStack": {
									"entryPoint": 6134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7447,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_SerializedIssue_$64_memory_ptr__to_t_struct$_SerializedIssue_$64_memory_ptr__fromStack_reversed": {
									"entryPoint": 6335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 6673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5849,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_calldata_ptr": {
									"entryPoint": 6618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr": {
									"entryPoint": 6032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 6949,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 5081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 6915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 6808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage": {
									"entryPoint": 7086,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4924,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 6691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 6474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 7059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 6799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 7031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6522,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 7387,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6429,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7342,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6628,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 6841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 5523,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5519,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 5527,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5046,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5042,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 6706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 7019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 6891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 6718,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 6850,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_enum$_Vote_$68": {
									"entryPoint": 5709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 6887,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:20001:7",
										"nodeType": "YulBlock",
										"src": "0:20001:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:77:7",
													"nodeType": "YulBlock",
													"src": "349:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:7"
																},
																"nativeSrc": "360:23:7",
																"nodeType": "YulFunctionCall",
																"src": "360:23:7"
															},
															"nativeSrc": "360:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:7"
																		},
																		"nativeSrc": "399:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:7",
																		"nodeType": "YulLiteral",
																		"src": "417:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:7"
																},
																"nativeSrc": "392:27:7",
																"nodeType": "YulFunctionCall",
																"src": "392:27:7"
															},
															"nativeSrc": "392:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:139:7"
											},
											{
												"body": {
													"nativeSrc": "480:54:7",
													"nodeType": "YulBlock",
													"src": "480:54:7",
													"statements": [
														{
															"nativeSrc": "490:38:7",
															"nodeType": "YulAssignment",
															"src": "490:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:7",
																				"nodeType": "YulLiteral",
																				"src": "515:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:7"
																		},
																		"nativeSrc": "504:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:7",
																				"nodeType": "YulLiteral",
																				"src": "524:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:7"
																		},
																		"nativeSrc": "520:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:7"
																},
																"nativeSrc": "500:28:7",
																"nodeType": "YulFunctionCall",
																"src": "500:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:7",
														"nodeType": "YulTypedName",
														"src": "463:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:7",
														"nodeType": "YulTypedName",
														"src": "473:6:7",
														"type": ""
													}
												],
												"src": "432:102:7"
											},
											{
												"body": {
													"nativeSrc": "632:285:7",
													"nodeType": "YulBlock",
													"src": "632:285:7",
													"statements": [
														{
															"nativeSrc": "642:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:7"
																},
																"nativeSrc": "656:39:7",
																"nodeType": "YulFunctionCall",
																"src": "656:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:7",
																	"nodeType": "YulTypedName",
																	"src": "646:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:7",
															"nodeType": "YulAssignment",
															"src": "704:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:7"
																},
																"nativeSrc": "711:71:7",
																"nodeType": "YulFunctionCall",
																"src": "711:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:7",
																				"nodeType": "YulLiteral",
																				"src": "837:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:7"
																		},
																		"nativeSrc": "826:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:7"
																},
																"nativeSrc": "791:65:7",
																"nodeType": "YulFunctionCall",
																"src": "791:65:7"
															},
															"nativeSrc": "791:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:7"
														},
														{
															"nativeSrc": "865:46:7",
															"nodeType": "YulAssignment",
															"src": "865:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:7"
																		},
																		"nativeSrc": "881:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:7"
																},
																"nativeSrc": "872:39:7",
																"nodeType": "YulFunctionCall",
																"src": "872:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:7",
														"nodeType": "YulTypedName",
														"src": "613:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:7",
														"nodeType": "YulTypedName",
														"src": "620:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:7",
														"nodeType": "YulTypedName",
														"src": "628:3:7",
														"type": ""
													}
												],
												"src": "540:377:7"
											},
											{
												"body": {
													"nativeSrc": "1041:195:7",
													"nodeType": "YulBlock",
													"src": "1041:195:7",
													"statements": [
														{
															"nativeSrc": "1051:26:7",
															"nodeType": "YulAssignment",
															"src": "1051:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:7"
																},
																"nativeSrc": "1059:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:7"
																		},
																		"nativeSrc": "1094:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:7"
																		},
																		"nativeSrc": "1113:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:7"
																},
																"nativeSrc": "1087:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:7"
															},
															"nativeSrc": "1087:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:7"
														},
														{
															"nativeSrc": "1143:86:7",
															"nodeType": "YulAssignment",
															"src": "1143:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:7"
																},
																"nativeSrc": "1151:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:7",
														"nodeType": "YulTypedName",
														"src": "1013:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:7",
														"nodeType": "YulTypedName",
														"src": "1025:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:7",
														"nodeType": "YulTypedName",
														"src": "1036:4:7",
														"type": ""
													}
												],
												"src": "923:313:7"
											},
											{
												"body": {
													"nativeSrc": "1282:35:7",
													"nodeType": "YulBlock",
													"src": "1282:35:7",
													"statements": [
														{
															"nativeSrc": "1292:19:7",
															"nodeType": "YulAssignment",
															"src": "1292:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:7"
																},
																"nativeSrc": "1302:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:7",
														"nodeType": "YulTypedName",
														"src": "1275:6:7",
														"type": ""
													}
												],
												"src": "1242:75:7"
											},
											{
												"body": {
													"nativeSrc": "1412:28:7",
													"nodeType": "YulBlock",
													"src": "1412:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:7"
																},
																"nativeSrc": "1422:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:7"
															},
															"nativeSrc": "1422:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:7"
											},
											{
												"body": {
													"nativeSrc": "1535:28:7",
													"nodeType": "YulBlock",
													"src": "1535:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:7"
																},
																"nativeSrc": "1545:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:7"
															},
															"nativeSrc": "1545:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:7"
											},
											{
												"body": {
													"nativeSrc": "1614:81:7",
													"nodeType": "YulBlock",
													"src": "1614:81:7",
													"statements": [
														{
															"nativeSrc": "1624:65:7",
															"nodeType": "YulAssignment",
															"src": "1624:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:7"
																},
																"nativeSrc": "1635:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:7",
														"nodeType": "YulTypedName",
														"src": "1596:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:7",
														"nodeType": "YulTypedName",
														"src": "1606:7:7",
														"type": ""
													}
												],
												"src": "1569:126:7"
											},
											{
												"body": {
													"nativeSrc": "1746:51:7",
													"nodeType": "YulBlock",
													"src": "1746:51:7",
													"statements": [
														{
															"nativeSrc": "1756:35:7",
															"nodeType": "YulAssignment",
															"src": "1756:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:7"
																},
																"nativeSrc": "1767:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:7",
														"nodeType": "YulTypedName",
														"src": "1728:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:7",
														"nodeType": "YulTypedName",
														"src": "1738:7:7",
														"type": ""
													}
												],
												"src": "1701:96:7"
											},
											{
												"body": {
													"nativeSrc": "1846:79:7",
													"nodeType": "YulBlock",
													"src": "1846:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:7",
																"nodeType": "YulBlock",
																"src": "1903:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:7"
																			},
																			"nativeSrc": "1905:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:7"
																		},
																		"nativeSrc": "1905:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:7"
																				},
																				"nativeSrc": "1876:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:7"
																		},
																		"nativeSrc": "1866:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:7"
																},
																"nativeSrc": "1859:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:7"
															},
															"nativeSrc": "1856:63:7",
															"nodeType": "YulIf",
															"src": "1856:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:7",
														"nodeType": "YulTypedName",
														"src": "1839:5:7",
														"type": ""
													}
												],
												"src": "1803:122:7"
											},
											{
												"body": {
													"nativeSrc": "1983:87:7",
													"nodeType": "YulBlock",
													"src": "1983:87:7",
													"statements": [
														{
															"nativeSrc": "1993:29:7",
															"nodeType": "YulAssignment",
															"src": "1993:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:7"
																},
																"nativeSrc": "2002:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:7"
																},
																"nativeSrc": "2031:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:7"
															},
															"nativeSrc": "2031:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:7",
														"nodeType": "YulTypedName",
														"src": "1961:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:7",
														"nodeType": "YulTypedName",
														"src": "1969:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:7",
														"nodeType": "YulTypedName",
														"src": "1977:5:7",
														"type": ""
													}
												],
												"src": "1931:139:7"
											},
											{
												"body": {
													"nativeSrc": "2121:32:7",
													"nodeType": "YulBlock",
													"src": "2121:32:7",
													"statements": [
														{
															"nativeSrc": "2131:16:7",
															"nodeType": "YulAssignment",
															"src": "2131:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:7",
																"nodeType": "YulIdentifier",
																"src": "2142:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:7",
														"nodeType": "YulTypedName",
														"src": "2103:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:7",
														"nodeType": "YulTypedName",
														"src": "2113:7:7",
														"type": ""
													}
												],
												"src": "2076:77:7"
											},
											{
												"body": {
													"nativeSrc": "2202:79:7",
													"nodeType": "YulBlock",
													"src": "2202:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:7",
																"nodeType": "YulBlock",
																"src": "2259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:7"
																			},
																			"nativeSrc": "2261:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:7"
																		},
																		"nativeSrc": "2261:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:7"
																				},
																				"nativeSrc": "2232:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:7"
																		},
																		"nativeSrc": "2222:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:7"
																},
																"nativeSrc": "2215:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:7"
															},
															"nativeSrc": "2212:63:7",
															"nodeType": "YulIf",
															"src": "2212:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:7",
														"nodeType": "YulTypedName",
														"src": "2195:5:7",
														"type": ""
													}
												],
												"src": "2159:122:7"
											},
											{
												"body": {
													"nativeSrc": "2339:87:7",
													"nodeType": "YulBlock",
													"src": "2339:87:7",
													"statements": [
														{
															"nativeSrc": "2349:29:7",
															"nodeType": "YulAssignment",
															"src": "2349:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:7"
																},
																"nativeSrc": "2358:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:7"
																},
																"nativeSrc": "2387:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:7"
															},
															"nativeSrc": "2387:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:7",
														"nodeType": "YulTypedName",
														"src": "2317:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:7",
														"nodeType": "YulTypedName",
														"src": "2325:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:7",
														"nodeType": "YulTypedName",
														"src": "2333:5:7",
														"type": ""
													}
												],
												"src": "2287:139:7"
											},
											{
												"body": {
													"nativeSrc": "2515:391:7",
													"nodeType": "YulBlock",
													"src": "2515:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:7",
																"nodeType": "YulBlock",
																"src": "2561:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:7"
																			},
																			"nativeSrc": "2563:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:7"
																		},
																		"nativeSrc": "2563:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:7"
																		},
																		"nativeSrc": "2532:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:7"
																},
																"nativeSrc": "2528:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:7"
															},
															"nativeSrc": "2525:119:7",
															"nodeType": "YulIf",
															"src": "2525:119:7"
														},
														{
															"nativeSrc": "2654:117:7",
															"nodeType": "YulBlock",
															"src": "2654:117:7",
															"statements": [
																{
																	"nativeSrc": "2669:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:7"
																				},
																				"nativeSrc": "2729:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:7"
																		},
																		"nativeSrc": "2708:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:7",
															"nodeType": "YulBlock",
															"src": "2781:118:7",
															"statements": [
																{
																	"nativeSrc": "2796:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:7"
																				},
																				"nativeSrc": "2857:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:7"
																		},
																		"nativeSrc": "2836:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:7",
														"nodeType": "YulTypedName",
														"src": "2477:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:7",
														"nodeType": "YulTypedName",
														"src": "2488:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:7",
														"nodeType": "YulTypedName",
														"src": "2500:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:7",
														"nodeType": "YulTypedName",
														"src": "2508:6:7",
														"type": ""
													}
												],
												"src": "2432:474:7"
											},
											{
												"body": {
													"nativeSrc": "2954:48:7",
													"nodeType": "YulBlock",
													"src": "2954:48:7",
													"statements": [
														{
															"nativeSrc": "2964:32:7",
															"nodeType": "YulAssignment",
															"src": "2964:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:7"
																		},
																		"nativeSrc": "2982:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:7"
																},
																"nativeSrc": "2975:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:7",
														"nodeType": "YulTypedName",
														"src": "2936:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:7",
														"nodeType": "YulTypedName",
														"src": "2946:7:7",
														"type": ""
													}
												],
												"src": "2912:90:7"
											},
											{
												"body": {
													"nativeSrc": "3067:50:7",
													"nodeType": "YulBlock",
													"src": "3067:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:7"
																		},
																		"nativeSrc": "3089:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:7"
																},
																"nativeSrc": "3077:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:7"
															},
															"nativeSrc": "3077:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:7",
														"nodeType": "YulTypedName",
														"src": "3055:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:7",
														"nodeType": "YulTypedName",
														"src": "3062:3:7",
														"type": ""
													}
												],
												"src": "3008:109:7"
											},
											{
												"body": {
													"nativeSrc": "3215:118:7",
													"nodeType": "YulBlock",
													"src": "3215:118:7",
													"statements": [
														{
															"nativeSrc": "3225:26:7",
															"nodeType": "YulAssignment",
															"src": "3225:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:7"
																},
																"nativeSrc": "3233:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:7"
																		},
																		"nativeSrc": "3308:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:7"
																},
																"nativeSrc": "3261:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:7"
															},
															"nativeSrc": "3261:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:7",
														"nodeType": "YulTypedName",
														"src": "3187:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:7",
														"nodeType": "YulTypedName",
														"src": "3199:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:7",
														"nodeType": "YulTypedName",
														"src": "3210:4:7",
														"type": ""
													}
												],
												"src": "3123:210:7"
											},
											{
												"body": {
													"nativeSrc": "3404:53:7",
													"nodeType": "YulBlock",
													"src": "3404:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:7"
																		},
																		"nativeSrc": "3426:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:7"
																},
																"nativeSrc": "3414:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:7"
															},
															"nativeSrc": "3414:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:7",
														"nodeType": "YulTypedName",
														"src": "3392:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:7",
														"nodeType": "YulTypedName",
														"src": "3399:3:7",
														"type": ""
													}
												],
												"src": "3339:118:7"
											},
											{
												"body": {
													"nativeSrc": "3561:124:7",
													"nodeType": "YulBlock",
													"src": "3561:124:7",
													"statements": [
														{
															"nativeSrc": "3571:26:7",
															"nodeType": "YulAssignment",
															"src": "3571:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:7"
																},
																"nativeSrc": "3579:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:7"
																		},
																		"nativeSrc": "3660:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:7"
																},
																"nativeSrc": "3607:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:7"
															},
															"nativeSrc": "3607:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:7",
														"nodeType": "YulTypedName",
														"src": "3533:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:7",
														"nodeType": "YulTypedName",
														"src": "3545:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:7",
														"nodeType": "YulTypedName",
														"src": "3556:4:7",
														"type": ""
													}
												],
												"src": "3463:222:7"
											},
											{
												"body": {
													"nativeSrc": "3791:519:7",
													"nodeType": "YulBlock",
													"src": "3791:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:7",
																"nodeType": "YulBlock",
																"src": "3837:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:7"
																			},
																			"nativeSrc": "3839:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:7"
																		},
																		"nativeSrc": "3839:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:7"
																		},
																		"nativeSrc": "3808:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:7"
																},
																"nativeSrc": "3804:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:7"
															},
															"nativeSrc": "3801:119:7",
															"nodeType": "YulIf",
															"src": "3801:119:7"
														},
														{
															"nativeSrc": "3930:117:7",
															"nodeType": "YulBlock",
															"src": "3930:117:7",
															"statements": [
																{
																	"nativeSrc": "3945:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:7"
																				},
																				"nativeSrc": "4005:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:7"
																		},
																		"nativeSrc": "3984:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:7",
															"nodeType": "YulBlock",
															"src": "4057:118:7",
															"statements": [
																{
																	"nativeSrc": "4072:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:7"
																				},
																				"nativeSrc": "4133:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:7"
																		},
																		"nativeSrc": "4112:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:7",
															"nodeType": "YulBlock",
															"src": "4185:118:7",
															"statements": [
																{
																	"nativeSrc": "4200:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:7"
																				},
																				"nativeSrc": "4261:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:7"
																		},
																		"nativeSrc": "4240:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:7",
														"nodeType": "YulTypedName",
														"src": "3745:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:7",
														"nodeType": "YulTypedName",
														"src": "3756:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:7",
														"nodeType": "YulTypedName",
														"src": "3768:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:7",
														"nodeType": "YulTypedName",
														"src": "3776:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:7",
														"nodeType": "YulTypedName",
														"src": "3784:6:7",
														"type": ""
													}
												],
												"src": "3691:619:7"
											},
											{
												"body": {
													"nativeSrc": "4359:43:7",
													"nodeType": "YulBlock",
													"src": "4359:43:7",
													"statements": [
														{
															"nativeSrc": "4369:27:7",
															"nodeType": "YulAssignment",
															"src": "4369:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:7"
																},
																"nativeSrc": "4380:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:7",
														"nodeType": "YulTypedName",
														"src": "4341:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:7",
														"nodeType": "YulTypedName",
														"src": "4351:7:7",
														"type": ""
													}
												],
												"src": "4316:86:7"
											},
											{
												"body": {
													"nativeSrc": "4469:51:7",
													"nodeType": "YulBlock",
													"src": "4469:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:7"
																		},
																		"nativeSrc": "4491:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:7"
																},
																"nativeSrc": "4479:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:7"
															},
															"nativeSrc": "4479:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:7",
														"nodeType": "YulTypedName",
														"src": "4457:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:7",
														"nodeType": "YulTypedName",
														"src": "4464:3:7",
														"type": ""
													}
												],
												"src": "4408:112:7"
											},
											{
												"body": {
													"nativeSrc": "4620:120:7",
													"nodeType": "YulBlock",
													"src": "4620:120:7",
													"statements": [
														{
															"nativeSrc": "4630:26:7",
															"nodeType": "YulAssignment",
															"src": "4630:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:7"
																},
																"nativeSrc": "4638:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:7"
																		},
																		"nativeSrc": "4715:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:7"
																},
																"nativeSrc": "4666:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:7"
															},
															"nativeSrc": "4666:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:7",
														"nodeType": "YulTypedName",
														"src": "4592:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:7",
														"nodeType": "YulTypedName",
														"src": "4604:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:7",
														"nodeType": "YulTypedName",
														"src": "4615:4:7",
														"type": ""
													}
												],
												"src": "4526:214:7"
											},
											{
												"body": {
													"nativeSrc": "4812:263:7",
													"nodeType": "YulBlock",
													"src": "4812:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:7",
																"nodeType": "YulBlock",
																"src": "4858:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:7"
																			},
																			"nativeSrc": "4860:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:7"
																		},
																		"nativeSrc": "4860:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:7"
																		},
																		"nativeSrc": "4829:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:7"
																},
																"nativeSrc": "4825:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:7"
															},
															"nativeSrc": "4822:119:7",
															"nodeType": "YulIf",
															"src": "4822:119:7"
														},
														{
															"nativeSrc": "4951:117:7",
															"nodeType": "YulBlock",
															"src": "4951:117:7",
															"statements": [
																{
																	"nativeSrc": "4966:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:7"
																				},
																				"nativeSrc": "5026:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:7"
																		},
																		"nativeSrc": "5005:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:7",
														"nodeType": "YulTypedName",
														"src": "4782:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:7",
														"nodeType": "YulTypedName",
														"src": "4793:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:7",
														"nodeType": "YulTypedName",
														"src": "4805:6:7",
														"type": ""
													}
												],
												"src": "4746:329:7"
											},
											{
												"body": {
													"nativeSrc": "5170:28:7",
													"nodeType": "YulBlock",
													"src": "5170:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5187:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5187:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5190:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5190:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5180:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5180:6:7"
																},
																"nativeSrc": "5180:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5180:12:7"
															},
															"nativeSrc": "5180:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "5180:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5081:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5081:117:7"
											},
											{
												"body": {
													"nativeSrc": "5293:28:7",
													"nodeType": "YulBlock",
													"src": "5293:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5310:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5310:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5313:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5313:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5303:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5303:6:7"
																},
																"nativeSrc": "5303:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5303:12:7"
															},
															"nativeSrc": "5303:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "5303:12:7"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "5204:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5204:117:7"
											},
											{
												"body": {
													"nativeSrc": "5416:28:7",
													"nodeType": "YulBlock",
													"src": "5416:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5433:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5433:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5436:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5436:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5426:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5426:6:7"
																},
																"nativeSrc": "5426:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5426:12:7"
															},
															"nativeSrc": "5426:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "5426:12:7"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "5327:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5327:117:7"
											},
											{
												"body": {
													"nativeSrc": "5539:478:7",
													"nodeType": "YulBlock",
													"src": "5539:478:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5588:83:7",
																"nodeType": "YulBlock",
																"src": "5588:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "5590:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5590:77:7"
																			},
																			"nativeSrc": "5590:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5590:79:7"
																		},
																		"nativeSrc": "5590:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5590:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "5567:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5567:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5575:4:7",
																						"nodeType": "YulLiteral",
																						"src": "5575:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5563:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5563:3:7"
																				},
																				"nativeSrc": "5563:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5563:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "5582:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5582:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5559:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5559:3:7"
																		},
																		"nativeSrc": "5559:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5559:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5552:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5552:6:7"
																},
																"nativeSrc": "5552:35:7",
																"nodeType": "YulFunctionCall",
																"src": "5552:35:7"
															},
															"nativeSrc": "5549:122:7",
															"nodeType": "YulIf",
															"src": "5549:122:7"
														},
														{
															"nativeSrc": "5680:30:7",
															"nodeType": "YulAssignment",
															"src": "5680:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5703:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5703:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5690:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "5690:12:7"
																},
																"nativeSrc": "5690:20:7",
																"nodeType": "YulFunctionCall",
																"src": "5690:20:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5680:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5680:6:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5753:83:7",
																"nodeType": "YulBlock",
																"src": "5753:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "5755:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5755:77:7"
																			},
																			"nativeSrc": "5755:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5755:79:7"
																		},
																		"nativeSrc": "5755:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5755:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5725:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5725:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5733:18:7",
																		"nodeType": "YulLiteral",
																		"src": "5733:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5722:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5722:2:7"
																},
																"nativeSrc": "5722:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5722:30:7"
															},
															"nativeSrc": "5719:117:7",
															"nodeType": "YulIf",
															"src": "5719:117:7"
														},
														{
															"nativeSrc": "5845:29:7",
															"nodeType": "YulAssignment",
															"src": "5845:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5861:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5861:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5869:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5869:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5857:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5857:3:7"
																},
																"nativeSrc": "5857:17:7",
																"nodeType": "YulFunctionCall",
																"src": "5857:17:7"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "5845:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5845:8:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5928:83:7",
																"nodeType": "YulBlock",
																"src": "5928:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "5930:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5930:77:7"
																			},
																			"nativeSrc": "5930:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5930:79:7"
																		},
																		"nativeSrc": "5930:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5930:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "5893:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "5893:8:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "5907:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5907:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5915:4:7",
																						"nodeType": "YulLiteral",
																						"src": "5915:4:7",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5903:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5903:3:7"
																				},
																				"nativeSrc": "5903:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5903:17:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5889:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5889:3:7"
																		},
																		"nativeSrc": "5889:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5889:32:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5923:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5923:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5886:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5886:2:7"
																},
																"nativeSrc": "5886:41:7",
																"nodeType": "YulFunctionCall",
																"src": "5886:41:7"
															},
															"nativeSrc": "5883:128:7",
															"nodeType": "YulIf",
															"src": "5883:128:7"
														}
													]
												},
												"name": "abi_decode_t_string_calldata_ptr",
												"nativeSrc": "5464:553:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5506:6:7",
														"nodeType": "YulTypedName",
														"src": "5506:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5514:3:7",
														"nodeType": "YulTypedName",
														"src": "5514:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "5522:8:7",
														"nodeType": "YulTypedName",
														"src": "5522:8:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5532:6:7",
														"nodeType": "YulTypedName",
														"src": "5532:6:7",
														"type": ""
													}
												],
												"src": "5464:553:7"
											},
											{
												"body": {
													"nativeSrc": "6126:571:7",
													"nodeType": "YulBlock",
													"src": "6126:571:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6172:83:7",
																"nodeType": "YulBlock",
																"src": "6172:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6174:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6174:77:7"
																			},
																			"nativeSrc": "6174:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6174:79:7"
																		},
																		"nativeSrc": "6174:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6174:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6147:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6147:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6156:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6156:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6143:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6143:3:7"
																		},
																		"nativeSrc": "6143:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6143:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6168:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6168:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6139:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6139:3:7"
																},
																"nativeSrc": "6139:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6139:32:7"
															},
															"nativeSrc": "6136:119:7",
															"nodeType": "YulIf",
															"src": "6136:119:7"
														},
														{
															"nativeSrc": "6265:297:7",
															"nodeType": "YulBlock",
															"src": "6265:297:7",
															"statements": [
																{
																	"nativeSrc": "6280:45:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6280:45:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6311:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6311:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6322:1:7",
																						"nodeType": "YulLiteral",
																						"src": "6322:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6307:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6307:3:7"
																				},
																				"nativeSrc": "6307:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6307:17:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "6294:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "6294:12:7"
																		},
																		"nativeSrc": "6294:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6294:31:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6284:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6284:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "6372:83:7",
																		"nodeType": "YulBlock",
																		"src": "6372:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "6374:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "6374:77:7"
																					},
																					"nativeSrc": "6374:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6374:79:7"
																				},
																				"nativeSrc": "6374:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "6374:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6344:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6344:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6352:18:7",
																				"nodeType": "YulLiteral",
																				"src": "6352:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6341:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6341:2:7"
																		},
																		"nativeSrc": "6341:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6341:30:7"
																	},
																	"nativeSrc": "6338:117:7",
																	"nodeType": "YulIf",
																	"src": "6338:117:7"
																},
																{
																	"nativeSrc": "6469:83:7",
																	"nodeType": "YulAssignment",
																	"src": "6469:83:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6524:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6524:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6535:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6535:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6520:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6520:3:7"
																				},
																				"nativeSrc": "6520:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6520:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6544:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6544:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_calldata_ptr",
																			"nativeSrc": "6487:32:7",
																			"nodeType": "YulIdentifier",
																			"src": "6487:32:7"
																		},
																		"nativeSrc": "6487:65:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6487:65:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6469:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6469:6:7"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "6477:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6477:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6572:118:7",
															"nodeType": "YulBlock",
															"src": "6572:118:7",
															"statements": [
																{
																	"nativeSrc": "6587:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6587:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6601:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6601:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6591:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6591:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6617:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6617:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6652:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6652:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6663:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6663:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6648:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6648:3:7"
																				},
																				"nativeSrc": "6648:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6648:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6672:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6672:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6627:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6627:20:7"
																		},
																		"nativeSrc": "6627:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6627:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6617:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6617:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_calldata_ptrt_uint256",
												"nativeSrc": "6023:674:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6080:9:7",
														"nodeType": "YulTypedName",
														"src": "6080:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6091:7:7",
														"nodeType": "YulTypedName",
														"src": "6091:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6103:6:7",
														"nodeType": "YulTypedName",
														"src": "6103:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6111:6:7",
														"nodeType": "YulTypedName",
														"src": "6111:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6119:6:7",
														"nodeType": "YulTypedName",
														"src": "6119:6:7",
														"type": ""
													}
												],
												"src": "6023:674:7"
											},
											{
												"body": {
													"nativeSrc": "6753:56:7",
													"nodeType": "YulBlock",
													"src": "6753:56:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6787:16:7",
																"nodeType": "YulBlock",
																"src": "6787:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6796:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6796:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6799:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6799:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6789:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6789:6:7"
																			},
																			"nativeSrc": "6789:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6789:12:7"
																		},
																		"nativeSrc": "6789:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6789:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6776:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6776:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6783:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6783:1:7",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6773:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6773:2:7"
																		},
																		"nativeSrc": "6773:12:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6773:12:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6766:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6766:6:7"
																},
																"nativeSrc": "6766:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6766:20:7"
															},
															"nativeSrc": "6763:40:7",
															"nodeType": "YulIf",
															"src": "6763:40:7"
														}
													]
												},
												"name": "validator_revert_t_enum$_Vote_$68",
												"nativeSrc": "6703:106:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6746:5:7",
														"nodeType": "YulTypedName",
														"src": "6746:5:7",
														"type": ""
													}
												],
												"src": "6703:106:7"
											},
											{
												"body": {
													"nativeSrc": "6874:94:7",
													"nodeType": "YulBlock",
													"src": "6874:94:7",
													"statements": [
														{
															"nativeSrc": "6884:29:7",
															"nodeType": "YulAssignment",
															"src": "6884:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6906:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6906:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6893:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "6893:12:7"
																},
																"nativeSrc": "6893:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6893:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6884:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6884:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6956:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6956:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_Vote_$68",
																	"nativeSrc": "6922:33:7",
																	"nodeType": "YulIdentifier",
																	"src": "6922:33:7"
																},
																"nativeSrc": "6922:40:7",
																"nodeType": "YulFunctionCall",
																"src": "6922:40:7"
															},
															"nativeSrc": "6922:40:7",
															"nodeType": "YulExpressionStatement",
															"src": "6922:40:7"
														}
													]
												},
												"name": "abi_decode_t_enum$_Vote_$68",
												"nativeSrc": "6815:153:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6852:6:7",
														"nodeType": "YulTypedName",
														"src": "6852:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6860:3:7",
														"nodeType": "YulTypedName",
														"src": "6860:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6868:5:7",
														"nodeType": "YulTypedName",
														"src": "6868:5:7",
														"type": ""
													}
												],
												"src": "6815:153:7"
											},
											{
												"body": {
													"nativeSrc": "7064:398:7",
													"nodeType": "YulBlock",
													"src": "7064:398:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7110:83:7",
																"nodeType": "YulBlock",
																"src": "7110:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7112:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7112:77:7"
																			},
																			"nativeSrc": "7112:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7112:79:7"
																		},
																		"nativeSrc": "7112:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7112:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7085:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7085:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7094:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7094:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7081:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7081:3:7"
																		},
																		"nativeSrc": "7081:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7081:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7106:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7106:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7077:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7077:3:7"
																},
																"nativeSrc": "7077:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7077:32:7"
															},
															"nativeSrc": "7074:119:7",
															"nodeType": "YulIf",
															"src": "7074:119:7"
														},
														{
															"nativeSrc": "7203:117:7",
															"nodeType": "YulBlock",
															"src": "7203:117:7",
															"statements": [
																{
																	"nativeSrc": "7218:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7218:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7232:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7232:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7222:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7222:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7247:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7247:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7282:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7282:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7293:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7293:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7278:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7278:3:7"
																				},
																				"nativeSrc": "7278:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7278:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7302:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7302:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7257:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7257:20:7"
																		},
																		"nativeSrc": "7257:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7257:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7247:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7247:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7330:125:7",
															"nodeType": "YulBlock",
															"src": "7330:125:7",
															"statements": [
																{
																	"nativeSrc": "7345:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7345:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7359:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7359:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7349:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7349:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7375:70:7",
																	"nodeType": "YulAssignment",
																	"src": "7375:70:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7417:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7417:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7428:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7428:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7413:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7413:3:7"
																				},
																				"nativeSrc": "7413:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7413:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7437:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7437:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_Vote_$68",
																			"nativeSrc": "7385:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "7385:27:7"
																		},
																		"nativeSrc": "7385:60:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7385:60:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7375:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7375:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_enum$_Vote_$68",
												"nativeSrc": "6974:488:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7026:9:7",
														"nodeType": "YulTypedName",
														"src": "7026:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7037:7:7",
														"nodeType": "YulTypedName",
														"src": "7037:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7049:6:7",
														"nodeType": "YulTypedName",
														"src": "7049:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7057:6:7",
														"nodeType": "YulTypedName",
														"src": "7057:6:7",
														"type": ""
													}
												],
												"src": "6974:488:7"
											},
											{
												"body": {
													"nativeSrc": "7534:263:7",
													"nodeType": "YulBlock",
													"src": "7534:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7580:83:7",
																"nodeType": "YulBlock",
																"src": "7580:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7582:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7582:77:7"
																			},
																			"nativeSrc": "7582:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7582:79:7"
																		},
																		"nativeSrc": "7582:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7582:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7555:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7555:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7564:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7564:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7551:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7551:3:7"
																		},
																		"nativeSrc": "7551:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7551:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7576:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7576:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7547:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7547:3:7"
																},
																"nativeSrc": "7547:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7547:32:7"
															},
															"nativeSrc": "7544:119:7",
															"nodeType": "YulIf",
															"src": "7544:119:7"
														},
														{
															"nativeSrc": "7673:117:7",
															"nodeType": "YulBlock",
															"src": "7673:117:7",
															"statements": [
																{
																	"nativeSrc": "7688:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7688:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7702:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7702:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7692:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7692:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7717:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7717:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7752:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7752:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7763:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7763:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7748:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7748:3:7"
																				},
																				"nativeSrc": "7748:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7748:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7772:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7772:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7727:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7727:20:7"
																		},
																		"nativeSrc": "7727:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7727:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7717:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7717:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "7468:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7504:9:7",
														"nodeType": "YulTypedName",
														"src": "7504:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7515:7:7",
														"nodeType": "YulTypedName",
														"src": "7515:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7527:6:7",
														"nodeType": "YulTypedName",
														"src": "7527:6:7",
														"type": ""
													}
												],
												"src": "7468:329:7"
											},
											{
												"body": {
													"nativeSrc": "7877:40:7",
													"nodeType": "YulBlock",
													"src": "7877:40:7",
													"statements": [
														{
															"nativeSrc": "7888:22:7",
															"nodeType": "YulAssignment",
															"src": "7888:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7904:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7904:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7898:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7898:5:7"
																},
																"nativeSrc": "7898:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7898:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7888:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7888:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "7803:114:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7860:5:7",
														"nodeType": "YulTypedName",
														"src": "7860:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7870:6:7",
														"nodeType": "YulTypedName",
														"src": "7870:6:7",
														"type": ""
													}
												],
												"src": "7803:114:7"
											},
											{
												"body": {
													"nativeSrc": "8024:73:7",
													"nodeType": "YulBlock",
													"src": "8024:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8041:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8041:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8046:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8046:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8034:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:7"
																},
																"nativeSrc": "8034:19:7",
																"nodeType": "YulFunctionCall",
																"src": "8034:19:7"
															},
															"nativeSrc": "8034:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "8034:19:7"
														},
														{
															"nativeSrc": "8062:29:7",
															"nodeType": "YulAssignment",
															"src": "8062:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8081:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8081:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8086:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8086:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8077:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8077:3:7"
																},
																"nativeSrc": "8077:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8077:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8062:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "8062:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "7923:174:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7996:3:7",
														"nodeType": "YulTypedName",
														"src": "7996:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8001:6:7",
														"nodeType": "YulTypedName",
														"src": "8001:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8012:11:7",
														"nodeType": "YulTypedName",
														"src": "8012:11:7",
														"type": ""
													}
												],
												"src": "7923:174:7"
											},
											{
												"body": {
													"nativeSrc": "8175:60:7",
													"nodeType": "YulBlock",
													"src": "8175:60:7",
													"statements": [
														{
															"nativeSrc": "8185:11:7",
															"nodeType": "YulAssignment",
															"src": "8185:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "8193:3:7",
																"nodeType": "YulIdentifier",
																"src": "8193:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8185:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8185:4:7"
																}
															]
														},
														{
															"nativeSrc": "8206:22:7",
															"nodeType": "YulAssignment",
															"src": "8206:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "8218:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8218:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8223:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8223:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8214:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8214:3:7"
																},
																"nativeSrc": "8214:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8214:14:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8206:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8206:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "8103:132:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "8162:3:7",
														"nodeType": "YulTypedName",
														"src": "8162:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "8170:4:7",
														"nodeType": "YulTypedName",
														"src": "8170:4:7",
														"type": ""
													}
												],
												"src": "8103:132:7"
											},
											{
												"body": {
													"nativeSrc": "8296:53:7",
													"nodeType": "YulBlock",
													"src": "8296:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8313:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8313:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8336:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8336:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8318:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "8318:17:7"
																		},
																		"nativeSrc": "8318:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8318:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8306:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8306:6:7"
																},
																"nativeSrc": "8306:37:7",
																"nodeType": "YulFunctionCall",
																"src": "8306:37:7"
															},
															"nativeSrc": "8306:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "8306:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "8241:108:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8284:5:7",
														"nodeType": "YulTypedName",
														"src": "8284:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8291:3:7",
														"nodeType": "YulTypedName",
														"src": "8291:3:7",
														"type": ""
													}
												],
												"src": "8241:108:7"
											},
											{
												"body": {
													"nativeSrc": "8435:99:7",
													"nodeType": "YulBlock",
													"src": "8435:99:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8479:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8479:6:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8487:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8487:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nativeSrc": "8445:33:7",
																	"nodeType": "YulIdentifier",
																	"src": "8445:33:7"
																},
																"nativeSrc": "8445:46:7",
																"nodeType": "YulFunctionCall",
																"src": "8445:46:7"
															},
															"nativeSrc": "8445:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "8445:46:7"
														},
														{
															"nativeSrc": "8500:28:7",
															"nodeType": "YulAssignment",
															"src": "8500:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8518:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8518:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8523:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8523:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8514:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8514:3:7"
																},
																"nativeSrc": "8514:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8514:14:7"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "8500:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "8500:10:7"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nativeSrc": "8355:179:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "8408:6:7",
														"nodeType": "YulTypedName",
														"src": "8408:6:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8416:3:7",
														"nodeType": "YulTypedName",
														"src": "8416:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "8424:10:7",
														"nodeType": "YulTypedName",
														"src": "8424:10:7",
														"type": ""
													}
												],
												"src": "8355:179:7"
											},
											{
												"body": {
													"nativeSrc": "8615:38:7",
													"nodeType": "YulBlock",
													"src": "8615:38:7",
													"statements": [
														{
															"nativeSrc": "8625:22:7",
															"nodeType": "YulAssignment",
															"src": "8625:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "8637:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8637:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8642:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8642:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8633:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8633:3:7"
																},
																"nativeSrc": "8633:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8633:14:7"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "8625:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8625:4:7"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "8540:113:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "8602:3:7",
														"nodeType": "YulTypedName",
														"src": "8602:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "8610:4:7",
														"nodeType": "YulTypedName",
														"src": "8610:4:7",
														"type": ""
													}
												],
												"src": "8540:113:7"
											},
											{
												"body": {
													"nativeSrc": "8803:598:7",
													"nodeType": "YulBlock",
													"src": "8803:598:7",
													"statements": [
														{
															"nativeSrc": "8813:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8813:68:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8875:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8875:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "8827:47:7",
																	"nodeType": "YulIdentifier",
																	"src": "8827:47:7"
																},
																"nativeSrc": "8827:54:7",
																"nodeType": "YulFunctionCall",
																"src": "8827:54:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8817:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8817:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8890:83:7",
															"nodeType": "YulAssignment",
															"src": "8890:83:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8961:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8961:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8966:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8966:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "8897:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "8897:63:7"
																},
																"nativeSrc": "8897:76:7",
																"nodeType": "YulFunctionCall",
																"src": "8897:76:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8890:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8890:3:7"
																}
															]
														},
														{
															"nativeSrc": "8982:71:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8982:71:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9047:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9047:5:7"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "8997:49:7",
																	"nodeType": "YulIdentifier",
																	"src": "8997:49:7"
																},
																"nativeSrc": "8997:56:7",
																"nodeType": "YulFunctionCall",
																"src": "8997:56:7"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "8986:7:7",
																	"nodeType": "YulTypedName",
																	"src": "8986:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9062:21:7",
															"nodeType": "YulVariableDeclaration",
															"src": "9062:21:7",
															"value": {
																"name": "baseRef",
																"nativeSrc": "9076:7:7",
																"nodeType": "YulIdentifier",
																"src": "9076:7:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "9066:6:7",
																	"nodeType": "YulTypedName",
																	"src": "9066:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9152:224:7",
																"nodeType": "YulBlock",
																"src": "9152:224:7",
																"statements": [
																	{
																		"nativeSrc": "9166:34:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9166:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "9193:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9193:6:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9187:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9187:5:7"
																			},
																			"nativeSrc": "9187:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9187:13:7"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "9170:13:7",
																				"nodeType": "YulTypedName",
																				"src": "9170:13:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "9213:70:7",
																		"nodeType": "YulAssignment",
																		"src": "9213:70:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "9264:13:7",
																					"nodeType": "YulIdentifier",
																					"src": "9264:13:7"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "9279:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9279:3:7"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nativeSrc": "9220:43:7",
																				"nodeType": "YulIdentifier",
																				"src": "9220:43:7"
																			},
																			"nativeSrc": "9220:63:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9220:63:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "9213:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9213:3:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9296:70:7",
																		"nodeType": "YulAssignment",
																		"src": "9296:70:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "9359:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9359:6:7"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nativeSrc": "9306:52:7",
																				"nodeType": "YulIdentifier",
																				"src": "9306:52:7"
																			},
																			"nativeSrc": "9306:60:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9306:60:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "9296:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9296:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "9114:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9114:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9117:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9117:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "9111:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9111:2:7"
																},
																"nativeSrc": "9111:13:7",
																"nodeType": "YulFunctionCall",
																"src": "9111:13:7"
															},
															"nativeSrc": "9092:284:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9125:18:7",
																"nodeType": "YulBlock",
																"src": "9125:18:7",
																"statements": [
																	{
																		"nativeSrc": "9127:14:7",
																		"nodeType": "YulAssignment",
																		"src": "9127:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "9136:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "9136:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9139:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9139:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9132:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9132:3:7"
																			},
																			"nativeSrc": "9132:9:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9132:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "9127:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "9127:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "9096:14:7",
																"nodeType": "YulBlock",
																"src": "9096:14:7",
																"statements": [
																	{
																		"nativeSrc": "9098:10:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9098:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9107:1:7",
																			"nodeType": "YulLiteral",
																			"src": "9107:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "9102:1:7",
																				"nodeType": "YulTypedName",
																				"src": "9102:1:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "9092:284:7"
														},
														{
															"nativeSrc": "9385:10:7",
															"nodeType": "YulAssignment",
															"src": "9385:10:7",
															"value": {
																"name": "pos",
																"nativeSrc": "9392:3:7",
																"nodeType": "YulIdentifier",
																"src": "9392:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9385:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9385:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "8689:712:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8782:5:7",
														"nodeType": "YulTypedName",
														"src": "8782:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8789:3:7",
														"nodeType": "YulTypedName",
														"src": "8789:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8798:3:7",
														"nodeType": "YulTypedName",
														"src": "8798:3:7",
														"type": ""
													}
												],
												"src": "8689:712:7"
											},
											{
												"body": {
													"nativeSrc": "9493:73:7",
													"nodeType": "YulBlock",
													"src": "9493:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9510:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9510:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9515:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9515:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9503:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9503:6:7"
																},
																"nativeSrc": "9503:19:7",
																"nodeType": "YulFunctionCall",
																"src": "9503:19:7"
															},
															"nativeSrc": "9503:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "9503:19:7"
														},
														{
															"nativeSrc": "9531:29:7",
															"nodeType": "YulAssignment",
															"src": "9531:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9550:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9550:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9555:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9555:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9546:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9546:3:7"
																},
																"nativeSrc": "9546:14:7",
																"nodeType": "YulFunctionCall",
																"src": "9546:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9531:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "9531:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr",
												"nativeSrc": "9407:159:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9465:3:7",
														"nodeType": "YulTypedName",
														"src": "9465:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9470:6:7",
														"nodeType": "YulTypedName",
														"src": "9470:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9481:11:7",
														"nodeType": "YulTypedName",
														"src": "9481:11:7",
														"type": ""
													}
												],
												"src": "9407:159:7"
											},
											{
												"body": {
													"nativeSrc": "9654:275:7",
													"nodeType": "YulBlock",
													"src": "9654:275:7",
													"statements": [
														{
															"nativeSrc": "9664:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "9664:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9711:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9711:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "9678:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "9678:32:7"
																},
																"nativeSrc": "9678:39:7",
																"nodeType": "YulFunctionCall",
																"src": "9678:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9668:6:7",
																	"nodeType": "YulTypedName",
																	"src": "9668:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9726:68:7",
															"nodeType": "YulAssignment",
															"src": "9726:68:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9782:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9782:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9787:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9787:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr",
																	"nativeSrc": "9733:48:7",
																	"nodeType": "YulIdentifier",
																	"src": "9733:48:7"
																},
																"nativeSrc": "9733:61:7",
																"nodeType": "YulFunctionCall",
																"src": "9733:61:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9726:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9726:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9842:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9842:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9849:4:7",
																				"nodeType": "YulLiteral",
																				"src": "9849:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9838:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9838:3:7"
																		},
																		"nativeSrc": "9838:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9838:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "9856:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9856:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9861:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9861:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "9803:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "9803:34:7"
																},
																"nativeSrc": "9803:65:7",
																"nodeType": "YulFunctionCall",
																"src": "9803:65:7"
															},
															"nativeSrc": "9803:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "9803:65:7"
														},
														{
															"nativeSrc": "9877:46:7",
															"nodeType": "YulAssignment",
															"src": "9877:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9888:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9888:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9915:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9915:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "9893:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "9893:21:7"
																		},
																		"nativeSrc": "9893:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9893:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9884:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9884:3:7"
																},
																"nativeSrc": "9884:39:7",
																"nodeType": "YulFunctionCall",
																"src": "9884:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9877:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9877:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
												"nativeSrc": "9572:357:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9635:5:7",
														"nodeType": "YulTypedName",
														"src": "9635:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9642:3:7",
														"nodeType": "YulTypedName",
														"src": "9642:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9650:3:7",
														"nodeType": "YulTypedName",
														"src": "9650:3:7",
														"type": ""
													}
												],
												"src": "9572:357:7"
											},
											{
												"body": {
													"nativeSrc": "9990:53:7",
													"nodeType": "YulBlock",
													"src": "9990:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10007:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10007:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10030:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "10030:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10012:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "10012:17:7"
																		},
																		"nativeSrc": "10012:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10012:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10000:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10000:6:7"
																},
																"nativeSrc": "10000:37:7",
																"nodeType": "YulFunctionCall",
																"src": "10000:37:7"
															},
															"nativeSrc": "10000:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "10000:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "9935:108:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9978:5:7",
														"nodeType": "YulTypedName",
														"src": "9978:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9985:3:7",
														"nodeType": "YulTypedName",
														"src": "9985:3:7",
														"type": ""
													}
												],
												"src": "9935:108:7"
											},
											{
												"body": {
													"nativeSrc": "10098:50:7",
													"nodeType": "YulBlock",
													"src": "10098:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10115:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10115:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10135:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "10135:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "10120:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "10120:14:7"
																		},
																		"nativeSrc": "10120:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10120:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10108:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10108:6:7"
																},
																"nativeSrc": "10108:34:7",
																"nodeType": "YulFunctionCall",
																"src": "10108:34:7"
															},
															"nativeSrc": "10108:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "10108:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool",
												"nativeSrc": "10049:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10086:5:7",
														"nodeType": "YulTypedName",
														"src": "10086:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10093:3:7",
														"nodeType": "YulTypedName",
														"src": "10093:3:7",
														"type": ""
													}
												],
												"src": "10049:99:7"
											},
											{
												"body": {
													"nativeSrc": "10376:1834:7",
													"nodeType": "YulBlock",
													"src": "10376:1834:7",
													"statements": [
														{
															"nativeSrc": "10386:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "10386:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10402:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10402:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10407:6:7",
																		"nodeType": "YulLiteral",
																		"src": "10407:6:7",
																		"type": "",
																		"value": "0x0120"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10398:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10398:3:7"
																},
																"nativeSrc": "10398:16:7",
																"nodeType": "YulFunctionCall",
																"src": "10398:16:7"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "10390:4:7",
																	"nodeType": "YulTypedName",
																	"src": "10390:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10424:267:7",
															"nodeType": "YulBlock",
															"src": "10424:267:7",
															"statements": [
																{
																	"nativeSrc": "10461:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10461:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10491:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "10491:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10498:4:7",
																						"nodeType": "YulLiteral",
																						"src": "10498:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10487:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10487:3:7"
																				},
																				"nativeSrc": "10487:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10487:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10481:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "10481:5:7"
																		},
																		"nativeSrc": "10481:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10481:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "10465:12:7",
																			"nodeType": "YulTypedName",
																			"src": "10465:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "10529:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "10529:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10534:4:7",
																						"nodeType": "YulLiteral",
																						"src": "10534:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10525:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10525:3:7"
																				},
																				"nativeSrc": "10525:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10525:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nativeSrc": "10545:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "10545:4:7"
																					},
																					{
																						"name": "pos",
																						"nativeSrc": "10551:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "10551:3:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10541:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10541:3:7"
																				},
																				"nativeSrc": "10541:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10541:14:7"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "10518:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10518:6:7"
																		},
																		"nativeSrc": "10518:38:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10518:38:7"
																	},
																	"nativeSrc": "10518:38:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "10518:38:7"
																},
																{
																	"nativeSrc": "10569:111:7",
																	"nodeType": "YulAssignment",
																	"src": "10569:111:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "10661:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "10661:12:7"
																			},
																			{
																				"name": "tail",
																				"nativeSrc": "10675:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10675:4:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "10577:83:7",
																			"nodeType": "YulIdentifier",
																			"src": "10577:83:7"
																		},
																		"nativeSrc": "10577:103:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10577:103:7"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nativeSrc": "10569:4:7",
																			"nodeType": "YulIdentifier",
																			"src": "10569:4:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10701:240:7",
															"nodeType": "YulBlock",
															"src": "10701:240:7",
															"statements": [
																{
																	"nativeSrc": "10741:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10741:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10771:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "10771:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10778:4:7",
																						"nodeType": "YulLiteral",
																						"src": "10778:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10767:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10767:3:7"
																				},
																				"nativeSrc": "10767:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10767:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10761:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "10761:5:7"
																		},
																		"nativeSrc": "10761:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10761:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "10745:12:7",
																			"nodeType": "YulTypedName",
																			"src": "10745:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "10809:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "10809:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10814:4:7",
																						"nodeType": "YulLiteral",
																						"src": "10814:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10805:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10805:3:7"
																				},
																				"nativeSrc": "10805:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10805:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nativeSrc": "10825:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "10825:4:7"
																					},
																					{
																						"name": "pos",
																						"nativeSrc": "10831:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "10831:3:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10821:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10821:3:7"
																				},
																				"nativeSrc": "10821:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10821:14:7"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "10798:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10798:6:7"
																		},
																		"nativeSrc": "10798:38:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10798:38:7"
																	},
																	"nativeSrc": "10798:38:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "10798:38:7"
																},
																{
																	"nativeSrc": "10849:81:7",
																	"nodeType": "YulAssignment",
																	"src": "10849:81:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "10911:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "10911:12:7"
																			},
																			{
																				"name": "tail",
																				"nativeSrc": "10925:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10925:4:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
																			"nativeSrc": "10857:53:7",
																			"nodeType": "YulIdentifier",
																			"src": "10857:53:7"
																		},
																		"nativeSrc": "10857:73:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10857:73:7"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nativeSrc": "10849:4:7",
																			"nodeType": "YulIdentifier",
																			"src": "10849:4:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10951:166:7",
															"nodeType": "YulBlock",
															"src": "10951:166:7",
															"statements": [
																{
																	"nativeSrc": "10988:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10988:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11018:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "11018:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11025:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11025:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11014:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11014:3:7"
																				},
																				"nativeSrc": "11014:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11014:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11008:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "11008:5:7"
																		},
																		"nativeSrc": "11008:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11008:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "10992:12:7",
																			"nodeType": "YulTypedName",
																			"src": "10992:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "11078:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "11078:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "11096:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "11096:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11101:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11101:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11092:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11092:3:7"
																				},
																				"nativeSrc": "11092:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11092:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "11044:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "11044:33:7"
																		},
																		"nativeSrc": "11044:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11044:63:7"
																	},
																	"nativeSrc": "11044:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "11044:63:7"
																}
															]
														},
														{
															"nativeSrc": "11127:170:7",
															"nodeType": "YulBlock",
															"src": "11127:170:7",
															"statements": [
																{
																	"nativeSrc": "11168:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11168:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11198:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "11198:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11205:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11205:4:7",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11194:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11194:3:7"
																				},
																				"nativeSrc": "11194:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11194:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11188:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "11188:5:7"
																		},
																		"nativeSrc": "11188:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11188:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "11172:12:7",
																			"nodeType": "YulTypedName",
																			"src": "11172:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "11258:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "11258:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "11276:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "11276:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11281:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11281:4:7",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11272:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11272:3:7"
																				},
																				"nativeSrc": "11272:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11272:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "11224:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "11224:33:7"
																		},
																		"nativeSrc": "11224:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11224:63:7"
																	},
																	"nativeSrc": "11224:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "11224:63:7"
																}
															]
														},
														{
															"nativeSrc": "11307:168:7",
															"nodeType": "YulBlock",
															"src": "11307:168:7",
															"statements": [
																{
																	"nativeSrc": "11346:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11346:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11376:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "11376:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11383:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11383:4:7",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11372:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11372:3:7"
																				},
																				"nativeSrc": "11372:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11372:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11366:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "11366:5:7"
																		},
																		"nativeSrc": "11366:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11366:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "11350:12:7",
																			"nodeType": "YulTypedName",
																			"src": "11350:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "11436:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "11436:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "11454:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "11454:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11459:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11459:4:7",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11450:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11450:3:7"
																				},
																				"nativeSrc": "11450:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11450:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "11402:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "11402:33:7"
																		},
																		"nativeSrc": "11402:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11402:63:7"
																	},
																	"nativeSrc": "11402:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "11402:63:7"
																}
															]
														},
														{
															"nativeSrc": "11485:172:7",
															"nodeType": "YulBlock",
															"src": "11485:172:7",
															"statements": [
																{
																	"nativeSrc": "11528:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11528:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11558:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "11558:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11565:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11565:4:7",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11554:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11554:3:7"
																				},
																				"nativeSrc": "11554:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11554:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11548:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "11548:5:7"
																		},
																		"nativeSrc": "11548:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11548:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "11532:12:7",
																			"nodeType": "YulTypedName",
																			"src": "11532:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "11618:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "11618:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "11636:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "11636:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11641:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11641:4:7",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11632:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11632:3:7"
																				},
																				"nativeSrc": "11632:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11632:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "11584:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "11584:33:7"
																		},
																		"nativeSrc": "11584:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11584:63:7"
																	},
																	"nativeSrc": "11584:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "11584:63:7"
																}
															]
														},
														{
															"nativeSrc": "11667:172:7",
															"nodeType": "YulBlock",
															"src": "11667:172:7",
															"statements": [
																{
																	"nativeSrc": "11710:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11710:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11740:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "11740:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11747:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11747:4:7",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11736:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11736:3:7"
																				},
																				"nativeSrc": "11736:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11736:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11730:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "11730:5:7"
																		},
																		"nativeSrc": "11730:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11730:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "11714:12:7",
																			"nodeType": "YulTypedName",
																			"src": "11714:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "11800:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "11800:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "11818:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "11818:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11823:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11823:4:7",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11814:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11814:3:7"
																				},
																				"nativeSrc": "11814:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11814:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "11766:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "11766:33:7"
																		},
																		"nativeSrc": "11766:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11766:63:7"
																	},
																	"nativeSrc": "11766:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "11766:63:7"
																}
															]
														},
														{
															"nativeSrc": "11849:160:7",
															"nodeType": "YulBlock",
															"src": "11849:160:7",
															"statements": [
																{
																	"nativeSrc": "11886:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11886:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11916:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "11916:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11923:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11923:4:7",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11912:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11912:3:7"
																				},
																				"nativeSrc": "11912:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11912:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11906:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "11906:5:7"
																		},
																		"nativeSrc": "11906:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11906:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "11890:12:7",
																			"nodeType": "YulTypedName",
																			"src": "11890:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "11970:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "11970:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "11988:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "11988:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11993:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11993:4:7",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11984:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11984:3:7"
																				},
																				"nativeSrc": "11984:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11984:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nativeSrc": "11942:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "11942:27:7"
																		},
																		"nativeSrc": "11942:57:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11942:57:7"
																	},
																	"nativeSrc": "11942:57:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "11942:57:7"
																}
															]
														},
														{
															"nativeSrc": "12019:164:7",
															"nodeType": "YulBlock",
															"src": "12019:164:7",
															"statements": [
																{
																	"nativeSrc": "12056:45:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12056:45:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12086:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "12086:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12093:6:7",
																						"nodeType": "YulLiteral",
																						"src": "12093:6:7",
																						"type": "",
																						"value": "0x0100"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12082:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "12082:3:7"
																				},
																				"nativeSrc": "12082:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12082:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "12076:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "12076:5:7"
																		},
																		"nativeSrc": "12076:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12076:25:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "12060:12:7",
																			"nodeType": "YulTypedName",
																			"src": "12060:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "12142:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "12142:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "12160:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "12160:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12165:6:7",
																						"nodeType": "YulLiteral",
																						"src": "12165:6:7",
																						"type": "",
																						"value": "0x0100"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12156:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "12156:3:7"
																				},
																				"nativeSrc": "12156:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12156:16:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nativeSrc": "12114:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "12114:27:7"
																		},
																		"nativeSrc": "12114:59:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12114:59:7"
																	},
																	"nativeSrc": "12114:59:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "12114:59:7"
																}
															]
														},
														{
															"nativeSrc": "12193:11:7",
															"nodeType": "YulAssignment",
															"src": "12193:11:7",
															"value": {
																"name": "tail",
																"nativeSrc": "12200:4:7",
																"nodeType": "YulIdentifier",
																"src": "12200:4:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12193:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12193:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_SerializedIssue_$64_memory_ptr_to_t_struct$_SerializedIssue_$64_memory_ptr_fromStack",
												"nativeSrc": "10240:1970:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10355:5:7",
														"nodeType": "YulTypedName",
														"src": "10355:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10362:3:7",
														"nodeType": "YulTypedName",
														"src": "10362:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10371:3:7",
														"nodeType": "YulTypedName",
														"src": "10371:3:7",
														"type": ""
													}
												],
												"src": "10240:1970:7"
											},
											{
												"body": {
													"nativeSrc": "12376:237:7",
													"nodeType": "YulBlock",
													"src": "12376:237:7",
													"statements": [
														{
															"nativeSrc": "12386:26:7",
															"nodeType": "YulAssignment",
															"src": "12386:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12398:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12398:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12409:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12409:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12394:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12394:3:7"
																},
																"nativeSrc": "12394:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12394:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12386:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12386:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12433:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12433:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12444:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12444:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12429:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12429:3:7"
																		},
																		"nativeSrc": "12429:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12429:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12452:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "12452:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12458:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12458:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12448:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12448:3:7"
																		},
																		"nativeSrc": "12448:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12448:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12422:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12422:6:7"
																},
																"nativeSrc": "12422:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12422:47:7"
															},
															"nativeSrc": "12422:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12422:47:7"
														},
														{
															"nativeSrc": "12478:128:7",
															"nodeType": "YulAssignment",
															"src": "12478:128:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12592:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12592:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "12601:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12601:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_SerializedIssue_$64_memory_ptr_to_t_struct$_SerializedIssue_$64_memory_ptr_fromStack",
																	"nativeSrc": "12486:105:7",
																	"nodeType": "YulIdentifier",
																	"src": "12486:105:7"
																},
																"nativeSrc": "12486:120:7",
																"nodeType": "YulFunctionCall",
																"src": "12486:120:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12478:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12478:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_SerializedIssue_$64_memory_ptr__to_t_struct$_SerializedIssue_$64_memory_ptr__fromStack_reversed",
												"nativeSrc": "12216:397:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12348:9:7",
														"nodeType": "YulTypedName",
														"src": "12348:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12360:6:7",
														"nodeType": "YulTypedName",
														"src": "12360:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12371:4:7",
														"nodeType": "YulTypedName",
														"src": "12371:4:7",
														"type": ""
													}
												],
												"src": "12216:397:7"
											},
											{
												"body": {
													"nativeSrc": "12702:391:7",
													"nodeType": "YulBlock",
													"src": "12702:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "12748:83:7",
																"nodeType": "YulBlock",
																"src": "12748:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12750:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "12750:77:7"
																			},
																			"nativeSrc": "12750:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12750:79:7"
																		},
																		"nativeSrc": "12750:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12750:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12723:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "12723:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12732:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12732:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12719:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12719:3:7"
																		},
																		"nativeSrc": "12719:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12719:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12744:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12744:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12715:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12715:3:7"
																},
																"nativeSrc": "12715:32:7",
																"nodeType": "YulFunctionCall",
																"src": "12715:32:7"
															},
															"nativeSrc": "12712:119:7",
															"nodeType": "YulIf",
															"src": "12712:119:7"
														},
														{
															"nativeSrc": "12841:117:7",
															"nodeType": "YulBlock",
															"src": "12841:117:7",
															"statements": [
																{
																	"nativeSrc": "12856:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12856:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12870:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12870:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12860:6:7",
																			"nodeType": "YulTypedName",
																			"src": "12860:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12885:63:7",
																	"nodeType": "YulAssignment",
																	"src": "12885:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12920:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "12920:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12931:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "12931:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12916:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "12916:3:7"
																				},
																				"nativeSrc": "12916:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12916:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12940:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "12940:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12895:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "12895:20:7"
																		},
																		"nativeSrc": "12895:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12895:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12885:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "12885:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12968:118:7",
															"nodeType": "YulBlock",
															"src": "12968:118:7",
															"statements": [
																{
																	"nativeSrc": "12983:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12983:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12997:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12997:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12987:6:7",
																			"nodeType": "YulTypedName",
																			"src": "12987:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13013:63:7",
																	"nodeType": "YulAssignment",
																	"src": "13013:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13048:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "13048:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13059:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "13059:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13044:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "13044:3:7"
																				},
																				"nativeSrc": "13044:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "13044:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13068:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "13068:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "13023:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "13023:20:7"
																		},
																		"nativeSrc": "13023:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13023:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13013:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "13013:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "12619:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12664:9:7",
														"nodeType": "YulTypedName",
														"src": "12664:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12675:7:7",
														"nodeType": "YulTypedName",
														"src": "12675:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12687:6:7",
														"nodeType": "YulTypedName",
														"src": "12687:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12695:6:7",
														"nodeType": "YulTypedName",
														"src": "12695:6:7",
														"type": ""
													}
												],
												"src": "12619:474:7"
											},
											{
												"body": {
													"nativeSrc": "13127:152:7",
													"nodeType": "YulBlock",
													"src": "13127:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13144:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13144:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13147:77:7",
																		"nodeType": "YulLiteral",
																		"src": "13147:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13137:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13137:6:7"
																},
																"nativeSrc": "13137:88:7",
																"nodeType": "YulFunctionCall",
																"src": "13137:88:7"
															},
															"nativeSrc": "13137:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "13137:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13241:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13241:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13244:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13244:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13234:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13234:6:7"
																},
																"nativeSrc": "13234:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13234:15:7"
															},
															"nativeSrc": "13234:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13234:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13265:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13265:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13268:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13268:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13258:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13258:6:7"
																},
																"nativeSrc": "13258:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13258:15:7"
															},
															"nativeSrc": "13258:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13258:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "13099:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "13099:180:7"
											},
											{
												"body": {
													"nativeSrc": "13336:269:7",
													"nodeType": "YulBlock",
													"src": "13336:269:7",
													"statements": [
														{
															"nativeSrc": "13346:22:7",
															"nodeType": "YulAssignment",
															"src": "13346:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13360:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13360:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13366:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13366:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13356:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13356:3:7"
																},
																"nativeSrc": "13356:12:7",
																"nodeType": "YulFunctionCall",
																"src": "13356:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13346:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13346:6:7"
																}
															]
														},
														{
															"nativeSrc": "13377:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "13377:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13407:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13407:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13413:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13413:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13403:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13403:3:7"
																},
																"nativeSrc": "13403:12:7",
																"nodeType": "YulFunctionCall",
																"src": "13403:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "13381:18:7",
																	"nodeType": "YulTypedName",
																	"src": "13381:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13454:51:7",
																"nodeType": "YulBlock",
																"src": "13454:51:7",
																"statements": [
																	{
																		"nativeSrc": "13468:27:7",
																		"nodeType": "YulAssignment",
																		"src": "13468:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "13482:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "13482:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13490:4:7",
																					"nodeType": "YulLiteral",
																					"src": "13490:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "13478:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "13478:3:7"
																			},
																			"nativeSrc": "13478:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13478:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "13468:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13468:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13434:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "13434:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13427:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13427:6:7"
																},
																"nativeSrc": "13427:26:7",
																"nodeType": "YulFunctionCall",
																"src": "13427:26:7"
															},
															"nativeSrc": "13424:81:7",
															"nodeType": "YulIf",
															"src": "13424:81:7"
														},
														{
															"body": {
																"nativeSrc": "13557:42:7",
																"nodeType": "YulBlock",
																"src": "13557:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "13571:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "13571:16:7"
																			},
																			"nativeSrc": "13571:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13571:18:7"
																		},
																		"nativeSrc": "13571:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13571:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13521:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "13521:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "13544:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13544:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13552:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13552:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "13541:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "13541:2:7"
																		},
																		"nativeSrc": "13541:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13541:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13518:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "13518:2:7"
																},
																"nativeSrc": "13518:38:7",
																"nodeType": "YulFunctionCall",
																"src": "13518:38:7"
															},
															"nativeSrc": "13515:84:7",
															"nodeType": "YulIf",
															"src": "13515:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "13285:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "13320:4:7",
														"nodeType": "YulTypedName",
														"src": "13320:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "13329:6:7",
														"nodeType": "YulTypedName",
														"src": "13329:6:7",
														"type": ""
													}
												],
												"src": "13285:320:7"
											},
											{
												"body": {
													"nativeSrc": "13639:152:7",
													"nodeType": "YulBlock",
													"src": "13639:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13656:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13656:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13659:77:7",
																		"nodeType": "YulLiteral",
																		"src": "13659:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13649:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13649:6:7"
																},
																"nativeSrc": "13649:88:7",
																"nodeType": "YulFunctionCall",
																"src": "13649:88:7"
															},
															"nativeSrc": "13649:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "13649:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13753:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13753:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13756:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13756:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13746:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13746:6:7"
																},
																"nativeSrc": "13746:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13746:15:7"
															},
															"nativeSrc": "13746:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13746:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13777:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13777:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13780:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13780:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13770:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13770:6:7"
																},
																"nativeSrc": "13770:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13770:15:7"
															},
															"nativeSrc": "13770:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13770:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13611:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "13611:180:7"
											},
											{
												"body": {
													"nativeSrc": "13841:147:7",
													"nodeType": "YulBlock",
													"src": "13841:147:7",
													"statements": [
														{
															"nativeSrc": "13851:25:7",
															"nodeType": "YulAssignment",
															"src": "13851:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13874:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13874:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13856:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13856:17:7"
																},
																"nativeSrc": "13856:20:7",
																"nodeType": "YulFunctionCall",
																"src": "13856:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13851:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13851:1:7"
																}
															]
														},
														{
															"nativeSrc": "13885:25:7",
															"nodeType": "YulAssignment",
															"src": "13885:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13908:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13908:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13890:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13890:17:7"
																},
																"nativeSrc": "13890:20:7",
																"nodeType": "YulFunctionCall",
																"src": "13890:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13885:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13885:1:7"
																}
															]
														},
														{
															"nativeSrc": "13919:16:7",
															"nodeType": "YulAssignment",
															"src": "13919:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13930:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13930:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13933:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13933:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13926:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13926:3:7"
																},
																"nativeSrc": "13926:9:7",
																"nodeType": "YulFunctionCall",
																"src": "13926:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13919:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13919:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13959:22:7",
																"nodeType": "YulBlock",
																"src": "13959:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13961:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "13961:16:7"
																			},
																			"nativeSrc": "13961:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13961:18:7"
																		},
																		"nativeSrc": "13961:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13961:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13951:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13951:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13954:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13954:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13948:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "13948:2:7"
																},
																"nativeSrc": "13948:10:7",
																"nodeType": "YulFunctionCall",
																"src": "13948:10:7"
															},
															"nativeSrc": "13945:36:7",
															"nodeType": "YulIf",
															"src": "13945:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13797:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13828:1:7",
														"nodeType": "YulTypedName",
														"src": "13828:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13831:1:7",
														"nodeType": "YulTypedName",
														"src": "13831:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13837:3:7",
														"nodeType": "YulTypedName",
														"src": "13837:3:7",
														"type": ""
													}
												],
												"src": "13797:191:7"
											},
											{
												"body": {
													"nativeSrc": "14060:31:7",
													"nodeType": "YulBlock",
													"src": "14060:31:7",
													"statements": [
														{
															"nativeSrc": "14071:13:7",
															"nodeType": "YulAssignment",
															"src": "14071:13:7",
															"value": {
																"name": "len",
																"nativeSrc": "14081:3:7",
																"nodeType": "YulIdentifier",
																"src": "14081:3:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "14071:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14071:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_calldata_ptr",
												"nativeSrc": "13994:97:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14038:5:7",
														"nodeType": "YulTypedName",
														"src": "14038:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "14045:3:7",
														"nodeType": "YulTypedName",
														"src": "14045:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "14053:6:7",
														"nodeType": "YulTypedName",
														"src": "14053:6:7",
														"type": ""
													}
												],
												"src": "13994:97:7"
											},
											{
												"body": {
													"nativeSrc": "14125:152:7",
													"nodeType": "YulBlock",
													"src": "14125:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14142:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14142:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14145:77:7",
																		"nodeType": "YulLiteral",
																		"src": "14145:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14135:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14135:6:7"
																},
																"nativeSrc": "14135:88:7",
																"nodeType": "YulFunctionCall",
																"src": "14135:88:7"
															},
															"nativeSrc": "14135:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "14135:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14239:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14239:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14242:4:7",
																		"nodeType": "YulLiteral",
																		"src": "14242:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14232:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14232:6:7"
																},
																"nativeSrc": "14232:15:7",
																"nodeType": "YulFunctionCall",
																"src": "14232:15:7"
															},
															"nativeSrc": "14232:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "14232:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14263:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14263:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14266:4:7",
																		"nodeType": "YulLiteral",
																		"src": "14266:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14256:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14256:6:7"
																},
																"nativeSrc": "14256:15:7",
																"nodeType": "YulFunctionCall",
																"src": "14256:15:7"
															},
															"nativeSrc": "14256:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "14256:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14097:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "14097:180:7"
											},
											{
												"body": {
													"nativeSrc": "14337:87:7",
													"nodeType": "YulBlock",
													"src": "14337:87:7",
													"statements": [
														{
															"nativeSrc": "14347:11:7",
															"nodeType": "YulAssignment",
															"src": "14347:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "14355:3:7",
																"nodeType": "YulIdentifier",
																"src": "14355:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "14347:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14347:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14375:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14375:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "14378:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14378:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14368:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14368:6:7"
																},
																"nativeSrc": "14368:14:7",
																"nodeType": "YulFunctionCall",
																"src": "14368:14:7"
															},
															"nativeSrc": "14368:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "14368:14:7"
														},
														{
															"nativeSrc": "14391:26:7",
															"nodeType": "YulAssignment",
															"src": "14391:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14409:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14409:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14412:4:7",
																		"nodeType": "YulLiteral",
																		"src": "14412:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "14399:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "14399:9:7"
																},
																"nativeSrc": "14399:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14399:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "14391:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14391:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "14283:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "14324:3:7",
														"nodeType": "YulTypedName",
														"src": "14324:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "14332:4:7",
														"nodeType": "YulTypedName",
														"src": "14332:4:7",
														"type": ""
													}
												],
												"src": "14283:141:7"
											},
											{
												"body": {
													"nativeSrc": "14474:49:7",
													"nodeType": "YulBlock",
													"src": "14474:49:7",
													"statements": [
														{
															"nativeSrc": "14484:33:7",
															"nodeType": "YulAssignment",
															"src": "14484:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14502:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "14502:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14509:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14509:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14498:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14498:3:7"
																		},
																		"nativeSrc": "14498:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14498:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14514:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14514:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14494:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14494:3:7"
																},
																"nativeSrc": "14494:23:7",
																"nodeType": "YulFunctionCall",
																"src": "14494:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14484:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14484:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "14430:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14457:5:7",
														"nodeType": "YulTypedName",
														"src": "14457:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "14467:6:7",
														"nodeType": "YulTypedName",
														"src": "14467:6:7",
														"type": ""
													}
												],
												"src": "14430:93:7"
											},
											{
												"body": {
													"nativeSrc": "14582:54:7",
													"nodeType": "YulBlock",
													"src": "14582:54:7",
													"statements": [
														{
															"nativeSrc": "14592:37:7",
															"nodeType": "YulAssignment",
															"src": "14592:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "14617:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "14617:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "14623:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "14623:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "14613:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14613:3:7"
																},
																"nativeSrc": "14613:16:7",
																"nodeType": "YulFunctionCall",
																"src": "14613:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "14592:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "14592:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "14529:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "14557:4:7",
														"nodeType": "YulTypedName",
														"src": "14557:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "14563:5:7",
														"nodeType": "YulTypedName",
														"src": "14563:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "14573:8:7",
														"nodeType": "YulTypedName",
														"src": "14573:8:7",
														"type": ""
													}
												],
												"src": "14529:107:7"
											},
											{
												"body": {
													"nativeSrc": "14718:317:7",
													"nodeType": "YulBlock",
													"src": "14718:317:7",
													"statements": [
														{
															"nativeSrc": "14728:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "14728:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "14749:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "14749:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14761:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14761:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14745:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14745:3:7"
																},
																"nativeSrc": "14745:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14745:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "14732:9:7",
																	"nodeType": "YulTypedName",
																	"src": "14732:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14772:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "14772:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "14803:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14803:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14814:66:7",
																		"nodeType": "YulLiteral",
																		"src": "14814:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "14784:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "14784:18:7"
																},
																"nativeSrc": "14784:97:7",
																"nodeType": "YulFunctionCall",
																"src": "14784:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "14776:4:7",
																	"nodeType": "YulTypedName",
																	"src": "14776:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14890:51:7",
															"nodeType": "YulAssignment",
															"src": "14890:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "14921:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14921:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "14932:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "14932:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "14902:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "14902:18:7"
																},
																"nativeSrc": "14902:39:7",
																"nodeType": "YulFunctionCall",
																"src": "14902:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "14890:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "14890:8:7"
																}
															]
														},
														{
															"nativeSrc": "14950:30:7",
															"nodeType": "YulAssignment",
															"src": "14950:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14963:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "14963:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "14974:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "14974:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "14970:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14970:3:7"
																		},
																		"nativeSrc": "14970:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14970:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14959:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14959:3:7"
																},
																"nativeSrc": "14959:21:7",
																"nodeType": "YulFunctionCall",
																"src": "14959:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14950:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "14950:5:7"
																}
															]
														},
														{
															"nativeSrc": "14989:40:7",
															"nodeType": "YulAssignment",
															"src": "14989:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15002:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "15002:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "15013:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "15013:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "15023:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "15023:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15009:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15009:3:7"
																		},
																		"nativeSrc": "15009:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15009:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "14999:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "14999:2:7"
																},
																"nativeSrc": "14999:30:7",
																"nodeType": "YulFunctionCall",
																"src": "14999:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14989:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14989:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "14642:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14679:5:7",
														"nodeType": "YulTypedName",
														"src": "14679:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "14686:10:7",
														"nodeType": "YulTypedName",
														"src": "14686:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "14698:8:7",
														"nodeType": "YulTypedName",
														"src": "14698:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "14711:6:7",
														"nodeType": "YulTypedName",
														"src": "14711:6:7",
														"type": ""
													}
												],
												"src": "14642:393:7"
											},
											{
												"body": {
													"nativeSrc": "15073:28:7",
													"nodeType": "YulBlock",
													"src": "15073:28:7",
													"statements": [
														{
															"nativeSrc": "15083:12:7",
															"nodeType": "YulAssignment",
															"src": "15083:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "15090:5:7",
																"nodeType": "YulIdentifier",
																"src": "15090:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15083:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15083:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "15041:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15059:5:7",
														"nodeType": "YulTypedName",
														"src": "15059:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15069:3:7",
														"nodeType": "YulTypedName",
														"src": "15069:3:7",
														"type": ""
													}
												],
												"src": "15041:60:7"
											},
											{
												"body": {
													"nativeSrc": "15167:82:7",
													"nodeType": "YulBlock",
													"src": "15167:82:7",
													"statements": [
														{
															"nativeSrc": "15177:66:7",
															"nodeType": "YulAssignment",
															"src": "15177:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15235:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "15235:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "15217:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "15217:17:7"
																				},
																				"nativeSrc": "15217:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15217:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "15208:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "15208:8:7"
																		},
																		"nativeSrc": "15208:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15208:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15190:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15190:17:7"
																},
																"nativeSrc": "15190:53:7",
																"nodeType": "YulFunctionCall",
																"src": "15190:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "15177:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "15177:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "15107:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15147:5:7",
														"nodeType": "YulTypedName",
														"src": "15147:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "15157:9:7",
														"nodeType": "YulTypedName",
														"src": "15157:9:7",
														"type": ""
													}
												],
												"src": "15107:142:7"
											},
											{
												"body": {
													"nativeSrc": "15302:28:7",
													"nodeType": "YulBlock",
													"src": "15302:28:7",
													"statements": [
														{
															"nativeSrc": "15312:12:7",
															"nodeType": "YulAssignment",
															"src": "15312:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "15319:5:7",
																"nodeType": "YulIdentifier",
																"src": "15319:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15312:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15312:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "15255:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15288:5:7",
														"nodeType": "YulTypedName",
														"src": "15288:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15298:3:7",
														"nodeType": "YulTypedName",
														"src": "15298:3:7",
														"type": ""
													}
												],
												"src": "15255:75:7"
											},
											{
												"body": {
													"nativeSrc": "15412:193:7",
													"nodeType": "YulBlock",
													"src": "15412:193:7",
													"statements": [
														{
															"nativeSrc": "15422:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "15422:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "15477:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "15477:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "15446:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "15446:30:7"
																},
																"nativeSrc": "15446:39:7",
																"nodeType": "YulFunctionCall",
																"src": "15446:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "15426:16:7",
																	"nodeType": "YulTypedName",
																	"src": "15426:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "15501:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15501:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "15541:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "15541:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "15535:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "15535:5:7"
																				},
																				"nativeSrc": "15535:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15535:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "15548:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "15548:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "15580:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "15580:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "15556:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "15556:23:7"
																				},
																				"nativeSrc": "15556:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15556:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "15507:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "15507:27:7"
																		},
																		"nativeSrc": "15507:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15507:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "15494:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15494:6:7"
																},
																"nativeSrc": "15494:105:7",
																"nodeType": "YulFunctionCall",
																"src": "15494:105:7"
															},
															"nativeSrc": "15494:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "15494:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "15336:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "15389:4:7",
														"nodeType": "YulTypedName",
														"src": "15389:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "15395:6:7",
														"nodeType": "YulTypedName",
														"src": "15395:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "15403:7:7",
														"nodeType": "YulTypedName",
														"src": "15403:7:7",
														"type": ""
													}
												],
												"src": "15336:269:7"
											},
											{
												"body": {
													"nativeSrc": "15660:24:7",
													"nodeType": "YulBlock",
													"src": "15660:24:7",
													"statements": [
														{
															"nativeSrc": "15670:8:7",
															"nodeType": "YulAssignment",
															"src": "15670:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "15677:1:7",
																"nodeType": "YulLiteral",
																"src": "15677:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15670:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15670:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "15611:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15656:3:7",
														"nodeType": "YulTypedName",
														"src": "15656:3:7",
														"type": ""
													}
												],
												"src": "15611:73:7"
											},
											{
												"body": {
													"nativeSrc": "15743:136:7",
													"nodeType": "YulBlock",
													"src": "15743:136:7",
													"statements": [
														{
															"nativeSrc": "15753:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "15753:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "15767:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "15767:30:7"
																},
																"nativeSrc": "15767:32:7",
																"nodeType": "YulFunctionCall",
																"src": "15767:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "15757:6:7",
																	"nodeType": "YulTypedName",
																	"src": "15757:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "15852:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15852:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "15858:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15858:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "15866:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15866:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "15808:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "15808:43:7"
																},
																"nativeSrc": "15808:65:7",
																"nodeType": "YulFunctionCall",
																"src": "15808:65:7"
															},
															"nativeSrc": "15808:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "15808:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "15690:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "15729:4:7",
														"nodeType": "YulTypedName",
														"src": "15729:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "15735:6:7",
														"nodeType": "YulTypedName",
														"src": "15735:6:7",
														"type": ""
													}
												],
												"src": "15690:189:7"
											},
											{
												"body": {
													"nativeSrc": "15935:136:7",
													"nodeType": "YulBlock",
													"src": "15935:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "16002:63:7",
																"nodeType": "YulBlock",
																"src": "16002:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "16046:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "16046:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16053:1:7",
																					"nodeType": "YulLiteral",
																					"src": "16053:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "16016:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "16016:29:7"
																			},
																			"nativeSrc": "16016:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16016:39:7"
																		},
																		"nativeSrc": "16016:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "16016:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "15955:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "15955:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "15962:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15962:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "15952:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "15952:2:7"
																},
																"nativeSrc": "15952:14:7",
																"nodeType": "YulFunctionCall",
																"src": "15952:14:7"
															},
															"nativeSrc": "15945:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "15967:26:7",
																"nodeType": "YulBlock",
																"src": "15967:26:7",
																"statements": [
																	{
																		"nativeSrc": "15969:22:7",
																		"nodeType": "YulAssignment",
																		"src": "15969:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "15982:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "15982:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15989:1:7",
																					"nodeType": "YulLiteral",
																					"src": "15989:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "15978:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "15978:3:7"
																			},
																			"nativeSrc": "15978:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15978:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "15969:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "15969:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "15949:2:7",
																"nodeType": "YulBlock",
																"src": "15949:2:7",
																"statements": []
															},
															"src": "15945:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "15885:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "15923:5:7",
														"nodeType": "YulTypedName",
														"src": "15923:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15930:3:7",
														"nodeType": "YulTypedName",
														"src": "15930:3:7",
														"type": ""
													}
												],
												"src": "15885:186:7"
											},
											{
												"body": {
													"nativeSrc": "16156:464:7",
													"nodeType": "YulBlock",
													"src": "16156:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "16182:431:7",
																"nodeType": "YulBlock",
																"src": "16182:431:7",
																"statements": [
																	{
																		"nativeSrc": "16196:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "16196:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "16244:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "16244:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "16212:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "16212:31:7"
																			},
																			"nativeSrc": "16212:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16212:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "16200:8:7",
																				"nodeType": "YulTypedName",
																				"src": "16200:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "16263:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "16263:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "16286:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "16286:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "16314:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "16314:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "16296:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "16296:17:7"
																					},
																					"nativeSrc": "16296:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "16296:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "16282:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "16282:3:7"
																			},
																			"nativeSrc": "16282:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16282:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "16267:11:7",
																				"nodeType": "YulTypedName",
																				"src": "16267:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "16483:27:7",
																			"nodeType": "YulBlock",
																			"src": "16483:27:7",
																			"statements": [
																				{
																					"nativeSrc": "16485:23:7",
																					"nodeType": "YulAssignment",
																					"src": "16485:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "16500:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "16500:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "16485:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "16485:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "16467:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "16467:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16479:2:7",
																					"nodeType": "YulLiteral",
																					"src": "16479:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "16464:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "16464:2:7"
																			},
																			"nativeSrc": "16464:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16464:18:7"
																		},
																		"nativeSrc": "16461:49:7",
																		"nodeType": "YulIf",
																		"src": "16461:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "16552:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "16552:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "16569:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "16569:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "16597:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "16597:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "16579:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "16579:17:7"
																							},
																							"nativeSrc": "16579:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "16579:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "16565:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "16565:3:7"
																					},
																					"nativeSrc": "16565:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "16565:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "16523:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "16523:28:7"
																			},
																			"nativeSrc": "16523:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16523:80:7"
																		},
																		"nativeSrc": "16523:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "16523:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "16173:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16173:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16178:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16178:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16170:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "16170:2:7"
																},
																"nativeSrc": "16170:11:7",
																"nodeType": "YulFunctionCall",
																"src": "16170:11:7"
															},
															"nativeSrc": "16167:446:7",
															"nodeType": "YulIf",
															"src": "16167:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "16077:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "16132:5:7",
														"nodeType": "YulTypedName",
														"src": "16132:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "16139:3:7",
														"nodeType": "YulTypedName",
														"src": "16139:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "16144:10:7",
														"nodeType": "YulTypedName",
														"src": "16144:10:7",
														"type": ""
													}
												],
												"src": "16077:543:7"
											},
											{
												"body": {
													"nativeSrc": "16689:54:7",
													"nodeType": "YulBlock",
													"src": "16689:54:7",
													"statements": [
														{
															"nativeSrc": "16699:37:7",
															"nodeType": "YulAssignment",
															"src": "16699:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "16724:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16724:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "16730:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "16730:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "16720:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16720:3:7"
																},
																"nativeSrc": "16720:16:7",
																"nodeType": "YulFunctionCall",
																"src": "16720:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "16699:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "16699:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "16626:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "16664:4:7",
														"nodeType": "YulTypedName",
														"src": "16664:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "16670:5:7",
														"nodeType": "YulTypedName",
														"src": "16670:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "16680:8:7",
														"nodeType": "YulTypedName",
														"src": "16680:8:7",
														"type": ""
													}
												],
												"src": "16626:117:7"
											},
											{
												"body": {
													"nativeSrc": "16800:118:7",
													"nodeType": "YulBlock",
													"src": "16800:118:7",
													"statements": [
														{
															"nativeSrc": "16810:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "16810:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "16859:1:7",
																						"nodeType": "YulLiteral",
																						"src": "16859:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "16862:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "16862:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "16855:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "16855:3:7"
																				},
																				"nativeSrc": "16855:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "16855:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "16874:1:7",
																						"nodeType": "YulLiteral",
																						"src": "16874:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "16870:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "16870:3:7"
																				},
																				"nativeSrc": "16870:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "16870:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "16826:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "16826:28:7"
																		},
																		"nativeSrc": "16826:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16826:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "16822:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16822:3:7"
																},
																"nativeSrc": "16822:56:7",
																"nodeType": "YulFunctionCall",
																"src": "16822:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "16814:4:7",
																	"nodeType": "YulTypedName",
																	"src": "16814:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16887:25:7",
															"nodeType": "YulAssignment",
															"src": "16887:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16901:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16901:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "16907:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16907:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "16897:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16897:3:7"
																},
																"nativeSrc": "16897:15:7",
																"nodeType": "YulFunctionCall",
																"src": "16897:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16887:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16887:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "16749:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "16777:4:7",
														"nodeType": "YulTypedName",
														"src": "16777:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "16783:5:7",
														"nodeType": "YulTypedName",
														"src": "16783:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16793:6:7",
														"nodeType": "YulTypedName",
														"src": "16793:6:7",
														"type": ""
													}
												],
												"src": "16749:169:7"
											},
											{
												"body": {
													"nativeSrc": "17004:214:7",
													"nodeType": "YulBlock",
													"src": "17004:214:7",
													"statements": [
														{
															"nativeSrc": "17137:37:7",
															"nodeType": "YulAssignment",
															"src": "17137:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17164:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "17164:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "17170:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17170:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "17145:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "17145:18:7"
																},
																"nativeSrc": "17145:29:7",
																"nodeType": "YulFunctionCall",
																"src": "17145:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "17137:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17137:4:7"
																}
															]
														},
														{
															"nativeSrc": "17183:29:7",
															"nodeType": "YulAssignment",
															"src": "17183:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17194:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "17194:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "17204:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17204:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "17207:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "17207:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "17200:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17200:3:7"
																		},
																		"nativeSrc": "17200:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17200:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "17191:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "17191:2:7"
																},
																"nativeSrc": "17191:21:7",
																"nodeType": "YulFunctionCall",
																"src": "17191:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "17183:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17183:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "16923:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "16985:4:7",
														"nodeType": "YulTypedName",
														"src": "16985:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "16991:3:7",
														"nodeType": "YulTypedName",
														"src": "16991:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "16999:4:7",
														"nodeType": "YulTypedName",
														"src": "16999:4:7",
														"type": ""
													}
												],
												"src": "16923:295:7"
											},
											{
												"body": {
													"nativeSrc": "17322:1304:7",
													"nodeType": "YulBlock",
													"src": "17322:1304:7",
													"statements": [
														{
															"nativeSrc": "17333:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17333:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "17382:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17382:3:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "17387:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17387:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_calldata_ptr",
																	"nativeSrc": "17347:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "17347:34:7"
																},
																"nativeSrc": "17347:44:7",
																"nodeType": "YulFunctionCall",
																"src": "17347:44:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "17337:6:7",
																	"nodeType": "YulTypedName",
																	"src": "17337:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17476:22:7",
																"nodeType": "YulBlock",
																"src": "17476:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "17478:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "17478:16:7"
																			},
																			"nativeSrc": "17478:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "17478:18:7"
																		},
																		"nativeSrc": "17478:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "17478:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "17448:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17448:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17456:18:7",
																		"nodeType": "YulLiteral",
																		"src": "17456:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17445:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "17445:2:7"
																},
																"nativeSrc": "17445:30:7",
																"nodeType": "YulFunctionCall",
																"src": "17445:30:7"
															},
															"nativeSrc": "17442:56:7",
															"nodeType": "YulIf",
															"src": "17442:56:7"
														},
														{
															"nativeSrc": "17508:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17508:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "17554:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "17554:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "17548:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "17548:5:7"
																		},
																		"nativeSrc": "17548:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17548:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "17522:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "17522:25:7"
																},
																"nativeSrc": "17522:38:7",
																"nodeType": "YulFunctionCall",
																"src": "17522:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "17512:6:7",
																	"nodeType": "YulTypedName",
																	"src": "17512:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "17653:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "17653:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "17659:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17659:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "17667:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17667:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "17607:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "17607:45:7"
																},
																"nativeSrc": "17607:67:7",
																"nodeType": "YulFunctionCall",
																"src": "17607:67:7"
															},
															"nativeSrc": "17607:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "17607:67:7"
														},
														{
															"nativeSrc": "17684:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17684:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "17701:1:7",
																"nodeType": "YulLiteral",
																"src": "17701:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "17688:9:7",
																	"nodeType": "YulTypedName",
																	"src": "17688:9:7",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "17749:625:7",
																		"nodeType": "YulBlock",
																		"src": "17749:625:7",
																		"statements": [
																			{
																				"nativeSrc": "17763:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17763:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "17782:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "17782:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "17794:4:7",
																									"nodeType": "YulLiteral",
																									"src": "17794:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "17790:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "17790:3:7"
																							},
																							"nativeSrc": "17790:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "17790:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "17778:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "17778:3:7"
																					},
																					"nativeSrc": "17778:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "17778:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "17767:7:7",
																						"nodeType": "YulTypedName",
																						"src": "17767:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "17814:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17814:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "17860:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "17860:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "17828:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "17828:31:7"
																					},
																					"nativeSrc": "17828:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "17828:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "17818:6:7",
																						"nodeType": "YulTypedName",
																						"src": "17818:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "17878:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17878:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "17887:1:7",
																					"nodeType": "YulLiteral",
																					"src": "17887:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "17882:1:7",
																						"nodeType": "YulTypedName",
																						"src": "17882:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "17946:170:7",
																					"nodeType": "YulBlock",
																					"src": "17946:170:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17971:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "17971:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "17996:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "17996:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "18001:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "18001:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "17992:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "17992:3:7"
																												},
																												"nativeSrc": "17992:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "17992:19:7"
																											}
																										],
																										"functionName": {
																											"name": "calldataload",
																											"nativeSrc": "17979:12:7",
																											"nodeType": "YulIdentifier",
																											"src": "17979:12:7"
																										},
																										"nativeSrc": "17979:33:7",
																										"nodeType": "YulFunctionCall",
																										"src": "17979:33:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "17964:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "17964:6:7"
																								},
																								"nativeSrc": "17964:49:7",
																								"nodeType": "YulFunctionCall",
																								"src": "17964:49:7"
																							},
																							"nativeSrc": "17964:49:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "17964:49:7"
																						},
																						{
																							"nativeSrc": "18030:24:7",
																							"nodeType": "YulAssignment",
																							"src": "18030:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "18044:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "18044:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "18052:1:7",
																										"nodeType": "YulLiteral",
																										"src": "18052:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "18040:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "18040:3:7"
																								},
																								"nativeSrc": "18040:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "18040:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "18030:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "18030:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "18071:31:7",
																							"nodeType": "YulAssignment",
																							"src": "18071:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "18088:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "18088:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "18099:2:7",
																										"nodeType": "YulLiteral",
																										"src": "18099:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "18084:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "18084:3:7"
																								},
																								"nativeSrc": "18084:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "18084:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "18071:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "18071:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "17912:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "17912:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "17915:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "17915:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "17909:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "17909:2:7"
																					},
																					"nativeSrc": "17909:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "17909:14:7"
																				},
																				"nativeSrc": "17901:215:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "17924:21:7",
																					"nodeType": "YulBlock",
																					"src": "17924:21:7",
																					"statements": [
																						{
																							"nativeSrc": "17926:17:7",
																							"nodeType": "YulAssignment",
																							"src": "17926:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "17935:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "17935:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17938:4:7",
																										"nodeType": "YulLiteral",
																										"src": "17938:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "17931:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "17931:3:7"
																								},
																								"nativeSrc": "17931:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "17931:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "17926:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "17926:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "17905:3:7",
																					"nodeType": "YulBlock",
																					"src": "17905:3:7",
																					"statements": []
																				},
																				"src": "17901:215:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "18152:163:7",
																					"nodeType": "YulBlock",
																					"src": "18152:163:7",
																					"statements": [
																						{
																							"nativeSrc": "18170:50:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "18170:50:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "18204:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "18204:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "18209:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "18209:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "18200:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "18200:3:7"
																										},
																										"nativeSrc": "18200:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "18200:19:7"
																									}
																								],
																								"functionName": {
																									"name": "calldataload",
																									"nativeSrc": "18187:12:7",
																									"nodeType": "YulIdentifier",
																									"src": "18187:12:7"
																								},
																								"nativeSrc": "18187:33:7",
																								"nodeType": "YulFunctionCall",
																								"src": "18187:33:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "18174:9:7",
																									"nodeType": "YulTypedName",
																									"src": "18174:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "18244:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "18244:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "18271:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "18271:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "18286:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "18286:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "18294:4:7",
																														"nodeType": "YulLiteral",
																														"src": "18294:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "18282:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "18282:3:7"
																												},
																												"nativeSrc": "18282:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "18282:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "18252:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "18252:18:7"
																										},
																										"nativeSrc": "18252:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "18252:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "18237:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "18237:6:7"
																								},
																								"nativeSrc": "18237:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "18237:64:7"
																							},
																							"nativeSrc": "18237:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "18237:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "18135:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "18135:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "18144:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "18144:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "18132:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "18132:2:7"
																					},
																					"nativeSrc": "18132:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "18132:19:7"
																				},
																				"nativeSrc": "18129:186:7",
																				"nodeType": "YulIf",
																				"src": "18129:186:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "18335:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "18335:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "18349:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "18349:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "18357:1:7",
																											"nodeType": "YulLiteral",
																											"src": "18357:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "18345:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "18345:3:7"
																									},
																									"nativeSrc": "18345:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "18345:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "18361:1:7",
																									"nodeType": "YulLiteral",
																									"src": "18361:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "18341:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "18341:3:7"
																							},
																							"nativeSrc": "18341:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "18341:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "18328:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "18328:6:7"
																					},
																					"nativeSrc": "18328:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "18328:36:7"
																				},
																				"nativeSrc": "18328:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "18328:36:7"
																			}
																		]
																	},
																	"nativeSrc": "17742:632:7",
																	"nodeType": "YulCase",
																	"src": "17742:632:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17747:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17747:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "18391:229:7",
																		"nodeType": "YulBlock",
																		"src": "18391:229:7",
																		"statements": [
																			{
																				"nativeSrc": "18405:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "18405:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "18418:1:7",
																					"nodeType": "YulLiteral",
																					"src": "18418:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "18409:5:7",
																						"nodeType": "YulTypedName",
																						"src": "18409:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "18442:74:7",
																					"nodeType": "YulBlock",
																					"src": "18442:74:7",
																					"statements": [
																						{
																							"nativeSrc": "18460:42:7",
																							"nodeType": "YulAssignment",
																							"src": "18460:42:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "18486:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "18486:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "18491:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "18491:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "18482:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "18482:3:7"
																										},
																										"nativeSrc": "18482:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "18482:19:7"
																									}
																								],
																								"functionName": {
																									"name": "calldataload",
																									"nativeSrc": "18469:12:7",
																									"nodeType": "YulIdentifier",
																									"src": "18469:12:7"
																								},
																								"nativeSrc": "18469:33:7",
																								"nodeType": "YulFunctionCall",
																								"src": "18469:33:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "18460:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "18460:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "18435:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "18435:6:7"
																				},
																				"nativeSrc": "18432:84:7",
																				"nodeType": "YulIf",
																				"src": "18432:84:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "18536:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "18536:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "18595:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "18595:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "18602:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "18602:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "18542:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "18542:52:7"
																							},
																							"nativeSrc": "18542:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "18542:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "18529:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "18529:6:7"
																					},
																					"nativeSrc": "18529:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "18529:81:7"
																				},
																				"nativeSrc": "18529:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "18529:81:7"
																			}
																		]
																	},
																	"nativeSrc": "18383:237:7",
																	"nodeType": "YulCase",
																	"src": "18383:237:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "17722:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17722:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17730:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17730:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17719:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "17719:2:7"
																},
																"nativeSrc": "17719:14:7",
																"nodeType": "YulFunctionCall",
																"src": "17719:14:7"
															},
															"nativeSrc": "17712:908:7",
															"nodeType": "YulSwitch",
															"src": "17712:908:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage",
												"nativeSrc": "17223:1403:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "17306:4:7",
														"nodeType": "YulTypedName",
														"src": "17306:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "17312:3:7",
														"nodeType": "YulTypedName",
														"src": "17312:3:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "17317:3:7",
														"nodeType": "YulTypedName",
														"src": "17317:3:7",
														"type": ""
													}
												],
												"src": "17223:1403:7"
											},
											{
												"body": {
													"nativeSrc": "18677:149:7",
													"nodeType": "YulBlock",
													"src": "18677:149:7",
													"statements": [
														{
															"nativeSrc": "18687:25:7",
															"nodeType": "YulAssignment",
															"src": "18687:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18710:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "18710:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18692:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "18692:17:7"
																},
																"nativeSrc": "18692:20:7",
																"nodeType": "YulFunctionCall",
																"src": "18692:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18687:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "18687:1:7"
																}
															]
														},
														{
															"nativeSrc": "18721:25:7",
															"nodeType": "YulAssignment",
															"src": "18721:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18744:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "18744:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18726:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "18726:17:7"
																},
																"nativeSrc": "18726:20:7",
																"nodeType": "YulFunctionCall",
																"src": "18726:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18721:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "18721:1:7"
																}
															]
														},
														{
															"nativeSrc": "18755:17:7",
															"nodeType": "YulAssignment",
															"src": "18755:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18767:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "18767:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18770:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "18770:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "18763:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18763:3:7"
																},
																"nativeSrc": "18763:9:7",
																"nodeType": "YulFunctionCall",
																"src": "18763:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "18755:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18755:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18797:22:7",
																"nodeType": "YulBlock",
																"src": "18797:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18799:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "18799:16:7"
																			},
																			"nativeSrc": "18799:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18799:18:7"
																		},
																		"nativeSrc": "18799:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "18799:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "18788:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "18788:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "18794:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "18794:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18785:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "18785:2:7"
																},
																"nativeSrc": "18785:11:7",
																"nodeType": "YulFunctionCall",
																"src": "18785:11:7"
															},
															"nativeSrc": "18782:37:7",
															"nodeType": "YulIf",
															"src": "18782:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "18632:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18663:1:7",
														"nodeType": "YulTypedName",
														"src": "18663:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18666:1:7",
														"nodeType": "YulTypedName",
														"src": "18666:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "18672:4:7",
														"nodeType": "YulTypedName",
														"src": "18672:4:7",
														"type": ""
													}
												],
												"src": "18632:194:7"
											},
											{
												"body": {
													"nativeSrc": "18860:152:7",
													"nodeType": "YulBlock",
													"src": "18860:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18877:1:7",
																		"nodeType": "YulLiteral",
																		"src": "18877:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18880:77:7",
																		"nodeType": "YulLiteral",
																		"src": "18880:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18870:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18870:6:7"
																},
																"nativeSrc": "18870:88:7",
																"nodeType": "YulFunctionCall",
																"src": "18870:88:7"
															},
															"nativeSrc": "18870:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "18870:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18974:1:7",
																		"nodeType": "YulLiteral",
																		"src": "18974:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18977:4:7",
																		"nodeType": "YulLiteral",
																		"src": "18977:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18967:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18967:6:7"
																},
																"nativeSrc": "18967:15:7",
																"nodeType": "YulFunctionCall",
																"src": "18967:15:7"
															},
															"nativeSrc": "18967:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "18967:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18998:1:7",
																		"nodeType": "YulLiteral",
																		"src": "18998:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19001:4:7",
																		"nodeType": "YulLiteral",
																		"src": "19001:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18991:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18991:6:7"
																},
																"nativeSrc": "18991:15:7",
																"nodeType": "YulFunctionCall",
																"src": "18991:15:7"
															},
															"nativeSrc": "18991:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "18991:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "18832:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "18832:180:7"
											},
											{
												"body": {
													"nativeSrc": "19046:152:7",
													"nodeType": "YulBlock",
													"src": "19046:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19063:1:7",
																		"nodeType": "YulLiteral",
																		"src": "19063:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19066:77:7",
																		"nodeType": "YulLiteral",
																		"src": "19066:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19056:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19056:6:7"
																},
																"nativeSrc": "19056:88:7",
																"nodeType": "YulFunctionCall",
																"src": "19056:88:7"
															},
															"nativeSrc": "19056:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "19056:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19160:1:7",
																		"nodeType": "YulLiteral",
																		"src": "19160:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19163:4:7",
																		"nodeType": "YulLiteral",
																		"src": "19163:4:7",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19153:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19153:6:7"
																},
																"nativeSrc": "19153:15:7",
																"nodeType": "YulFunctionCall",
																"src": "19153:15:7"
															},
															"nativeSrc": "19153:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "19153:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19184:1:7",
																		"nodeType": "YulLiteral",
																		"src": "19184:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19187:4:7",
																		"nodeType": "YulLiteral",
																		"src": "19187:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19177:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19177:6:7"
																},
																"nativeSrc": "19177:15:7",
																"nodeType": "YulFunctionCall",
																"src": "19177:15:7"
															},
															"nativeSrc": "19177:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "19177:15:7"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "19018:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "19018:180:7"
											},
											{
												"body": {
													"nativeSrc": "19269:53:7",
													"nodeType": "YulBlock",
													"src": "19269:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19286:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19286:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19309:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "19309:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "19291:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "19291:17:7"
																		},
																		"nativeSrc": "19291:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19291:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19279:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19279:6:7"
																},
																"nativeSrc": "19279:37:7",
																"nodeType": "YulFunctionCall",
																"src": "19279:37:7"
															},
															"nativeSrc": "19279:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "19279:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "19204:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19257:5:7",
														"nodeType": "YulTypedName",
														"src": "19257:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "19264:3:7",
														"nodeType": "YulTypedName",
														"src": "19264:3:7",
														"type": ""
													}
												],
												"src": "19204:118:7"
											},
											{
												"body": {
													"nativeSrc": "19482:288:7",
													"nodeType": "YulBlock",
													"src": "19482:288:7",
													"statements": [
														{
															"nativeSrc": "19492:26:7",
															"nodeType": "YulAssignment",
															"src": "19492:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19504:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "19504:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19515:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19515:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19500:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19500:3:7"
																},
																"nativeSrc": "19500:18:7",
																"nodeType": "YulFunctionCall",
																"src": "19500:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19492:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19492:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19572:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19572:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19585:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19585:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19596:1:7",
																				"nodeType": "YulLiteral",
																				"src": "19596:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19581:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19581:3:7"
																		},
																		"nativeSrc": "19581:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19581:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19528:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "19528:43:7"
																},
																"nativeSrc": "19528:71:7",
																"nodeType": "YulFunctionCall",
																"src": "19528:71:7"
															},
															"nativeSrc": "19528:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "19528:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19653:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19653:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19666:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19666:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19677:2:7",
																				"nodeType": "YulLiteral",
																				"src": "19677:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19662:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19662:3:7"
																		},
																		"nativeSrc": "19662:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19662:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19609:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "19609:43:7"
																},
																"nativeSrc": "19609:72:7",
																"nodeType": "YulFunctionCall",
																"src": "19609:72:7"
															},
															"nativeSrc": "19609:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "19609:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19735:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19735:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19748:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19748:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19759:2:7",
																				"nodeType": "YulLiteral",
																				"src": "19759:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19744:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19744:3:7"
																		},
																		"nativeSrc": "19744:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19744:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19691:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "19691:43:7"
																},
																"nativeSrc": "19691:72:7",
																"nodeType": "YulFunctionCall",
																"src": "19691:72:7"
															},
															"nativeSrc": "19691:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "19691:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "19328:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19438:9:7",
														"nodeType": "YulTypedName",
														"src": "19438:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19450:6:7",
														"nodeType": "YulTypedName",
														"src": "19450:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19458:6:7",
														"nodeType": "YulTypedName",
														"src": "19458:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19466:6:7",
														"nodeType": "YulTypedName",
														"src": "19466:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19477:4:7",
														"nodeType": "YulTypedName",
														"src": "19477:4:7",
														"type": ""
													}
												],
												"src": "19328:442:7"
											},
											{
												"body": {
													"nativeSrc": "19874:124:7",
													"nodeType": "YulBlock",
													"src": "19874:124:7",
													"statements": [
														{
															"nativeSrc": "19884:26:7",
															"nodeType": "YulAssignment",
															"src": "19884:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19896:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "19896:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19907:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19907:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19892:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19892:3:7"
																},
																"nativeSrc": "19892:18:7",
																"nodeType": "YulFunctionCall",
																"src": "19892:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19884:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19884:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19964:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19964:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19977:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19977:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19988:1:7",
																				"nodeType": "YulLiteral",
																				"src": "19988:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19973:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19973:3:7"
																		},
																		"nativeSrc": "19973:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19973:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19920:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "19920:43:7"
																},
																"nativeSrc": "19920:71:7",
																"nodeType": "YulFunctionCall",
																"src": "19920:71:7"
															},
															"nativeSrc": "19920:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "19920:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "19776:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19846:9:7",
														"nodeType": "YulTypedName",
														"src": "19846:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19858:6:7",
														"nodeType": "YulTypedName",
														"src": "19858:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19869:4:7",
														"nodeType": "YulTypedName",
														"src": "19869:4:7",
														"type": ""
													}
												],
												"src": "19776:222:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_string_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_enum$_Vote_$68(value) {\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_Vote_$68(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Vote_$68(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_enum$_Vote_$68(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_Vote_$68(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct WeightedVoting.SerializedIssue -> struct WeightedVoting.SerializedIssue\n    function abi_encode_t_struct$_SerializedIssue_$64_memory_ptr_to_t_struct$_SerializedIssue_$64_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x0120)\n\n        {\n            // voters\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // issueDesc\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // quorum\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // totalVotes\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // votesFor\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // votesAgainst\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // votesAbstain\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // passed\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // closed\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x0100))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_SerializedIssue_$64_memory_ptr__to_t_struct$_SerializedIssue_$64_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_SerializedIssue_$64_memory_ptr_to_t_struct$_SerializedIssue_$64_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_length_t_string_calldata_ptr(value, len) -> length {\n\n        length := len\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage(slot, src, len) {\n\n        let newLen := array_length_t_string_calldata_ptr(src, len)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := calldataload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100fe575f3560e01c8063830953ab11610095578063976b311311610064578063976b3113146102ae578063a9059cbb146102de578063d5abeb011461030e578063dd62ed3e1461032c576100fe565b8063830953ab146102265780638615d85514610244578063943e82161461027457806395d89b4114610290576100fe565b8063313ce567116100d1578063313ce5671461019e5780634e71d92d146101bc578063624601b6146101c657806370a08231146101f6576100fe565b806306fdde0314610102578063095ea7b31461012057806318160ddd1461015057806323b872dd1461016e575b5f80fd5b61010a61035c565b6040516101179190611392565b60405180910390f35b61013a60048036038101906101359190611447565b6103ec565b604051610147919061149f565b60405180910390f35b61015861040e565b60405161016591906114c7565b60405180910390f35b610188600480360381019061018391906114e0565b610417565b604051610195919061149f565b60405180910390f35b6101a6610445565b6040516101b3919061154b565b60405180910390f35b6101c461044d565b005b6101e060048036038101906101db9190611564565b610581565b6040516101ed919061149f565b60405180910390f35b610210600480360381019061020b9190611564565b61059e565b60405161021d91906114c7565b60405180910390f35b61022e6105e3565b60405161023b91906114c7565b60405180910390f35b61025e600480360381019061025991906115f0565b6105e9565b60405161026b91906114c7565b60405180910390f35b61028e60048036038101906102899190611670565b6106c6565b005b610298610904565b6040516102a59190611392565b60405180910390f35b6102c860048036038101906102c391906116ae565b610994565b6040516102d591906118bf565b60405180910390f35b6102f860048036038101906102f39190611447565b610ad4565b604051610305919061149f565b60405180910390f35b610316610af6565b60405161032391906114c7565b60405180910390f35b610346600480360381019061034191906118df565b610afc565b60405161035391906114c7565b60405180910390f35b60606003805461036b9061194a565b80601f01602080910402602001604051908101604052809291908181526020018280546103979061194a565b80156103e25780601f106103b9576101008083540402835291602001916103e2565b820191905f5260205f20905b8154815290600101906020018083116103c557829003601f168201915b5050505050905090565b5f806103f6610b7e565b9050610403818585610b85565b600191505092915050565b5f600254905090565b5f80610421610b7e565b905061042e858285610b97565b610439858585610c29565b60019150509392505050565b5f6012905090565b60085460095461045b61040e565b61046591906119a7565b111561049d576040517fcbe2483100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161561051e576040517f0b1327a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61052a33600954610d19565b600160075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550565b6007602052805f5260405f205f915054906101000a900460ff1681565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60095481565b5f806105f43361059e565b0361062b576040517f8439960d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61063361040e565b82111561066c576040517f0d92730000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f600660018160018154018082558091505003905f5260205f209060090201905084848260020191826106a0929190611bae565b5082816003018190555060016006805490506106bc9190611c7b565b9150509392505050565b5f600683815481106106db576106da611cae565b5b905f5260205f20906009020190508060080160019054906101000a900460ff1615610732576040517f66b6cb4a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61074733825f01610d9890919063ffffffff16565b1561077e576040517f7c9a1cf900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6107883361059e565b90505f81036107c3576040517f8439960d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60028111156107d6576107d5611cdb565b5b8360028111156107e9576107e8611cdb565b5b0361080d5780826006015f82825461080191906119a7565b92505081905550610874565b6001600281111561082157610820611cdb565b5b83600281111561083457610833611cdb565b5b036108585780826005015f82825461084c91906119a7565b92505081905550610873565b80826007015f82825461086b91906119a7565b925050819055505b5b61088933835f01610dc590919063ffffffff16565b5080826004015f82825461089d91906119a7565b9250508190555081600301548260040154106108fe5760018260080160016101000a81548160ff0219169083151502179055508160060154826005015411156108fd576001826008015f6101000a81548160ff0219169083151502179055505b5b50505050565b6060600480546109139061194a565b80601f016020809104026020016040519081016040528092919081815260200182805461093f9061194a565b801561098a5780601f106109615761010080835404028352916020019161098a565b820191905f5260205f20905b81548152906001019060200180831161096d57829003601f168201915b5050505050905090565b61099c6112d9565b5f600683815481106109b1576109b0611cae565b5b905f5260205f20906009020190506040518061012001604052806109d6835f01610df2565b81526020018260020180546109ea9061194a565b80601f0160208091040260200160405190810160405280929190818152602001828054610a169061194a565b8015610a615780601f10610a3857610100808354040283529160200191610a61565b820191905f5260205f20905b815481529060010190602001808311610a4457829003601f168201915b505050505081526020018260030154815260200182600401548152602001826005015481526020018260060154815260200182600701548152602001826008015f9054906101000a900460ff16151581526020018260080160019054906101000a900460ff161515815250915050919050565b5f80610ade610b7e565b9050610aeb818585610c29565b600191505092915050565b60085481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b610b928383836001610e11565b505050565b5f610ba28484610afc565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c235781811015610c14578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610c0b93929190611d17565b60405180910390fd5b610c2284848484035f610e11565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c99575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610c909190611d4c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d09575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d009190611d4c565b60405180910390fd5b610d14838383610fe0565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d89575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d809190611d4c565b60405180910390fd5b610d945f8383610fe0565b5050565b5f610dbd835f018373ffffffffffffffffffffffffffffffffffffffff165f1b6111f9565b905092915050565b5f610dea835f018373ffffffffffffffffffffffffffffffffffffffff165f1b611219565b905092915050565b60605f610e00835f01611280565b905060608190508092505050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e81575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610e789190611d4c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ef1575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610ee89190611d4c565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610fda578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610fd191906114c7565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611030578060025f82825461102491906119a7565b925050819055506110fe565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156110b9578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016110b093929190611d17565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611145578060025f828254039250508190555061118f565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111ec91906114c7565b60405180910390a3505050565b5f80836001015f8481526020019081526020015f20541415905092915050565b5f61122483836111f9565b61127657825f0182908060018154018082558091505060019003905f5260205f20015f9091909190915055825f0180549050836001015f8481526020019081526020015f20819055506001905061127a565b5f90505b92915050565b6060815f018054806020026020016040519081016040528092919081815260200182805480156112cd57602002820191905f5260205f20905b8154815260200190600101908083116112b9575b50505050509050919050565b60405180610120016040528060608152602001606081526020015f81526020015f81526020015f81526020015f81526020015f81526020015f151581526020015f151581525090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61136482611322565b61136e818561132c565b935061137e81856020860161133c565b6113878161134a565b840191505092915050565b5f6020820190508181035f8301526113aa818461135a565b905092915050565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6113e3826113ba565b9050919050565b6113f3816113d9565b81146113fd575f80fd5b50565b5f8135905061140e816113ea565b92915050565b5f819050919050565b61142681611414565b8114611430575f80fd5b50565b5f813590506114418161141d565b92915050565b5f806040838503121561145d5761145c6113b2565b5b5f61146a85828601611400565b925050602061147b85828601611433565b9150509250929050565b5f8115159050919050565b61149981611485565b82525050565b5f6020820190506114b25f830184611490565b92915050565b6114c181611414565b82525050565b5f6020820190506114da5f8301846114b8565b92915050565b5f805f606084860312156114f7576114f66113b2565b5b5f61150486828701611400565b935050602061151586828701611400565b925050604061152686828701611433565b9150509250925092565b5f60ff82169050919050565b61154581611530565b82525050565b5f60208201905061155e5f83018461153c565b92915050565b5f60208284031215611579576115786113b2565b5b5f61158684828501611400565b91505092915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f8401126115b0576115af61158f565b5b8235905067ffffffffffffffff8111156115cd576115cc611593565b5b6020830191508360018202830111156115e9576115e8611597565b5b9250929050565b5f805f60408486031215611607576116066113b2565b5b5f84013567ffffffffffffffff811115611624576116236113b6565b5b6116308682870161159b565b9350935050602061164386828701611433565b9150509250925092565b60038110611659575f80fd5b50565b5f8135905061166a8161164d565b92915050565b5f8060408385031215611686576116856113b2565b5b5f61169385828601611433565b92505060206116a48582860161165c565b9150509250929050565b5f602082840312156116c3576116c26113b2565b5b5f6116d084828501611433565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61170b816113d9565b82525050565b5f61171c8383611702565b60208301905092915050565b5f602082019050919050565b5f61173e826116d9565b61174881856116e3565b9350611753836116f3565b805f5b8381101561178357815161176a8882611711565b975061177583611728565b925050600181019050611756565b5085935050505092915050565b5f82825260208201905092915050565b5f6117aa82611322565b6117b48185611790565b93506117c481856020860161133c565b6117cd8161134a565b840191505092915050565b6117e181611414565b82525050565b6117f081611485565b82525050565b5f61012083015f8301518482035f8601526118118282611734565b9150506020830151848203602086015261182b82826117a0565b915050604083015161184060408601826117d8565b50606083015161185360608601826117d8565b50608083015161186660808601826117d8565b5060a083015161187960a08601826117d8565b5060c083015161188c60c08601826117d8565b5060e083015161189f60e08601826117e7565b506101008301516118b46101008601826117e7565b508091505092915050565b5f6020820190508181035f8301526118d781846117f6565b905092915050565b5f80604083850312156118f5576118f46113b2565b5b5f61190285828601611400565b925050602061191385828601611400565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061196157607f821691505b6020821081036119745761197361191d565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6119b182611414565b91506119bc83611414565b92508282019050808211156119d4576119d361197a565b5b92915050565b5f82905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611a6d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611a32565b611a778683611a32565b95508019841693508086168417925050509392505050565b5f819050919050565b5f611ab2611aad611aa884611414565b611a8f565b611414565b9050919050565b5f819050919050565b611acb83611a98565b611adf611ad782611ab9565b848454611a3e565b825550505050565b5f90565b611af3611ae7565b611afe818484611ac2565b505050565b5b81811015611b2157611b165f82611aeb565b600181019050611b04565b5050565b601f821115611b6657611b3781611a11565b611b4084611a23565b81016020851015611b4f578190505b611b63611b5b85611a23565b830182611b03565b50505b505050565b5f82821c905092915050565b5f611b865f1984600802611b6b565b1980831691505092915050565b5f611b9e8383611b77565b9150826002028217905092915050565b611bb883836119da565b67ffffffffffffffff811115611bd157611bd06119e4565b5b611bdb825461194a565b611be6828285611b25565b5f601f831160018114611c13575f8415611c01578287013590505b611c0b8582611b93565b865550611c72565b601f198416611c2186611a11565b5f5b82811015611c4857848901358255600182019150602085019450602081019050611c23565b86831015611c655784890135611c61601f891682611b77565b8355505b6001600288020188555050505b50505050505050565b5f611c8582611414565b9150611c9083611414565b9250828203905081811115611ca857611ca761197a565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b611d11816113d9565b82525050565b5f606082019050611d2a5f830186611d08565b611d3760208301856114b8565b611d4460408301846114b8565b949350505050565b5f602082019050611d5f5f830184611d08565b9291505056fea2646970667358221220ad8b52685fce24c8d059e75d65eaec6fd9d8cd0d2ccd1ed1bf32f0e8cb7709ba64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x830953AB GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x976B3113 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x976B3113 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x32C JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x830953AB EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x8615D855 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x943E8216 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x290 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x624601B6 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F6 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x1447 JUMP JUMPDEST PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x40E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x14C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x14E0 JUMP JUMPDEST PUSH2 0x417 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x445 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x154B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x44D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1564 JUMP JUMPDEST PUSH2 0x581 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1564 JUMP JUMPDEST PUSH2 0x59E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x14C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x14C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x14C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x1670 JUMP JUMPDEST PUSH2 0x6C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x298 PUSH2 0x904 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x16AE JUMP JUMPDEST PUSH2 0x994 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x18BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x1447 JUMP JUMPDEST PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x316 PUSH2 0xAF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x14C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x346 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x18DF JUMP JUMPDEST PUSH2 0xAFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x14C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x36B SWAP1 PUSH2 0x194A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x397 SWAP1 PUSH2 0x194A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3F6 PUSH2 0xB7E JUMP JUMPDEST SWAP1 POP PUSH2 0x403 DUP2 DUP6 DUP6 PUSH2 0xB85 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x421 PUSH2 0xB7E JUMP JUMPDEST SWAP1 POP PUSH2 0x42E DUP6 DUP3 DUP6 PUSH2 0xB97 JUMP JUMPDEST PUSH2 0x439 DUP6 DUP6 DUP6 PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x45B PUSH2 0x40E JUMP JUMPDEST PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST GT ISZERO PUSH2 0x49D JUMPI PUSH1 0x40 MLOAD PUSH32 0xCBE2483100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x51E JUMPI PUSH1 0x40 MLOAD PUSH32 0xB1327A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x52A CALLER PUSH1 0x9 SLOAD PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5F4 CALLER PUSH2 0x59E JUMP JUMPDEST SUB PUSH2 0x62B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8439960D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x633 PUSH2 0x40E JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x66C JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92730000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD SWAP1 POP DUP5 DUP5 DUP3 PUSH1 0x2 ADD SWAP2 DUP3 PUSH2 0x6A0 SWAP3 SWAP2 SWAP1 PUSH2 0x1BAE JUMP JUMPDEST POP DUP3 DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 DUP1 SLOAD SWAP1 POP PUSH2 0x6BC SWAP2 SWAP1 PUSH2 0x1C7B JUMP JUMPDEST SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x6DB JUMPI PUSH2 0x6DA PUSH2 0x1CAE JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD SWAP1 POP DUP1 PUSH1 0x8 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x732 JUMPI PUSH1 0x40 MLOAD PUSH32 0x66B6CB4A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x747 CALLER DUP3 PUSH0 ADD PUSH2 0xD98 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x77E JUMPI PUSH1 0x40 MLOAD PUSH32 0x7C9A1CF900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x788 CALLER PUSH2 0x59E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x7C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8439960D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x7D6 JUMPI PUSH2 0x7D5 PUSH2 0x1CDB JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x7E9 JUMPI PUSH2 0x7E8 PUSH2 0x1CDB JUMP JUMPDEST JUMPDEST SUB PUSH2 0x80D JUMPI DUP1 DUP3 PUSH1 0x6 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x801 SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x874 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x821 JUMPI PUSH2 0x820 PUSH2 0x1CDB JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x834 JUMPI PUSH2 0x833 PUSH2 0x1CDB JUMP JUMPDEST JUMPDEST SUB PUSH2 0x858 JUMPI DUP1 DUP3 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x84C SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x873 JUMP JUMPDEST DUP1 DUP3 PUSH1 0x7 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x86B SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST PUSH2 0x889 CALLER DUP4 PUSH0 ADD PUSH2 0xDC5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP1 DUP3 PUSH1 0x4 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x89D SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 ADD SLOAD DUP3 PUSH1 0x4 ADD SLOAD LT PUSH2 0x8FE JUMPI PUSH1 0x1 DUP3 PUSH1 0x8 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 ADD SLOAD DUP3 PUSH1 0x5 ADD SLOAD GT ISZERO PUSH2 0x8FD JUMPI PUSH1 0x1 DUP3 PUSH1 0x8 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x913 SWAP1 PUSH2 0x194A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x93F SWAP1 PUSH2 0x194A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x98A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x961 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x98A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x96D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x99C PUSH2 0x12D9 JUMP JUMPDEST PUSH0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x9B1 JUMPI PUSH2 0x9B0 PUSH2 0x1CAE JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x9D6 DUP4 PUSH0 ADD PUSH2 0xDF2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x9EA SWAP1 PUSH2 0x194A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA16 SWAP1 PUSH2 0x194A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA61 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA38 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA61 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA44 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x4 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x5 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x6 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x7 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x8 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x8 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xADE PUSH2 0xB7E JUMP JUMPDEST SWAP1 POP PUSH2 0xAEB DUP2 DUP6 DUP6 PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB92 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE11 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBA2 DUP5 DUP5 PUSH2 0xAFC JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xC23 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC14 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC22 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE11 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC99 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC90 SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD09 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD00 SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD14 DUP4 DUP4 DUP4 PUSH2 0xFE0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD89 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD80 SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD94 PUSH0 DUP4 DUP4 PUSH2 0xFE0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDBD DUP4 PUSH0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 SHL PUSH2 0x11F9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDEA DUP4 PUSH0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 SHL PUSH2 0x1219 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xE00 DUP4 PUSH0 ADD PUSH2 0x1280 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP2 SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE81 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE78 SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEF1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE8 SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xFDA JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFD1 SWAP2 SWAP1 PUSH2 0x14C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1030 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1024 SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10FE JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10B9 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1145 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x118F JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x11EC SWAP2 SWAP1 PUSH2 0x14C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1224 DUP4 DUP4 PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0x1276 JUMPI DUP3 PUSH0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x127A JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x12CD JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x12B9 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1364 DUP3 PUSH2 0x1322 JUMP JUMPDEST PUSH2 0x136E DUP2 DUP6 PUSH2 0x132C JUMP JUMPDEST SWAP4 POP PUSH2 0x137E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x133C JUMP JUMPDEST PUSH2 0x1387 DUP2 PUSH2 0x134A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13AA DUP2 DUP5 PUSH2 0x135A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13E3 DUP3 PUSH2 0x13BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F3 DUP2 PUSH2 0x13D9 JUMP JUMPDEST DUP2 EQ PUSH2 0x13FD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x140E DUP2 PUSH2 0x13EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1426 DUP2 PUSH2 0x1414 JUMP JUMPDEST DUP2 EQ PUSH2 0x1430 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1441 DUP2 PUSH2 0x141D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x145D JUMPI PUSH2 0x145C PUSH2 0x13B2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x146A DUP6 DUP3 DUP7 ADD PUSH2 0x1400 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x147B DUP6 DUP3 DUP7 ADD PUSH2 0x1433 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1499 DUP2 PUSH2 0x1485 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14B2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1490 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14C1 DUP2 PUSH2 0x1414 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14DA PUSH0 DUP4 ADD DUP5 PUSH2 0x14B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14F7 JUMPI PUSH2 0x14F6 PUSH2 0x13B2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1504 DUP7 DUP3 DUP8 ADD PUSH2 0x1400 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1515 DUP7 DUP3 DUP8 ADD PUSH2 0x1400 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1526 DUP7 DUP3 DUP8 ADD PUSH2 0x1433 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1545 DUP2 PUSH2 0x1530 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x155E PUSH0 DUP4 ADD DUP5 PUSH2 0x153C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1579 JUMPI PUSH2 0x1578 PUSH2 0x13B2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1586 DUP5 DUP3 DUP6 ADD PUSH2 0x1400 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x15B0 JUMPI PUSH2 0x15AF PUSH2 0x158F JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15CD JUMPI PUSH2 0x15CC PUSH2 0x1593 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x15E9 JUMPI PUSH2 0x15E8 PUSH2 0x1597 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1607 JUMPI PUSH2 0x1606 PUSH2 0x13B2 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1624 JUMPI PUSH2 0x1623 PUSH2 0x13B6 JUMP JUMPDEST JUMPDEST PUSH2 0x1630 DUP7 DUP3 DUP8 ADD PUSH2 0x159B JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x1643 DUP7 DUP3 DUP8 ADD PUSH2 0x1433 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1659 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x166A DUP2 PUSH2 0x164D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1686 JUMPI PUSH2 0x1685 PUSH2 0x13B2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1693 DUP6 DUP3 DUP7 ADD PUSH2 0x1433 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16A4 DUP6 DUP3 DUP7 ADD PUSH2 0x165C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16C3 JUMPI PUSH2 0x16C2 PUSH2 0x13B2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16D0 DUP5 DUP3 DUP6 ADD PUSH2 0x1433 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x170B DUP2 PUSH2 0x13D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x171C DUP4 DUP4 PUSH2 0x1702 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x173E DUP3 PUSH2 0x16D9 JUMP JUMPDEST PUSH2 0x1748 DUP2 DUP6 PUSH2 0x16E3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1753 DUP4 PUSH2 0x16F3 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1783 JUMPI DUP2 MLOAD PUSH2 0x176A DUP9 DUP3 PUSH2 0x1711 JUMP JUMPDEST SWAP8 POP PUSH2 0x1775 DUP4 PUSH2 0x1728 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1756 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17AA DUP3 PUSH2 0x1322 JUMP JUMPDEST PUSH2 0x17B4 DUP2 DUP6 PUSH2 0x1790 JUMP JUMPDEST SWAP4 POP PUSH2 0x17C4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x133C JUMP JUMPDEST PUSH2 0x17CD DUP2 PUSH2 0x134A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E1 DUP2 PUSH2 0x1414 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x17F0 DUP2 PUSH2 0x1485 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x120 DUP4 ADD PUSH0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH0 DUP7 ADD MSTORE PUSH2 0x1811 DUP3 DUP3 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x182B DUP3 DUP3 PUSH2 0x17A0 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1840 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x17D8 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x1853 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x17D8 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x1866 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x17D8 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x1879 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x17D8 JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x188C PUSH1 0xC0 DUP7 ADD DUP3 PUSH2 0x17D8 JUMP JUMPDEST POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x189F PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0x17E7 JUMP JUMPDEST POP PUSH2 0x100 DUP4 ADD MLOAD PUSH2 0x18B4 PUSH2 0x100 DUP7 ADD DUP3 PUSH2 0x17E7 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18D7 DUP2 DUP5 PUSH2 0x17F6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18F5 JUMPI PUSH2 0x18F4 PUSH2 0x13B2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1902 DUP6 DUP3 DUP7 ADD PUSH2 0x1400 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1913 DUP6 DUP3 DUP7 ADD PUSH2 0x1400 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1961 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1974 JUMPI PUSH2 0x1973 PUSH2 0x191D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x19B1 DUP3 PUSH2 0x1414 JUMP JUMPDEST SWAP2 POP PUSH2 0x19BC DUP4 PUSH2 0x1414 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x19D4 JUMPI PUSH2 0x19D3 PUSH2 0x197A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1A6D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1A32 JUMP JUMPDEST PUSH2 0x1A77 DUP7 DUP4 PUSH2 0x1A32 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AB2 PUSH2 0x1AAD PUSH2 0x1AA8 DUP5 PUSH2 0x1414 JUMP JUMPDEST PUSH2 0x1A8F JUMP JUMPDEST PUSH2 0x1414 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ACB DUP4 PUSH2 0x1A98 JUMP JUMPDEST PUSH2 0x1ADF PUSH2 0x1AD7 DUP3 PUSH2 0x1AB9 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1A3E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1AF3 PUSH2 0x1AE7 JUMP JUMPDEST PUSH2 0x1AFE DUP2 DUP5 DUP5 PUSH2 0x1AC2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B21 JUMPI PUSH2 0x1B16 PUSH0 DUP3 PUSH2 0x1AEB JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1B04 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1B66 JUMPI PUSH2 0x1B37 DUP2 PUSH2 0x1A11 JUMP JUMPDEST PUSH2 0x1B40 DUP5 PUSH2 0x1A23 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1B4F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1B63 PUSH2 0x1B5B DUP6 PUSH2 0x1A23 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1B03 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B86 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1B6B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B9E DUP4 DUP4 PUSH2 0x1B77 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BB8 DUP4 DUP4 PUSH2 0x19DA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BD1 JUMPI PUSH2 0x1BD0 PUSH2 0x19E4 JUMP JUMPDEST JUMPDEST PUSH2 0x1BDB DUP3 SLOAD PUSH2 0x194A JUMP JUMPDEST PUSH2 0x1BE6 DUP3 DUP3 DUP6 PUSH2 0x1B25 JUMP JUMPDEST PUSH0 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1C13 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1C01 JUMPI DUP3 DUP8 ADD CALLDATALOAD SWAP1 POP JUMPDEST PUSH2 0x1C0B DUP6 DUP3 PUSH2 0x1B93 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1C21 DUP7 PUSH2 0x1A11 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1C48 JUMPI DUP5 DUP10 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C23 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1C65 JUMPI DUP5 DUP10 ADD CALLDATALOAD PUSH2 0x1C61 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1B77 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C85 DUP3 PUSH2 0x1414 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C90 DUP4 PUSH2 0x1414 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1CA8 JUMPI PUSH2 0x1CA7 PUSH2 0x197A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1D11 DUP2 PUSH2 0x13D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D2A PUSH0 DUP4 ADD DUP7 PUSH2 0x1D08 JUMP JUMPDEST PUSH2 0x1D37 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14B8 JUMP JUMPDEST PUSH2 0x1D44 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14B8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D5F PUSH0 DUP4 ADD DUP5 PUSH2 0x1D08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD DUP12 MSTORE PUSH9 0x5FCE24C8D059E75D65 0xEA 0xEC PUSH16 0xD9D8CD0D2CCD1ED1BF32F0E8CB7709BA PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "189:4655:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2147:474:0;;;:::i;:::-;;1726:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1846:32:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2627:612;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3880:962;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2276:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3245:629:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1778:34:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;2147:474:0:-;2264:9;;2250:11;;2234:13;:11;:13::i;:::-;:27;;;;:::i;:::-;:39;2230:95;;;2296:18;;;;;;;;;;;;;;2230:95;2396:13;:25;2410:10;2396:25;;;;;;;;;;;;;;;;;;;;;;;;;2392:78;;;2444:15;;;;;;;;;;;;;;2392:78;2516:30;2522:10;2534:11;;2516:5;:30::i;:::-;2584:4;2556:13;:25;2570:10;2556:25;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;2147:474::o;1726:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;3299:116:2:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;1846:32:0:-;;;;:::o;2627:612::-;2727:7;2827:1;2802:21;2812:10;2802:9;:21::i;:::-;:26;2798:78;;2851:14;;;;;;;;;;;;;;2798:78;2968:13;:11;:13::i;:::-;2958:7;:23;2954:76;;;3004:15;;;;;;;;;;;;;;2954:76;3090:20;3113:6;:13;;;;;;;;;;;;;;;;;;;;;;;;3090:36;;3155:10;;3136:6;:16;;:29;;;;;;;:::i;:::-;;3191:7;3175:6;:13;;:23;;;;3231:1;3215:6;:13;;;;:17;;;;:::i;:::-;3208:24;;;2627:612;;;;;:::o;3880:962::-;3941:20;3964:6;3971:8;3964:16;;;;;;;;:::i;:::-;;;;;;;;;;;;3941:39;;3994:6;:13;;;;;;;;;;;;3990:65;;;4030:14;;;;;;;;;;;;;;3990:65;4068:34;4091:10;4068:6;:13;;:22;;:34;;;;:::i;:::-;4064:86;;;4125:14;;;;;;;;;;;;;;4064:86;4160:15;4178:21;4188:10;4178:9;:21::i;:::-;4160:39;;4272:1;4261:7;:12;4257:64;;4296:14;;;;;;;;;;;;;;4257:64;4344:12;4335:21;;;;;;;;:::i;:::-;;:5;:21;;;;;;;;:::i;:::-;;;4331:223;;4395:7;4372:6;:19;;;:30;;;;;;;:::i;:::-;;;;;;;;4331:223;;;4432:8;4423:17;;;;;;;;:::i;:::-;;:5;:17;;;;;;;;:::i;:::-;;;4419:135;;4475:7;4456:6;:15;;;:26;;;;;;;:::i;:::-;;;;;;;;4419:135;;;4536:7;4513:6;:19;;;:30;;;;;;;:::i;:::-;;;;;;;;4419:135;4331:223;4564:29;4582:10;4564:6;:13;;:17;;:29;;;;:::i;:::-;;4624:7;4603:6;:17;;;:28;;;;;;;:::i;:::-;;;;;;;;4667:6;:13;;;4646:6;:17;;;:34;4642:194;;4712:4;4696:6;:13;;;:20;;;;;;;;;;;;;;;;;;4752:6;:19;;;4734:6;:15;;;:37;4730:96;;;4807:4;4791:6;:13;;;:20;;;;;;;;;;;;;;;;;;4730:96;4642:194;3931:911;;3880:962;;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3245:629:0:-;3328:22;;:::i;:::-;3366:20;3389:6;3396:8;3389:16;;;;;;;;:::i;:::-;;;;;;;;;;;;3366:39;;3434:433;;;;;;;;3476:22;:6;:13;;:20;:22::i;:::-;3434:433;;;;3527:6;:16;;3434:433;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3569:6;:13;;;3434:433;;;;3612:6;:17;;;3434:433;;;;3657:6;:15;;;3434:433;;;;3704:6;:19;;;3434:433;;;;3755:6;:19;;;3434:433;;;;3800:6;:13;;;;;;;;;;;;3434:433;;;;;;3839:6;:13;;;;;;;;;;;;3434:433;;;;;3415:452;;;3245:629;;;:::o;3610:178:2:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;1778:34:0:-;;;;:::o;3846:140:2:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;8871:165:6:-;8951:4;8974:55;8984:3;:10;;9020:5;9004:23;;8996:32;;8974:9;:55::i;:::-;8967:62;;8871:165;;;;:::o;8316:150::-;8386:4;8409:50;8414:3;:10;;8450:5;8434:23;;8426:32;;8409:4;:50::i;:::-;8402:57;;8316:150;;;;:::o;10270:300::-;10333:16;10361:22;10386:19;10394:3;:10;;10386:7;:19::i;:::-;10361:44;;10415:23;10525:5;10515:15;;10557:6;10550:13;;;;10270:300;;;:::o;9949:432:2:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;4264:129:6:-;4337:4;4385:1;4360:3;:14;;:21;4375:5;4360:21;;;;;;;;;;;;:26;;4353:33;;4264:129;;;;:::o;2241:406::-;2304:4;2325:21;2335:3;2340:5;2325:9;:21::i;:::-;2320:321;;2362:3;:11;;2379:5;2362:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2544:3;:11;;:18;;;;2520:3;:14;;:21;2535:5;2520:21;;;;;;;;;;;:42;;;;2583:4;2576:11;;;;2320:321;2625:5;2618:12;;2241:406;;;;;:::o;5581:109::-;5637:16;5672:3;:11;;5665:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5581:109;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1446:117;1555:1;1552;1545:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:117::-;5190:1;5187;5180:12;5204:117;5313:1;5310;5303:12;5327:117;5436:1;5433;5426:12;5464:553;5522:8;5532:6;5582:3;5575:4;5567:6;5563:17;5559:27;5549:122;;5590:79;;:::i;:::-;5549:122;5703:6;5690:20;5680:30;;5733:18;5725:6;5722:30;5719:117;;;5755:79;;:::i;:::-;5719:117;5869:4;5861:6;5857:17;5845:29;;5923:3;5915:4;5907:6;5903:17;5893:8;5889:32;5886:41;5883:128;;;5930:79;;:::i;:::-;5883:128;5464:553;;;;;:::o;6023:674::-;6103:6;6111;6119;6168:2;6156:9;6147:7;6143:23;6139:32;6136:119;;;6174:79;;:::i;:::-;6136:119;6322:1;6311:9;6307:17;6294:31;6352:18;6344:6;6341:30;6338:117;;;6374:79;;:::i;:::-;6338:117;6487:65;6544:7;6535:6;6524:9;6520:22;6487:65;:::i;:::-;6469:83;;;;6265:297;6601:2;6627:53;6672:7;6663:6;6652:9;6648:22;6627:53;:::i;:::-;6617:63;;6572:118;6023:674;;;;;:::o;6703:106::-;6783:1;6776:5;6773:12;6763:40;;6799:1;6796;6789:12;6763:40;6703:106;:::o;6815:153::-;6868:5;6906:6;6893:20;6884:29;;6922:40;6956:5;6922:40;:::i;:::-;6815:153;;;;:::o;6974:488::-;7049:6;7057;7106:2;7094:9;7085:7;7081:23;7077:32;7074:119;;;7112:79;;:::i;:::-;7074:119;7232:1;7257:53;7302:7;7293:6;7282:9;7278:22;7257:53;:::i;:::-;7247:63;;7203:117;7359:2;7385:60;7437:7;7428:6;7417:9;7413:22;7385:60;:::i;:::-;7375:70;;7330:125;6974:488;;;;;:::o;7468:329::-;7527:6;7576:2;7564:9;7555:7;7551:23;7547:32;7544:119;;;7582:79;;:::i;:::-;7544:119;7702:1;7727:53;7772:7;7763:6;7752:9;7748:22;7727:53;:::i;:::-;7717:63;;7673:117;7468:329;;;;:::o;7803:114::-;7870:6;7904:5;7898:12;7888:22;;7803:114;;;:::o;7923:174::-;8012:11;8046:6;8041:3;8034:19;8086:4;8081:3;8077:14;8062:29;;7923:174;;;;:::o;8103:132::-;8170:4;8193:3;8185:11;;8223:4;8218:3;8214:14;8206:22;;8103:132;;;:::o;8241:108::-;8318:24;8336:5;8318:24;:::i;:::-;8313:3;8306:37;8241:108;;:::o;8355:179::-;8424:10;8445:46;8487:3;8479:6;8445:46;:::i;:::-;8523:4;8518:3;8514:14;8500:28;;8355:179;;;;:::o;8540:113::-;8610:4;8642;8637:3;8633:14;8625:22;;8540:113;;;:::o;8689:712::-;8798:3;8827:54;8875:5;8827:54;:::i;:::-;8897:76;8966:6;8961:3;8897:76;:::i;:::-;8890:83;;8997:56;9047:5;8997:56;:::i;:::-;9076:7;9107:1;9092:284;9117:6;9114:1;9111:13;9092:284;;;9193:6;9187:13;9220:63;9279:3;9264:13;9220:63;:::i;:::-;9213:70;;9306:60;9359:6;9306:60;:::i;:::-;9296:70;;9152:224;9139:1;9136;9132:9;9127:14;;9092:284;;;9096:14;9392:3;9385:10;;8803:598;;;8689:712;;;;:::o;9407:159::-;9481:11;9515:6;9510:3;9503:19;9555:4;9550:3;9546:14;9531:29;;9407:159;;;;:::o;9572:357::-;9650:3;9678:39;9711:5;9678:39;:::i;:::-;9733:61;9787:6;9782:3;9733:61;:::i;:::-;9726:68;;9803:65;9861:6;9856:3;9849:4;9842:5;9838:16;9803:65;:::i;:::-;9893:29;9915:6;9893:29;:::i;:::-;9888:3;9884:39;9877:46;;9654:275;9572:357;;;;:::o;9935:108::-;10012:24;10030:5;10012:24;:::i;:::-;10007:3;10000:37;9935:108;;:::o;10049:99::-;10120:21;10135:5;10120:21;:::i;:::-;10115:3;10108:34;10049:99;;:::o;10240:1970::-;10371:3;10407:6;10402:3;10398:16;10498:4;10491:5;10487:16;10481:23;10551:3;10545:4;10541:14;10534:4;10529:3;10525:14;10518:38;10577:103;10675:4;10661:12;10577:103;:::i;:::-;10569:111;;10424:267;10778:4;10771:5;10767:16;10761:23;10831:3;10825:4;10821:14;10814:4;10809:3;10805:14;10798:38;10857:73;10925:4;10911:12;10857:73;:::i;:::-;10849:81;;10701:240;11025:4;11018:5;11014:16;11008:23;11044:63;11101:4;11096:3;11092:14;11078:12;11044:63;:::i;:::-;10951:166;11205:4;11198:5;11194:16;11188:23;11224:63;11281:4;11276:3;11272:14;11258:12;11224:63;:::i;:::-;11127:170;11383:4;11376:5;11372:16;11366:23;11402:63;11459:4;11454:3;11450:14;11436:12;11402:63;:::i;:::-;11307:168;11565:4;11558:5;11554:16;11548:23;11584:63;11641:4;11636:3;11632:14;11618:12;11584:63;:::i;:::-;11485:172;11747:4;11740:5;11736:16;11730:23;11766:63;11823:4;11818:3;11814:14;11800:12;11766:63;:::i;:::-;11667:172;11923:4;11916:5;11912:16;11906:23;11942:57;11993:4;11988:3;11984:14;11970:12;11942:57;:::i;:::-;11849:160;12093:6;12086:5;12082:18;12076:25;12114:59;12165:6;12160:3;12156:16;12142:12;12114:59;:::i;:::-;12019:164;12200:4;12193:11;;10376:1834;10240:1970;;;;:::o;12216:397::-;12371:4;12409:2;12398:9;12394:18;12386:26;;12458:9;12452:4;12448:20;12444:1;12433:9;12429:17;12422:47;12486:120;12601:4;12592:6;12486:120;:::i;:::-;12478:128;;12216:397;;;;:::o;12619:474::-;12687:6;12695;12744:2;12732:9;12723:7;12719:23;12715:32;12712:119;;;12750:79;;:::i;:::-;12712:119;12870:1;12895:53;12940:7;12931:6;12920:9;12916:22;12895:53;:::i;:::-;12885:63;;12841:117;12997:2;13023:53;13068:7;13059:6;13048:9;13044:22;13023:53;:::i;:::-;13013:63;;12968:118;12619:474;;;;;:::o;13099:180::-;13147:77;13144:1;13137:88;13244:4;13241:1;13234:15;13268:4;13265:1;13258:15;13285:320;13329:6;13366:1;13360:4;13356:12;13346:22;;13413:1;13407:4;13403:12;13434:18;13424:81;;13490:4;13482:6;13478:17;13468:27;;13424:81;13552:2;13544:6;13541:14;13521:18;13518:38;13515:84;;13571:18;;:::i;:::-;13515:84;13336:269;13285:320;;;:::o;13611:180::-;13659:77;13656:1;13649:88;13756:4;13753:1;13746:15;13780:4;13777:1;13770:15;13797:191;13837:3;13856:20;13874:1;13856:20;:::i;:::-;13851:25;;13890:20;13908:1;13890:20;:::i;:::-;13885:25;;13933:1;13930;13926:9;13919:16;;13954:3;13951:1;13948:10;13945:36;;;13961:18;;:::i;:::-;13945:36;13797:191;;;;:::o;13994:97::-;14053:6;14081:3;14071:13;;13994:97;;;;:::o;14097:180::-;14145:77;14142:1;14135:88;14242:4;14239:1;14232:15;14266:4;14263:1;14256:15;14283:141;14332:4;14355:3;14347:11;;14378:3;14375:1;14368:14;14412:4;14409:1;14399:18;14391:26;;14283:141;;;:::o;14430:93::-;14467:6;14514:2;14509;14502:5;14498:14;14494:23;14484:33;;14430:93;;;:::o;14529:107::-;14573:8;14623:5;14617:4;14613:16;14592:37;;14529:107;;;;:::o;14642:393::-;14711:6;14761:1;14749:10;14745:18;14784:97;14814:66;14803:9;14784:97;:::i;:::-;14902:39;14932:8;14921:9;14902:39;:::i;:::-;14890:51;;14974:4;14970:9;14963:5;14959:21;14950:30;;15023:4;15013:8;15009:19;15002:5;14999:30;14989:40;;14718:317;;14642:393;;;;;:::o;15041:60::-;15069:3;15090:5;15083:12;;15041:60;;;:::o;15107:142::-;15157:9;15190:53;15208:34;15217:24;15235:5;15217:24;:::i;:::-;15208:34;:::i;:::-;15190:53;:::i;:::-;15177:66;;15107:142;;;:::o;15255:75::-;15298:3;15319:5;15312:12;;15255:75;;;:::o;15336:269::-;15446:39;15477:7;15446:39;:::i;:::-;15507:91;15556:41;15580:16;15556:41;:::i;:::-;15548:6;15541:4;15535:11;15507:91;:::i;:::-;15501:4;15494:105;15412:193;15336:269;;;:::o;15611:73::-;15656:3;15611:73;:::o;15690:189::-;15767:32;;:::i;:::-;15808:65;15866:6;15858;15852:4;15808:65;:::i;:::-;15743:136;15690:189;;:::o;15885:186::-;15945:120;15962:3;15955:5;15952:14;15945:120;;;16016:39;16053:1;16046:5;16016:39;:::i;:::-;15989:1;15982:5;15978:13;15969:22;;15945:120;;;15885:186;;:::o;16077:543::-;16178:2;16173:3;16170:11;16167:446;;;16212:38;16244:5;16212:38;:::i;:::-;16296:29;16314:10;16296:29;:::i;:::-;16286:8;16282:44;16479:2;16467:10;16464:18;16461:49;;;16500:8;16485:23;;16461:49;16523:80;16579:22;16597:3;16579:22;:::i;:::-;16569:8;16565:37;16552:11;16523:80;:::i;:::-;16182:431;;16167:446;16077:543;;;:::o;16626:117::-;16680:8;16730:5;16724:4;16720:16;16699:37;;16626:117;;;;:::o;16749:169::-;16793:6;16826:51;16874:1;16870:6;16862:5;16859:1;16855:13;16826:51;:::i;:::-;16822:56;16907:4;16901;16897:15;16887:25;;16800:118;16749:169;;;;:::o;16923:295::-;16999:4;17145:29;17170:3;17164:4;17145:29;:::i;:::-;17137:37;;17207:3;17204:1;17200:11;17194:4;17191:21;17183:29;;16923:295;;;;:::o;17223:1403::-;17347:44;17387:3;17382;17347:44;:::i;:::-;17456:18;17448:6;17445:30;17442:56;;;17478:18;;:::i;:::-;17442:56;17522:38;17554:4;17548:11;17522:38;:::i;:::-;17607:67;17667:6;17659;17653:4;17607:67;:::i;:::-;17701:1;17730:2;17722:6;17719:14;17747:1;17742:632;;;;18418:1;18435:6;18432:84;;;18491:9;18486:3;18482:19;18469:33;18460:42;;18432:84;18542:67;18602:6;18595:5;18542:67;:::i;:::-;18536:4;18529:81;18391:229;17712:908;;17742:632;17794:4;17790:9;17782:6;17778:22;17828:37;17860:4;17828:37;:::i;:::-;17887:1;17901:215;17915:7;17912:1;17909:14;17901:215;;;18001:9;17996:3;17992:19;17979:33;17971:6;17964:49;18052:1;18044:6;18040:14;18030:24;;18099:2;18088:9;18084:18;18071:31;;17938:4;17935:1;17931:12;17926:17;;17901:215;;;18144:6;18135:7;18132:19;18129:186;;;18209:9;18204:3;18200:19;18187:33;18252:48;18294:4;18286:6;18282:17;18271:9;18252:48;:::i;:::-;18244:6;18237:64;18152:163;18129:186;18361:1;18357;18349:6;18345:14;18341:22;18335:4;18328:36;17749:625;;;17712:908;;17322:1304;;;17223:1403;;;:::o;18632:194::-;18672:4;18692:20;18710:1;18692:20;:::i;:::-;18687:25;;18726:20;18744:1;18726:20;:::i;:::-;18721:25;;18770:1;18767;18763:9;18755:17;;18794:1;18788:4;18785:11;18782:37;;;18799:18;;:::i;:::-;18782:37;18632:194;;;;:::o;18832:180::-;18880:77;18877:1;18870:88;18977:4;18974:1;18967:15;19001:4;18998:1;18991:15;19018:180;19066:77;19063:1;19056:88;19163:4;19160:1;19153:15;19187:4;19184:1;19177:15;19204:118;19291:24;19309:5;19291:24;:::i;:::-;19286:3;19279:37;19204:118;;:::o;19328:442::-;19477:4;19515:2;19504:9;19500:18;19492:26;;19528:71;19596:1;19585:9;19581:17;19572:6;19528:71;:::i;:::-;19609:72;19677:2;19666:9;19662:18;19653:6;19609:72;:::i;:::-;19691;19759:2;19748:9;19744:18;19735:6;19691:72;:::i;:::-;19328:442;;;;;;:::o;19776:222::-;19869:4;19907:2;19896:9;19892:18;19884:26;;19920:71;19988:1;19977:9;19973:17;19964:6;19920:71;:::i;:::-;19776:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1515800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2918",
								"claim()": "infinite",
								"claimAmount()": "2448",
								"createIssue(string,uint256)": "infinite",
								"decimals()": "361",
								"getIssue(uint256)": "infinite",
								"maxSupply()": "2491",
								"name()": "infinite",
								"symbol()": "infinite",
								"tokensClaimed(address)": "2900",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"vote(uint256,uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 189,
									"end": 4844,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 189,
									"end": 4844,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 189,
									"end": 4844,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 228,
									"end": 257,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 228,
									"end": 257,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 228,
									"end": 257,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 228,
									"end": 257,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 228,
									"end": 257,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 228,
									"end": 257,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 228,
									"end": 257,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 228,
									"end": 257,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 228,
									"end": 257,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 228,
									"end": 257,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 228,
									"end": 257,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 228,
									"end": 257,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 228,
									"end": 257,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 228,
									"end": 257,
									"name": "PUSH",
									"source": 0,
									"value": "76616C7565000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 228,
									"end": 257,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 228,
									"end": 257,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 228,
									"end": 257,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 228,
									"end": 257,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 228,
									"end": 257,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 228,
									"end": 257,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 228,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 228,
									"end": 257,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 228,
									"end": 257,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 228,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 228,
									"end": 257,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 228,
									"end": 257,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 228,
									"end": 257,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 228,
									"end": 257,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1805,
									"end": 1812,
									"name": "PUSH",
									"source": 0,
									"value": "F4240"
								},
								{
									"begin": 1778,
									"end": 1812,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1778,
									"end": 1812,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1875,
									"end": 1878,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 1846,
									"end": 1878,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1846,
									"end": 1878,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1919,
									"end": 1939,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1919,
									"end": 1939,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1919,
									"end": 1939,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1919,
									"end": 1939,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1919,
									"end": 1939,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1919,
									"end": 1939,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1919,
									"end": 1939,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1919,
									"end": 1939,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1919,
									"end": 1939,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1919,
									"end": 1939,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1919,
									"end": 1939,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1919,
									"end": 1939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1919,
									"end": 1939,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1919,
									"end": 1939,
									"name": "PUSH",
									"source": 0,
									"value": "616E790000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1919,
									"end": 1939,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1919,
									"end": 1939,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1919,
									"end": 1939,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1919,
									"end": 1939,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 1919,
									"end": 1939,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1919,
									"end": 1939,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1919,
									"end": 1939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1919,
									"end": 1939,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1919,
									"end": 1939,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1919,
									"end": 1939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1919,
									"end": 1939,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1919,
									"end": 1939,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1919,
									"end": 1939,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1919,
									"end": 1939,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1973,
									"end": 2141,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2048,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2050,
									"end": 2057,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2073,
									"end": 2079,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2073,
									"end": 2086,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2073,
									"end": 2086,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2073,
									"end": 2086,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2073,
									"end": 2086,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2073,
									"end": 2086,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2073,
									"end": 2086,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2073,
									"end": 2086,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2073,
									"end": 2086,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2073,
									"end": 2086,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2073,
									"end": 2086,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2073,
									"end": 2086,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2073,
									"end": 2086,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2073,
									"end": 2086,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2073,
									"end": 2086,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2073,
									"end": 2086,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2073,
									"end": 2086,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2073,
									"end": 2086,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2073,
									"end": 2086,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2073,
									"end": 2086,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2073,
									"end": 2086,
									"modifierDepth": 1,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2073,
									"end": 2086,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2073,
									"end": 2086,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2073,
									"end": 2086,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1973,
									"end": 2141,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 189,
									"end": 4844,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 189,
									"end": 4844,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5309,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 5234,
									"end": 5309,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5267,
									"end": 5273,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5300,
									"end": 5302,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5294,
									"end": 5303,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5284,
									"end": 5303,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5284,
									"end": 5303,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5309,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5309,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5315,
									"end": 5432,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 5315,
									"end": 5432,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5424,
									"end": 5425,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5421,
									"end": 5422,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5414,
									"end": 5426,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 5438,
									"end": 5555,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 5438,
									"end": 5555,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5547,
									"end": 5548,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5544,
									"end": 5545,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5537,
									"end": 5549,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 5561,
									"end": 5678,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 5561,
									"end": 5678,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5670,
									"end": 5671,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5667,
									"end": 5668,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5660,
									"end": 5672,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 5684,
									"end": 5801,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 5684,
									"end": 5801,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5793,
									"end": 5794,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5790,
									"end": 5791,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5783,
									"end": 5795,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 5807,
									"end": 5909,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5807,
									"end": 5909,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5848,
									"end": 5854,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5899,
									"end": 5901,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5895,
									"end": 5902,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5890,
									"end": 5892,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5883,
									"end": 5888,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5879,
									"end": 5893,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5875,
									"end": 5903,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5865,
									"end": 5903,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5865,
									"end": 5903,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5807,
									"end": 5909,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5807,
									"end": 5909,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5807,
									"end": 5909,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5807,
									"end": 5909,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5915,
									"end": 6196,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 5915,
									"end": 6196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5998,
									"end": 6025,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 6020,
									"end": 6024,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5998,
									"end": 6025,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5998,
									"end": 6025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5998,
									"end": 6025,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 5998,
									"end": 6025,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5990,
									"end": 5996,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5986,
									"end": 6026,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6128,
									"end": 6134,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6116,
									"end": 6126,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6113,
									"end": 6135,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6092,
									"end": 6110,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6080,
									"end": 6090,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6077,
									"end": 6111,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6074,
									"end": 6136,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 6071,
									"end": 6159,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6071,
									"end": 6159,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 6071,
									"end": 6159,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6139,
									"end": 6157,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 6139,
									"end": 6157,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 6139,
									"end": 6157,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6139,
									"end": 6157,
									"name": "tag",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 6139,
									"end": 6157,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6071,
									"end": 6159,
									"name": "tag",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 6071,
									"end": 6159,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6179,
									"end": 6189,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6175,
									"end": 6177,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6168,
									"end": 6190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5958,
									"end": 6196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5915,
									"end": 6196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5915,
									"end": 6196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5915,
									"end": 6196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6202,
									"end": 6331,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 6202,
									"end": 6331,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6236,
									"end": 6242,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6263,
									"end": 6283,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 6263,
									"end": 6283,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 6263,
									"end": 6283,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6263,
									"end": 6283,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 6263,
									"end": 6283,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6253,
									"end": 6283,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6253,
									"end": 6283,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6292,
									"end": 6325,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 6320,
									"end": 6324,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6312,
									"end": 6318,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6292,
									"end": 6325,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 6292,
									"end": 6325,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6292,
									"end": 6325,
									"name": "tag",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 6292,
									"end": 6325,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6202,
									"end": 6331,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6202,
									"end": 6331,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6202,
									"end": 6331,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6202,
									"end": 6331,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6337,
									"end": 6645,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 6337,
									"end": 6645,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6399,
									"end": 6403,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6489,
									"end": 6507,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6481,
									"end": 6487,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6478,
									"end": 6508,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6475,
									"end": 6531,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6475,
									"end": 6531,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 6475,
									"end": 6531,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6511,
									"end": 6529,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 6511,
									"end": 6529,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 6511,
									"end": 6529,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6511,
									"end": 6529,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 6511,
									"end": 6529,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6475,
									"end": 6531,
									"name": "tag",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 6475,
									"end": 6531,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6549,
									"end": 6578,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 6571,
									"end": 6577,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6549,
									"end": 6578,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6549,
									"end": 6578,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6549,
									"end": 6578,
									"name": "tag",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 6549,
									"end": 6578,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6541,
									"end": 6578,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6541,
									"end": 6578,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6633,
									"end": 6637,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6627,
									"end": 6631,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6623,
									"end": 6638,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6615,
									"end": 6638,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6615,
									"end": 6638,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6337,
									"end": 6645,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6337,
									"end": 6645,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6337,
									"end": 6645,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6337,
									"end": 6645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6790,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 6651,
									"end": 6790,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6740,
									"end": 6746,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6735,
									"end": 6738,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6730,
									"end": 6733,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6724,
									"end": 6747,
									"name": "MCOPY",
									"source": 7
								},
								{
									"begin": 6781,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6772,
									"end": 6778,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6767,
									"end": 6770,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6763,
									"end": 6779,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6756,
									"end": 6783,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6790,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6790,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6790,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6790,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6796,
									"end": 7230,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 6796,
									"end": 7230,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6885,
									"end": 6890,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6976,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 6926,
									"end": 6975,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 6968,
									"end": 6974,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6926,
									"end": 6975,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 6926,
									"end": 6975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6926,
									"end": 6975,
									"name": "tag",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 6926,
									"end": 6975,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6910,
									"end": 6976,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 6910,
									"end": 6976,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6910,
									"end": 6976,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 6910,
									"end": 6976,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6901,
									"end": 6976,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6901,
									"end": 6976,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6999,
									"end": 7005,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6992,
									"end": 6997,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6985,
									"end": 7006,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7037,
									"end": 7041,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7030,
									"end": 7035,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7026,
									"end": 7042,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7075,
									"end": 7078,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7066,
									"end": 7072,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7061,
									"end": 7064,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7057,
									"end": 7073,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7054,
									"end": 7079,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7051,
									"end": 7163,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7051,
									"end": 7163,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 7051,
									"end": 7163,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7082,
									"end": 7161,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 7082,
									"end": 7161,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 7082,
									"end": 7161,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7082,
									"end": 7161,
									"name": "tag",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 7082,
									"end": 7161,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7051,
									"end": 7163,
									"name": "tag",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 7051,
									"end": 7163,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7172,
									"end": 7224,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 7217,
									"end": 7223,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7212,
									"end": 7215,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7207,
									"end": 7210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7172,
									"end": 7224,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 7172,
									"end": 7224,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7172,
									"end": 7224,
									"name": "tag",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 7172,
									"end": 7224,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6891,
									"end": 7230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6796,
									"end": 7230,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 6796,
									"end": 7230,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6796,
									"end": 7230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6796,
									"end": 7230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6796,
									"end": 7230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6796,
									"end": 7230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7250,
									"end": 7605,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 7250,
									"end": 7605,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7317,
									"end": 7322,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7366,
									"end": 7369,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7359,
									"end": 7363,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 7351,
									"end": 7357,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7347,
									"end": 7364,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7343,
									"end": 7370,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 7333,
									"end": 7455,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 7333,
									"end": 7455,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7374,
									"end": 7453,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 7374,
									"end": 7453,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 7374,
									"end": 7453,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7374,
									"end": 7453,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 7374,
									"end": 7453,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7333,
									"end": 7455,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 7333,
									"end": 7455,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7484,
									"end": 7490,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7478,
									"end": 7491,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 7509,
									"end": 7599,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 7595,
									"end": 7598,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7587,
									"end": 7593,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7580,
									"end": 7584,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7572,
									"end": 7578,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 7568,
									"end": 7585,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7509,
									"end": 7599,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 7509,
									"end": 7599,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7509,
									"end": 7599,
									"name": "tag",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 7509,
									"end": 7599,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7500,
									"end": 7599,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7500,
									"end": 7599,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7323,
									"end": 7605,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7250,
									"end": 7605,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7250,
									"end": 7605,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7250,
									"end": 7605,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7250,
									"end": 7605,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7250,
									"end": 7605,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7611,
									"end": 8464,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 7611,
									"end": 8464,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7710,
									"end": 7716,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7718,
									"end": 7724,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7767,
									"end": 7769,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 7755,
									"end": 7764,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7746,
									"end": 7753,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7742,
									"end": 7765,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 7738,
									"end": 7770,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 7735,
									"end": 7854,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7735,
									"end": 7854,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 7735,
									"end": 7854,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7773,
									"end": 7852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 7773,
									"end": 7852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 7773,
									"end": 7852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7773,
									"end": 7852,
									"name": "tag",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 7773,
									"end": 7852,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7735,
									"end": 7854,
									"name": "tag",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 7735,
									"end": 7854,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7914,
									"end": 7915,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7903,
									"end": 7912,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7899,
									"end": 7916,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7893,
									"end": 7917,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 7944,
									"end": 7962,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7936,
									"end": 7942,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7933,
									"end": 7963,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7930,
									"end": 8047,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7930,
									"end": 8047,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 7930,
									"end": 8047,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7966,
									"end": 8045,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 7966,
									"end": 8045,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 7966,
									"end": 8045,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7966,
									"end": 8045,
									"name": "tag",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 7966,
									"end": 8045,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7930,
									"end": 8047,
									"name": "tag",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 7930,
									"end": 8047,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8071,
									"end": 8145,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 8137,
									"end": 8144,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8128,
									"end": 8134,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8117,
									"end": 8126,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8113,
									"end": 8135,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8071,
									"end": 8145,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 8071,
									"end": 8145,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8071,
									"end": 8145,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 8071,
									"end": 8145,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8061,
									"end": 8145,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8061,
									"end": 8145,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7864,
									"end": 8155,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8215,
									"end": 8217,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8204,
									"end": 8213,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8200,
									"end": 8218,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8194,
									"end": 8219,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8246,
									"end": 8264,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8235,
									"end": 8265,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8232,
									"end": 8349,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8232,
									"end": 8349,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 8232,
									"end": 8349,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8268,
									"end": 8347,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 8268,
									"end": 8347,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 8268,
									"end": 8347,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8268,
									"end": 8347,
									"name": "tag",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 8268,
									"end": 8347,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8232,
									"end": 8349,
									"name": "tag",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 8232,
									"end": 8349,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8373,
									"end": 8447,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 8439,
									"end": 8446,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8430,
									"end": 8436,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8419,
									"end": 8428,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8415,
									"end": 8437,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8373,
									"end": 8447,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 8373,
									"end": 8447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8373,
									"end": 8447,
									"name": "tag",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 8373,
									"end": 8447,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8363,
									"end": 8447,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8363,
									"end": 8447,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8165,
									"end": 8457,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7611,
									"end": 8464,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7611,
									"end": 8464,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7611,
									"end": 8464,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7611,
									"end": 8464,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7611,
									"end": 8464,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7611,
									"end": 8464,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 189,
									"end": 4844,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 189,
									"end": 4844,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 189,
									"end": 4844,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 189,
									"end": 4844,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 189,
									"end": 4844,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 189,
									"end": 4844,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 189,
									"end": 4844,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 189,
									"end": 4844,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 189,
									"end": 4844,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ad8b52685fce24c8d059e75d65eaec6fd9d8cd0d2ccd1ed1bf32f0e8cb7709ba64736f6c634300081a0033",
									".code": [
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "830953AB"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "976B3113"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "976B3113"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "D5ABEB01"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "830953AB"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "8615D855"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "943E8216"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "4E71D92D"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "624601B6"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 189,
											"end": 4844,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2621,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2147,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2147,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2147,
											"end": 2621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2621,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2147,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2621,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1726,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1726,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1726,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1846,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1846,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1846,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1846,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 1878,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1846,
											"end": 1878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 1878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1846,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1846,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 1878,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 1878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 1878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 1878,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 1878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 1878,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2627,
											"end": 3239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2627,
											"end": 3239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2627,
											"end": 3239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4842,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3880,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3880,
											"end": 4842,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3880,
											"end": 4842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4842,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4842,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4842,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3880,
											"end": 4842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3880,
											"end": 4842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4842,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3880,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3880,
											"end": 4842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4842,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3880,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4842,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3245,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3245,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3245,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1778,
											"end": 1812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1778,
											"end": 1812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2621,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2147,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2273,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2264,
											"end": 2273,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2250,
											"end": 2261,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2250,
											"end": 2261,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2234,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2234,
											"end": 2247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2234,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2234,
											"end": 2261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2234,
											"end": 2261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2261,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2234,
											"end": 2261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2273,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2325,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2230,
											"end": 2325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2296,
											"end": 2314,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2314,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2296,
											"end": 2314,
											"name": "PUSH",
											"source": 0,
											"value": "CBE2483100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2296,
											"end": 2314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2296,
											"end": 2314,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2296,
											"end": 2314,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2296,
											"end": 2314,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2314,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2296,
											"end": 2314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2296,
											"end": 2314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2296,
											"end": 2314,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2296,
											"end": 2314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2296,
											"end": 2314,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2325,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2230,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2409,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2410,
											"end": 2420,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2396,
											"end": 2421,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2470,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2392,
											"end": 2470,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "PUSH",
											"source": 0,
											"value": "B1327A600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2470,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2392,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2516,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2522,
											"end": 2532,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2545,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2534,
											"end": 2545,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2516,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2516,
											"end": 2546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2516,
											"end": 2546,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2516,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2588,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2556,
											"end": 2569,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2556,
											"end": 2581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2580,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2581,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2556,
											"end": 2581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2581,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2556,
											"end": 2581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2556,
											"end": 2581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2556,
											"end": 2581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2556,
											"end": 2581,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2556,
											"end": 2588,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2556,
											"end": 2588,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2588,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2588,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2556,
											"end": 2588,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2588,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2588,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2588,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2588,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2588,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2588,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2588,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2588,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1846,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1846,
											"end": 1878,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 1878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2727,
											"end": 2734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2827,
											"end": 2828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2812,
											"end": 2822,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2802,
											"end": 2823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2823,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2802,
											"end": 2823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2798,
											"end": 2876,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2865,
											"name": "PUSH",
											"source": 0,
											"value": "8439960D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2851,
											"end": 2865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2865,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2851,
											"end": 2865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2865,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2865,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2876,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2798,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2968,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2968,
											"end": 2981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 2981,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2968,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2958,
											"end": 2965,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2958,
											"end": 2981,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3030,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2954,
											"end": 3030,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "D92730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3004,
											"end": 3019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3019,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3019,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3030,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2954,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3113,
											"end": 3119,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3113,
											"end": 3126,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3113,
											"end": 3126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3113,
											"end": 3126,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3113,
											"end": 3126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3113,
											"end": 3126,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3113,
											"end": 3126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3113,
											"end": 3126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3113,
											"end": 3126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3113,
											"end": 3126,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3113,
											"end": 3126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3113,
											"end": 3126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3113,
											"end": 3126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3113,
											"end": 3126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3113,
											"end": 3126,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3113,
											"end": 3126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3113,
											"end": 3126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3113,
											"end": 3126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3113,
											"end": 3126,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3113,
											"end": 3126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3113,
											"end": 3126,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3113,
											"end": 3126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3113,
											"end": 3126,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3113,
											"end": 3126,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3113,
											"end": 3126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3165,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3165,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3142,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3152,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3136,
											"end": 3152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3165,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3165,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3136,
											"end": 3165,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3165,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3136,
											"end": 3165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3165,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3136,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3198,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3188,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3175,
											"end": 3188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3198,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3232,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3215,
											"end": 3221,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3215,
											"end": 3228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3215,
											"end": 3228,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3215,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3215,
											"end": 3228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3215,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3215,
											"end": 3232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3215,
											"end": 3232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3215,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3215,
											"end": 3232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3215,
											"end": 3232,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3215,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3208,
											"end": 3232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3208,
											"end": 3232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3208,
											"end": 3232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 3239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 3239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4842,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3880,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3970,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3971,
											"end": 3979,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3964,
											"end": 3980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3964,
											"end": 3980,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3964,
											"end": 3980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3964,
											"end": 3980,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3964,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3964,
											"end": 3980,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3964,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3964,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3964,
											"end": 3980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3964,
											"end": 3980,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3964,
											"end": 3980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3964,
											"end": 3980,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3964,
											"end": 3980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3964,
											"end": 3980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3964,
											"end": 3980,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3980,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3964,
											"end": 3980,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3964,
											"end": 3980,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3980,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3964,
											"end": 3980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3964,
											"end": 3980,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3964,
											"end": 3980,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3964,
											"end": 3980,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3980,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4007,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3994,
											"end": 4007,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4007,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3994,
											"end": 4007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4007,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4007,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3994,
											"end": 4007,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4007,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4007,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3994,
											"end": 4007,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4055,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3990,
											"end": 4055,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4030,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4030,
											"end": 4044,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4030,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "66B6CB4A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4030,
											"end": 4044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4030,
											"end": 4044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4030,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4030,
											"end": 4044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4030,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4030,
											"end": 4044,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4030,
											"end": 4044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4030,
											"end": 4044,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4030,
											"end": 4044,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4030,
											"end": 4044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4030,
											"end": 4044,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4055,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3990,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4068,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4091,
											"end": 4101,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4068,
											"end": 4074,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4068,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4068,
											"end": 4090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4068,
											"end": 4102,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4068,
											"end": 4102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4068,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4068,
											"end": 4102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4068,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4068,
											"end": 4102,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4068,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4150,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4064,
											"end": 4150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4125,
											"end": 4139,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4139,
											"name": "PUSH",
											"source": 0,
											"value": "7C9A1CF900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4125,
											"end": 4139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4139,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4125,
											"end": 4139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4125,
											"end": 4139,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4139,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4139,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4150,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4064,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4160,
											"end": 4175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4178,
											"end": 4199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4188,
											"end": 4198,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4178,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4178,
											"end": 4199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4178,
											"end": 4199,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4178,
											"end": 4199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4160,
											"end": 4199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4160,
											"end": 4199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4273,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4261,
											"end": 4268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4261,
											"end": 4273,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4257,
											"end": 4321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4296,
											"end": 4310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4310,
											"name": "PUSH",
											"source": 0,
											"value": "8439960D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4296,
											"end": 4310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4310,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4310,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4296,
											"end": 4310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4296,
											"end": 4310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4310,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4310,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4257,
											"end": 4321,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4257,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4335,
											"end": 4356,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4335,
											"end": 4356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4356,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4356,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4335,
											"end": 4356,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4335,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 4335,
											"end": 4356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4356,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4335,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4356,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4335,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4340,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4356,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4335,
											"end": 4356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4356,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4356,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 4335,
											"end": 4356,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4335,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 4335,
											"end": 4356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4356,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4335,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4356,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 4335,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4356,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 4331,
											"end": 4554,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4378,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4391,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4372,
											"end": 4391,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4391,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4372,
											"end": 4402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 4372,
											"end": 4402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4372,
											"end": 4402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4402,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 4372,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4402,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4402,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 4331,
											"end": 4554,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4554,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 4331,
											"end": 4554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4432,
											"end": 4440,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4423,
											"end": 4440,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4423,
											"end": 4440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4423,
											"end": 4440,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4423,
											"end": 4440,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4423,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 4423,
											"end": 4440,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4423,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 4423,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 4423,
											"end": 4440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4423,
											"end": 4440,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 4423,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4423,
											"end": 4440,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 4423,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4423,
											"end": 4428,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4423,
											"end": 4440,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4423,
											"end": 4440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4423,
											"end": 4440,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4423,
											"end": 4440,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4423,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 4423,
											"end": 4440,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4423,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 4423,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 4423,
											"end": 4440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4423,
											"end": 4440,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 4423,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4423,
											"end": 4440,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 4423,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4423,
											"end": 4440,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 4419,
											"end": 4554,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4475,
											"end": 4482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4462,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4471,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4456,
											"end": 4471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4456,
											"end": 4482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4482,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 4456,
											"end": 4482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4456,
											"end": 4482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4482,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 4456,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4482,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4482,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 4419,
											"end": 4554,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4554,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 4419,
											"end": 4554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 4543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4513,
											"end": 4519,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4513,
											"end": 4532,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4513,
											"end": 4532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4513,
											"end": 4532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4513,
											"end": 4543,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4513,
											"end": 4543,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4513,
											"end": 4543,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4513,
											"end": 4543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4513,
											"end": 4543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4513,
											"end": 4543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4513,
											"end": 4543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4513,
											"end": 4543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4513,
											"end": 4543,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4513,
											"end": 4543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4513,
											"end": 4543,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4513,
											"end": 4543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4513,
											"end": 4543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4513,
											"end": 4543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4513,
											"end": 4543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4513,
											"end": 4543,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4513,
											"end": 4543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4554,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 4419,
											"end": 4554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4554,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 4331,
											"end": 4554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4564,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 4582,
											"end": 4592,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4564,
											"end": 4570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4564,
											"end": 4577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4564,
											"end": 4577,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4564,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 4564,
											"end": 4581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4564,
											"end": 4593,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4564,
											"end": 4593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4564,
											"end": 4593,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4564,
											"end": 4593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4564,
											"end": 4593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4564,
											"end": 4593,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 4564,
											"end": 4593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4564,
											"end": 4593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4624,
											"end": 4631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4603,
											"end": 4609,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4603,
											"end": 4620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4603,
											"end": 4620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4603,
											"end": 4620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4603,
											"end": 4631,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4603,
											"end": 4631,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4603,
											"end": 4631,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4603,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 4603,
											"end": 4631,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4603,
											"end": 4631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4603,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4603,
											"end": 4631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4603,
											"end": 4631,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 4603,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4603,
											"end": 4631,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4603,
											"end": 4631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4603,
											"end": 4631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4603,
											"end": 4631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4603,
											"end": 4631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4603,
											"end": 4631,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4603,
											"end": 4631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4667,
											"end": 4673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4667,
											"end": 4680,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4667,
											"end": 4680,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4667,
											"end": 4680,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4646,
											"end": 4652,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4646,
											"end": 4663,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4646,
											"end": 4663,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4646,
											"end": 4663,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4646,
											"end": 4680,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 4642,
											"end": 4836,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4712,
											"end": 4716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4696,
											"end": 4702,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4709,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4696,
											"end": 4709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4709,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4696,
											"end": 4716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4696,
											"end": 4716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4716,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4716,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4716,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4696,
											"end": 4716,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4716,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4716,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4716,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4716,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4716,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4716,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4716,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4752,
											"end": 4758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4752,
											"end": 4771,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4752,
											"end": 4771,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4752,
											"end": 4771,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4734,
											"end": 4740,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4734,
											"end": 4749,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4734,
											"end": 4749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4734,
											"end": 4749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4734,
											"end": 4771,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4730,
											"end": 4826,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4730,
											"end": 4826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 4730,
											"end": 4826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4807,
											"end": 4811,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4791,
											"end": 4797,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4804,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4791,
											"end": 4804,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4791,
											"end": 4811,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4791,
											"end": 4811,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4811,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4811,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4791,
											"end": 4811,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4811,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4811,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4811,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4811,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4811,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4811,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4811,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4811,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4811,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4730,
											"end": 4826,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 4730,
											"end": 4826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4836,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 4642,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3931,
											"end": 4842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3931,
											"end": 4842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 3328,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3328,
											"end": 3350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3350,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 3328,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3389,
											"end": 3395,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3396,
											"end": 3404,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3405,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3405,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 3389,
											"end": 3405,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 3389,
											"end": 3405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3389,
											"end": 3405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3405,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 3389,
											"end": 3405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3405,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 3389,
											"end": 3405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3389,
											"end": 3405,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3405,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3389,
											"end": 3405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3389,
											"end": 3405,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3405,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3389,
											"end": 3405,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 3476,
											"end": 3482,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3476,
											"end": 3489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 3476,
											"end": 3498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3498,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 3476,
											"end": 3498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3527,
											"end": 3533,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3527,
											"end": 3543,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3527,
											"end": 3543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3434,
											"end": 3867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3434,
											"end": 3867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3569,
											"end": 3575,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3569,
											"end": 3582,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3569,
											"end": 3582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3569,
											"end": 3582,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3618,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3629,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3612,
											"end": 3629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3629,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3663,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3704,
											"end": 3710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3704,
											"end": 3723,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3704,
											"end": 3723,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3704,
											"end": 3723,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3755,
											"end": 3761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3755,
											"end": 3774,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3755,
											"end": 3774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3755,
											"end": 3774,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3806,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3813,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3800,
											"end": 3813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3813,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3813,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3800,
											"end": 3813,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3813,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3813,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3800,
											"end": 3813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3839,
											"end": 3845,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3839,
											"end": 3852,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3839,
											"end": 3852,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3839,
											"end": 3852,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3839,
											"end": 3852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3839,
											"end": 3852,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3839,
											"end": 3852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3839,
											"end": 3852,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3839,
											"end": 3852,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3839,
											"end": 3852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3839,
											"end": 3852,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3839,
											"end": 3852,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3839,
											"end": 3852,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8871,
											"end": 9036,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 8871,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8951,
											"end": 8955,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8974,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 8984,
											"end": 8987,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8984,
											"end": 8994,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8984,
											"end": 8994,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9020,
											"end": 9025,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9004,
											"end": 9027,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9004,
											"end": 9027,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8996,
											"end": 9028,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8996,
											"end": 9028,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 8974,
											"end": 8983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 8974,
											"end": 9029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8974,
											"end": 9029,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 8974,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8967,
											"end": 9029,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8967,
											"end": 9029,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8871,
											"end": 9036,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8871,
											"end": 9036,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8871,
											"end": 9036,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8871,
											"end": 9036,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8871,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8316,
											"end": 8466,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 8316,
											"end": 8466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8386,
											"end": 8390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8409,
											"end": 8459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 8414,
											"end": 8417,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8414,
											"end": 8424,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8414,
											"end": 8424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8450,
											"end": 8455,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8434,
											"end": 8457,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8434,
											"end": 8457,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8426,
											"end": 8458,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8426,
											"end": 8458,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 8409,
											"end": 8413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 8409,
											"end": 8459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8409,
											"end": 8459,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 8409,
											"end": 8459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8402,
											"end": 8459,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8402,
											"end": 8459,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8316,
											"end": 8466,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8316,
											"end": 8466,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8316,
											"end": 8466,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8316,
											"end": 8466,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8316,
											"end": 8466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10270,
											"end": 10570,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 10270,
											"end": 10570,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10333,
											"end": 10349,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 10361,
											"end": 10383,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10386,
											"end": 10405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 10394,
											"end": 10397,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10394,
											"end": 10404,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10394,
											"end": 10404,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10386,
											"end": 10393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 10386,
											"end": 10405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10386,
											"end": 10405,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 10386,
											"end": 10405,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10361,
											"end": 10405,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10361,
											"end": 10405,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10415,
											"end": 10438,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 10525,
											"end": 10530,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10515,
											"end": 10530,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10515,
											"end": 10530,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10557,
											"end": 10563,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10550,
											"end": 10563,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10550,
											"end": 10563,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10550,
											"end": 10563,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10550,
											"end": 10563,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10270,
											"end": 10570,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10270,
											"end": 10570,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10270,
											"end": 10570,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10270,
											"end": 10570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4341,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4385,
											"end": 4386,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4363,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4374,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4360,
											"end": 4374,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4375,
											"end": 4380,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4386,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4386,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4353,
											"end": 4386,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4353,
											"end": 4386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4264,
											"end": 4393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2304,
											"end": 2308,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 2335,
											"end": 2338,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2340,
											"end": 2345,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2325,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2325,
											"end": 2346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2325,
											"end": 2346,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 2325,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 2320,
											"end": 2641,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2365,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2373,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2373,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2379,
											"end": 2384,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2544,
											"end": 2547,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2544,
											"end": 2555,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2544,
											"end": 2555,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2544,
											"end": 2562,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2544,
											"end": 2562,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2544,
											"end": 2562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2544,
											"end": 2562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2523,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2535,
											"end": 2540,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2562,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2562,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2583,
											"end": 2587,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2576,
											"end": 2587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2576,
											"end": 2587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2576,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 2576,
											"end": 2587,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2641,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 2320,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2625,
											"end": 2630,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2630,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2630,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5690,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 5581,
											"end": 5690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5637,
											"end": 5653,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5672,
											"end": 5675,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5672,
											"end": 5683,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5672,
											"end": 5683,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5690,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "167"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "120"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5190,
											"end": 5191,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5187,
											"end": 5188,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5204,
											"end": 5321,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 5204,
											"end": 5321,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5313,
											"end": 5314,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5310,
											"end": 5311,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5303,
											"end": 5315,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5327,
											"end": 5444,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 5327,
											"end": 5444,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5436,
											"end": 5437,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5433,
											"end": 5434,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5426,
											"end": 5438,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 6017,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 5464,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5522,
											"end": 5530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5532,
											"end": 5538,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5582,
											"end": 5585,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5579,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5567,
											"end": 5573,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5563,
											"end": 5580,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5559,
											"end": 5586,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5549,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 5549,
											"end": 5671,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5590,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 5590,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 5590,
											"end": 5669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5590,
											"end": 5669,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 5590,
											"end": 5669,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5549,
											"end": 5671,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 5549,
											"end": 5671,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5703,
											"end": 5709,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5690,
											"end": 5710,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5710,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5710,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5731,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5722,
											"end": 5752,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5719,
											"end": 5836,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5719,
											"end": 5836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 5719,
											"end": 5836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5755,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 5755,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 5755,
											"end": 5834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5755,
											"end": 5834,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 5755,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5719,
											"end": 5836,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 5719,
											"end": 5836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5869,
											"end": 5873,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5861,
											"end": 5867,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5857,
											"end": 5874,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5845,
											"end": 5874,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5845,
											"end": 5874,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5923,
											"end": 5926,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5915,
											"end": 5919,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5907,
											"end": 5913,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5903,
											"end": 5920,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5893,
											"end": 5901,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5889,
											"end": 5921,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 5927,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 6011,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 6011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 5883,
											"end": 6011,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5930,
											"end": 6009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 5930,
											"end": 6009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 5930,
											"end": 6009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5930,
											"end": 6009,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 5930,
											"end": 6009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 6011,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 5883,
											"end": 6011,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 6017,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 6017,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 6017,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 6017,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 6017,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 6017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6697,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 6023,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6103,
											"end": 6109,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6111,
											"end": 6117,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6125,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6168,
											"end": 6170,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6165,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6147,
											"end": 6154,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6143,
											"end": 6166,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6139,
											"end": 6171,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6136,
											"end": 6255,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6136,
											"end": 6255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 6136,
											"end": 6255,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6174,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 6174,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 6174,
											"end": 6253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6174,
											"end": 6253,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 6174,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6136,
											"end": 6255,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 6136,
											"end": 6255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6322,
											"end": 6323,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6311,
											"end": 6320,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6307,
											"end": 6324,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6294,
											"end": 6325,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6352,
											"end": 6370,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6344,
											"end": 6350,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6341,
											"end": 6371,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6338,
											"end": 6455,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6338,
											"end": 6455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 6338,
											"end": 6455,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6374,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 6374,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 6374,
											"end": 6453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6374,
											"end": 6453,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 6374,
											"end": 6453,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6338,
											"end": 6455,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 6338,
											"end": 6455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6487,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 6544,
											"end": 6551,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6535,
											"end": 6541,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6524,
											"end": 6533,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6520,
											"end": 6542,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6487,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 6487,
											"end": 6552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6487,
											"end": 6552,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 6487,
											"end": 6552,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6469,
											"end": 6552,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6469,
											"end": 6552,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6469,
											"end": 6552,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6469,
											"end": 6552,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6265,
											"end": 6562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6603,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 6672,
											"end": 6679,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6663,
											"end": 6669,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6652,
											"end": 6661,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6670,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 6627,
											"end": 6680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6617,
											"end": 6680,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6617,
											"end": 6680,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6697,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6697,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6697,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6703,
											"end": 6809,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 6703,
											"end": 6809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6783,
											"end": 6784,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6776,
											"end": 6781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6773,
											"end": 6785,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6763,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 6763,
											"end": 6803,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6800,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6796,
											"end": 6797,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6789,
											"end": 6801,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6763,
											"end": 6803,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 6763,
											"end": 6803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6703,
											"end": 6809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6703,
											"end": 6809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6815,
											"end": 6968,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 6815,
											"end": 6968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6868,
											"end": 6873,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6906,
											"end": 6912,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6893,
											"end": 6913,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6884,
											"end": 6913,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6884,
											"end": 6913,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 6956,
											"end": 6961,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 6922,
											"end": 6962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6815,
											"end": 6968,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6815,
											"end": 6968,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6815,
											"end": 6968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6815,
											"end": 6968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6815,
											"end": 6968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 7462,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 6974,
											"end": 7462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7049,
											"end": 7055,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7057,
											"end": 7063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7106,
											"end": 7108,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7094,
											"end": 7103,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7085,
											"end": 7092,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7081,
											"end": 7104,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7077,
											"end": 7109,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7074,
											"end": 7193,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7074,
											"end": 7193,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 7074,
											"end": 7193,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7112,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 7112,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 7112,
											"end": 7191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7112,
											"end": 7191,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 7112,
											"end": 7191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7074,
											"end": 7193,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 7074,
											"end": 7193,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7232,
											"end": 7233,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7257,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 7302,
											"end": 7309,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7293,
											"end": 7299,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7282,
											"end": 7291,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7278,
											"end": 7300,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7257,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 7257,
											"end": 7310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7257,
											"end": 7310,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 7257,
											"end": 7310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7247,
											"end": 7310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7247,
											"end": 7310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7203,
											"end": 7320,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7359,
											"end": 7361,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7385,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 7437,
											"end": 7444,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7428,
											"end": 7434,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7417,
											"end": 7426,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7413,
											"end": 7435,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7385,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 7385,
											"end": 7445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7385,
											"end": 7445,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 7385,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7375,
											"end": 7445,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7375,
											"end": 7445,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7330,
											"end": 7455,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 7462,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 7462,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 7462,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 7462,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 7462,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 7462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7468,
											"end": 7797,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 7468,
											"end": 7797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7527,
											"end": 7533,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7576,
											"end": 7578,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7564,
											"end": 7573,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7555,
											"end": 7562,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7551,
											"end": 7574,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7547,
											"end": 7579,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7544,
											"end": 7663,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7544,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 7544,
											"end": 7663,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7582,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 7582,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 7582,
											"end": 7661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7582,
											"end": 7661,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 7582,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7544,
											"end": 7663,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 7544,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7702,
											"end": 7703,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7727,
											"end": 7780,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 7772,
											"end": 7779,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7763,
											"end": 7769,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7752,
											"end": 7761,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7748,
											"end": 7770,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7727,
											"end": 7780,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 7727,
											"end": 7780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7727,
											"end": 7780,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 7727,
											"end": 7780,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7717,
											"end": 7780,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7717,
											"end": 7780,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7673,
											"end": 7790,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7468,
											"end": 7797,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7468,
											"end": 7797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7468,
											"end": 7797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7468,
											"end": 7797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7468,
											"end": 7797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7803,
											"end": 7917,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 7803,
											"end": 7917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7876,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7904,
											"end": 7909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7898,
											"end": 7910,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7888,
											"end": 7910,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7888,
											"end": 7910,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7803,
											"end": 7917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7803,
											"end": 7917,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7803,
											"end": 7917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7803,
											"end": 7917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7923,
											"end": 8097,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 7923,
											"end": 8097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8012,
											"end": 8023,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8046,
											"end": 8052,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8041,
											"end": 8044,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8034,
											"end": 8053,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8081,
											"end": 8084,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8077,
											"end": 8091,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8062,
											"end": 8091,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8062,
											"end": 8091,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7923,
											"end": 8097,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7923,
											"end": 8097,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7923,
											"end": 8097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7923,
											"end": 8097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7923,
											"end": 8097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8103,
											"end": 8235,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 8103,
											"end": 8235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8170,
											"end": 8174,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8193,
											"end": 8196,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8185,
											"end": 8196,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8185,
											"end": 8196,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8223,
											"end": 8227,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8218,
											"end": 8221,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8206,
											"end": 8228,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8206,
											"end": 8228,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8103,
											"end": 8235,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8103,
											"end": 8235,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8103,
											"end": 8235,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8103,
											"end": 8235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8241,
											"end": 8349,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 8241,
											"end": 8349,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8318,
											"end": 8342,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 8336,
											"end": 8341,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8318,
											"end": 8342,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 8318,
											"end": 8342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8318,
											"end": 8342,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 8318,
											"end": 8342,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8313,
											"end": 8316,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8306,
											"end": 8343,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8241,
											"end": 8349,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8241,
											"end": 8349,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8241,
											"end": 8349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8355,
											"end": 8534,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 8355,
											"end": 8534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8424,
											"end": 8434,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8445,
											"end": 8491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 8487,
											"end": 8490,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8479,
											"end": 8485,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8445,
											"end": 8491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 8445,
											"end": 8491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8445,
											"end": 8491,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 8445,
											"end": 8491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8523,
											"end": 8527,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8518,
											"end": 8521,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8514,
											"end": 8528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8500,
											"end": 8528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8500,
											"end": 8528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8355,
											"end": 8534,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8355,
											"end": 8534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8355,
											"end": 8534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8355,
											"end": 8534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8355,
											"end": 8534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8653,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 8540,
											"end": 8653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8610,
											"end": 8614,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8642,
											"end": 8646,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8637,
											"end": 8640,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8633,
											"end": 8647,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8625,
											"end": 8647,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8625,
											"end": 8647,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8653,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8653,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8653,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8689,
											"end": 9401,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 8689,
											"end": 9401,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8798,
											"end": 8801,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8827,
											"end": 8881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 8875,
											"end": 8880,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8827,
											"end": 8881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 8827,
											"end": 8881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8827,
											"end": 8881,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 8827,
											"end": 8881,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8897,
											"end": 8973,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 8966,
											"end": 8972,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8961,
											"end": 8964,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8897,
											"end": 8973,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 8897,
											"end": 8973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8897,
											"end": 8973,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 8897,
											"end": 8973,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8890,
											"end": 8973,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8890,
											"end": 8973,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8997,
											"end": 9053,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 9047,
											"end": 9052,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8997,
											"end": 9053,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 8997,
											"end": 9053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8997,
											"end": 9053,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 8997,
											"end": 9053,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9076,
											"end": 9083,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9107,
											"end": 9108,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9092,
											"end": 9376,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 9092,
											"end": 9376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9117,
											"end": 9123,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9114,
											"end": 9115,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9111,
											"end": 9124,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9092,
											"end": 9376,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9092,
											"end": 9376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 9092,
											"end": 9376,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9193,
											"end": 9199,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9187,
											"end": 9200,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9220,
											"end": 9283,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 9279,
											"end": 9282,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 9264,
											"end": 9277,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9220,
											"end": 9283,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 9220,
											"end": 9283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9220,
											"end": 9283,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 9220,
											"end": 9283,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9213,
											"end": 9283,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 9213,
											"end": 9283,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9306,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 9359,
											"end": 9365,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9306,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 9306,
											"end": 9366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9306,
											"end": 9366,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 9306,
											"end": 9366,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9296,
											"end": 9366,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9296,
											"end": 9366,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9152,
											"end": 9376,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9139,
											"end": 9140,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9136,
											"end": 9137,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9132,
											"end": 9141,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9127,
											"end": 9141,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9127,
											"end": 9141,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9092,
											"end": 9376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 9092,
											"end": 9376,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9092,
											"end": 9376,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 9092,
											"end": 9376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9096,
											"end": 9110,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9392,
											"end": 9395,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9385,
											"end": 9395,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9385,
											"end": 9395,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8803,
											"end": 9401,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8803,
											"end": 9401,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8803,
											"end": 9401,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8689,
											"end": 9401,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8689,
											"end": 9401,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8689,
											"end": 9401,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8689,
											"end": 9401,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8689,
											"end": 9401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9407,
											"end": 9566,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 9407,
											"end": 9566,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9481,
											"end": 9492,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9515,
											"end": 9521,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9513,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9522,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9555,
											"end": 9559,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9550,
											"end": 9553,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9546,
											"end": 9560,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9531,
											"end": 9560,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9531,
											"end": 9560,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9407,
											"end": 9566,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9407,
											"end": 9566,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9407,
											"end": 9566,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9407,
											"end": 9566,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9407,
											"end": 9566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9572,
											"end": 9929,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 9572,
											"end": 9929,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9650,
											"end": 9653,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9678,
											"end": 9717,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 9711,
											"end": 9716,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9678,
											"end": 9717,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 9678,
											"end": 9717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9678,
											"end": 9717,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 9678,
											"end": 9717,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9733,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 9787,
											"end": 9793,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9782,
											"end": 9785,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9733,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 9733,
											"end": 9794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9733,
											"end": 9794,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 9733,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9726,
											"end": 9794,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9726,
											"end": 9794,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9803,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 9861,
											"end": 9867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9856,
											"end": 9859,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9849,
											"end": 9853,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9842,
											"end": 9847,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9838,
											"end": 9854,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9803,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 9803,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9803,
											"end": 9868,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 9803,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9893,
											"end": 9922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 9915,
											"end": 9921,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9893,
											"end": 9922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 9893,
											"end": 9922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9893,
											"end": 9922,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 9893,
											"end": 9922,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9891,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9884,
											"end": 9923,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9877,
											"end": 9923,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9877,
											"end": 9923,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9654,
											"end": 9929,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9572,
											"end": 9929,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9572,
											"end": 9929,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9572,
											"end": 9929,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9572,
											"end": 9929,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9572,
											"end": 9929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9935,
											"end": 10043,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 9935,
											"end": 10043,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10012,
											"end": 10036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 10030,
											"end": 10035,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10012,
											"end": 10036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 10012,
											"end": 10036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10012,
											"end": 10036,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 10012,
											"end": 10036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10007,
											"end": 10010,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10000,
											"end": 10037,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9935,
											"end": 10043,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9935,
											"end": 10043,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9935,
											"end": 10043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10049,
											"end": 10148,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 10049,
											"end": 10148,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10120,
											"end": 10141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 10135,
											"end": 10140,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10120,
											"end": 10141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 10120,
											"end": 10141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10120,
											"end": 10141,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 10120,
											"end": 10141,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10115,
											"end": 10118,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10108,
											"end": 10142,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10049,
											"end": 10148,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10049,
											"end": 10148,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10049,
											"end": 10148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10240,
											"end": 12210,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 10240,
											"end": 12210,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10371,
											"end": 10374,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10407,
											"end": 10413,
											"name": "PUSH",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 10402,
											"end": 10405,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10498,
											"end": 10502,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10491,
											"end": 10496,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10487,
											"end": 10503,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10481,
											"end": 10504,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10551,
											"end": 10554,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10545,
											"end": 10549,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10541,
											"end": 10555,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10534,
											"end": 10538,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10529,
											"end": 10532,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10525,
											"end": 10539,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10518,
											"end": 10556,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10577,
											"end": 10680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 10675,
											"end": 10679,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10661,
											"end": 10673,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10577,
											"end": 10680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 10577,
											"end": 10680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10577,
											"end": 10680,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 10577,
											"end": 10680,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10569,
											"end": 10680,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10569,
											"end": 10680,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10424,
											"end": 10691,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10778,
											"end": 10782,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10771,
											"end": 10776,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10767,
											"end": 10783,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10761,
											"end": 10784,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10831,
											"end": 10834,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10825,
											"end": 10829,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10821,
											"end": 10835,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10814,
											"end": 10818,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10809,
											"end": 10812,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10805,
											"end": 10819,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10798,
											"end": 10836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10857,
											"end": 10930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 10925,
											"end": 10929,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10911,
											"end": 10923,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10857,
											"end": 10930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 10857,
											"end": 10930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10857,
											"end": 10930,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 10857,
											"end": 10930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10849,
											"end": 10930,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10849,
											"end": 10930,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10701,
											"end": 10941,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11025,
											"end": 11029,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11018,
											"end": 11023,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11014,
											"end": 11030,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11008,
											"end": 11031,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11044,
											"end": 11107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 11101,
											"end": 11105,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11096,
											"end": 11099,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11092,
											"end": 11106,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11078,
											"end": 11090,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11044,
											"end": 11107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 11044,
											"end": 11107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11044,
											"end": 11107,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 11044,
											"end": 11107,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10951,
											"end": 11117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11205,
											"end": 11209,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 11198,
											"end": 11203,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11194,
											"end": 11210,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11188,
											"end": 11211,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11224,
											"end": 11287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 11281,
											"end": 11285,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 11276,
											"end": 11279,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11272,
											"end": 11286,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11258,
											"end": 11270,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11224,
											"end": 11287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 11224,
											"end": 11287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11224,
											"end": 11287,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 11224,
											"end": 11287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11127,
											"end": 11297,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11383,
											"end": 11387,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 11376,
											"end": 11381,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11372,
											"end": 11388,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11402,
											"end": 11465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 11459,
											"end": 11463,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 11454,
											"end": 11457,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11450,
											"end": 11464,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11436,
											"end": 11448,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11402,
											"end": 11465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 11402,
											"end": 11465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11402,
											"end": 11465,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 11402,
											"end": 11465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11307,
											"end": 11475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11565,
											"end": 11569,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 11558,
											"end": 11563,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11554,
											"end": 11570,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11548,
											"end": 11571,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11584,
											"end": 11647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 11641,
											"end": 11645,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 11636,
											"end": 11639,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11632,
											"end": 11646,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11618,
											"end": 11630,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11584,
											"end": 11647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 11584,
											"end": 11647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11584,
											"end": 11647,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 11584,
											"end": 11647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11485,
											"end": 11657,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11747,
											"end": 11751,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 11740,
											"end": 11745,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11736,
											"end": 11752,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11730,
											"end": 11753,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11766,
											"end": 11829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 11823,
											"end": 11827,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 11818,
											"end": 11821,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11814,
											"end": 11828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11800,
											"end": 11812,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11766,
											"end": 11829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 11766,
											"end": 11829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11766,
											"end": 11829,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 11766,
											"end": 11829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11667,
											"end": 11839,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11923,
											"end": 11927,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 11916,
											"end": 11921,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11912,
											"end": 11928,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11906,
											"end": 11929,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11942,
											"end": 11999,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 11993,
											"end": 11997,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 11988,
											"end": 11991,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11984,
											"end": 11998,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11970,
											"end": 11982,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11942,
											"end": 11999,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 11942,
											"end": 11999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11942,
											"end": 11999,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 11942,
											"end": 11999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11849,
											"end": 12009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12093,
											"end": 12099,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 12086,
											"end": 12091,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12082,
											"end": 12100,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12076,
											"end": 12101,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12114,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 12165,
											"end": 12171,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 12160,
											"end": 12163,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 12156,
											"end": 12172,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12142,
											"end": 12154,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12114,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 12114,
											"end": 12173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12114,
											"end": 12173,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 12114,
											"end": 12173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12019,
											"end": 12183,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12200,
											"end": 12204,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12193,
											"end": 12204,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12193,
											"end": 12204,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10376,
											"end": 12210,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10240,
											"end": 12210,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10240,
											"end": 12210,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10240,
											"end": 12210,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10240,
											"end": 12210,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10240,
											"end": 12210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12216,
											"end": 12613,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 12216,
											"end": 12613,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12371,
											"end": 12375,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12409,
											"end": 12411,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12398,
											"end": 12407,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12394,
											"end": 12412,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12386,
											"end": 12412,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12386,
											"end": 12412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12458,
											"end": 12467,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12452,
											"end": 12456,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12448,
											"end": 12468,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12444,
											"end": 12445,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12433,
											"end": 12442,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12429,
											"end": 12446,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12422,
											"end": 12469,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12486,
											"end": 12606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 12601,
											"end": 12605,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12592,
											"end": 12598,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12486,
											"end": 12606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 12486,
											"end": 12606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12486,
											"end": 12606,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 12486,
											"end": 12606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12478,
											"end": 12606,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12478,
											"end": 12606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12216,
											"end": 12613,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12216,
											"end": 12613,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12216,
											"end": 12613,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12216,
											"end": 12613,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12216,
											"end": 12613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12619,
											"end": 13093,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 12619,
											"end": 13093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12687,
											"end": 12693,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12695,
											"end": 12701,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12744,
											"end": 12746,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12732,
											"end": 12741,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12723,
											"end": 12730,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12719,
											"end": 12742,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12715,
											"end": 12747,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 12712,
											"end": 12831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12712,
											"end": 12831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 12712,
											"end": 12831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12750,
											"end": 12829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 12750,
											"end": 12829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 12750,
											"end": 12829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12750,
											"end": 12829,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 12750,
											"end": 12829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12712,
											"end": 12831,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 12712,
											"end": 12831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12870,
											"end": 12871,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12895,
											"end": 12948,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 12940,
											"end": 12947,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12931,
											"end": 12937,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12920,
											"end": 12929,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 12916,
											"end": 12938,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12895,
											"end": 12948,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 12895,
											"end": 12948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12895,
											"end": 12948,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 12895,
											"end": 12948,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12885,
											"end": 12948,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12885,
											"end": 12948,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12841,
											"end": 12958,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12997,
											"end": 12999,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13023,
											"end": 13076,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 13068,
											"end": 13075,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13059,
											"end": 13065,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13048,
											"end": 13057,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 13044,
											"end": 13066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13023,
											"end": 13076,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 13023,
											"end": 13076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13023,
											"end": 13076,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 13023,
											"end": 13076,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13013,
											"end": 13076,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13013,
											"end": 13076,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12968,
											"end": 13086,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12619,
											"end": 13093,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12619,
											"end": 13093,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12619,
											"end": 13093,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12619,
											"end": 13093,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12619,
											"end": 13093,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12619,
											"end": 13093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13099,
											"end": 13279,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 13099,
											"end": 13279,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13147,
											"end": 13224,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13144,
											"end": 13145,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13137,
											"end": 13225,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13244,
											"end": 13248,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 13241,
											"end": 13242,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13234,
											"end": 13249,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13268,
											"end": 13272,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13265,
											"end": 13266,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13258,
											"end": 13273,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13285,
											"end": 13605,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 13285,
											"end": 13605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13329,
											"end": 13335,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13366,
											"end": 13367,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 13360,
											"end": 13364,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13356,
											"end": 13368,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 13346,
											"end": 13368,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13346,
											"end": 13368,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13413,
											"end": 13414,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 13407,
											"end": 13411,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13403,
											"end": 13415,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13434,
											"end": 13452,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13424,
											"end": 13505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 13424,
											"end": 13505,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13490,
											"end": 13494,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 13482,
											"end": 13488,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13478,
											"end": 13495,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13468,
											"end": 13495,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13468,
											"end": 13495,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13424,
											"end": 13505,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 13424,
											"end": 13505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13552,
											"end": 13554,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13544,
											"end": 13550,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13541,
											"end": 13555,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 13521,
											"end": 13539,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13518,
											"end": 13556,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13515,
											"end": 13599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 13515,
											"end": 13599,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13571,
											"end": 13589,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 13571,
											"end": 13589,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 13571,
											"end": 13589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13571,
											"end": 13589,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 13571,
											"end": 13589,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13515,
											"end": 13599,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 13515,
											"end": 13599,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13336,
											"end": 13605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13285,
											"end": 13605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13285,
											"end": 13605,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13285,
											"end": 13605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13285,
											"end": 13605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13611,
											"end": 13791,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 13611,
											"end": 13791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13659,
											"end": 13736,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13656,
											"end": 13657,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13649,
											"end": 13737,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13756,
											"end": 13760,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 13753,
											"end": 13754,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13746,
											"end": 13761,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13780,
											"end": 13784,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13777,
											"end": 13778,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13770,
											"end": 13785,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13797,
											"end": 13988,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 13797,
											"end": 13988,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13837,
											"end": 13840,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13856,
											"end": 13876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 13874,
											"end": 13875,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13856,
											"end": 13876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 13856,
											"end": 13876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13856,
											"end": 13876,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 13856,
											"end": 13876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13851,
											"end": 13876,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13851,
											"end": 13876,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13890,
											"end": 13910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 13908,
											"end": 13909,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13890,
											"end": 13910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 13890,
											"end": 13910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13890,
											"end": 13910,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 13890,
											"end": 13910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13885,
											"end": 13910,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13885,
											"end": 13910,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13933,
											"end": 13934,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13930,
											"end": 13931,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13926,
											"end": 13935,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13919,
											"end": 13935,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13919,
											"end": 13935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13954,
											"end": 13957,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13951,
											"end": 13952,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13948,
											"end": 13958,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 13945,
											"end": 13981,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13945,
											"end": 13981,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 13945,
											"end": 13981,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13961,
											"end": 13979,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 13961,
											"end": 13979,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 13961,
											"end": 13979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13961,
											"end": 13979,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 13961,
											"end": 13979,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13945,
											"end": 13981,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 13945,
											"end": 13981,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13797,
											"end": 13988,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13797,
											"end": 13988,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13797,
											"end": 13988,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13797,
											"end": 13988,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13797,
											"end": 13988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13994,
											"end": 14091,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 13994,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14053,
											"end": 14059,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14081,
											"end": 14084,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14071,
											"end": 14084,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14071,
											"end": 14084,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13994,
											"end": 14091,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13994,
											"end": 14091,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13994,
											"end": 14091,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13994,
											"end": 14091,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13994,
											"end": 14091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14097,
											"end": 14277,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 14097,
											"end": 14277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14145,
											"end": 14222,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14142,
											"end": 14143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14135,
											"end": 14223,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14242,
											"end": 14246,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 14239,
											"end": 14240,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 14232,
											"end": 14247,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14266,
											"end": 14270,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 14263,
											"end": 14264,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14256,
											"end": 14271,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 14283,
											"end": 14424,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 14283,
											"end": 14424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14332,
											"end": 14336,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14355,
											"end": 14358,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14347,
											"end": 14358,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14347,
											"end": 14358,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14378,
											"end": 14381,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14375,
											"end": 14376,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14368,
											"end": 14382,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14412,
											"end": 14416,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14409,
											"end": 14410,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14399,
											"end": 14417,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 14391,
											"end": 14417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14391,
											"end": 14417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14283,
											"end": 14424,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14283,
											"end": 14424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14283,
											"end": 14424,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14283,
											"end": 14424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14430,
											"end": 14523,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 14430,
											"end": 14523,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14467,
											"end": 14473,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14514,
											"end": 14516,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14509,
											"end": 14511,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 14502,
											"end": 14507,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14498,
											"end": 14512,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14494,
											"end": 14517,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 14484,
											"end": 14517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14484,
											"end": 14517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14430,
											"end": 14523,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14430,
											"end": 14523,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14430,
											"end": 14523,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14430,
											"end": 14523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14529,
											"end": 14636,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 14529,
											"end": 14636,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14573,
											"end": 14581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14623,
											"end": 14628,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14617,
											"end": 14621,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14613,
											"end": 14629,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 14592,
											"end": 14629,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14592,
											"end": 14629,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14529,
											"end": 14636,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14529,
											"end": 14636,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14529,
											"end": 14636,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14529,
											"end": 14636,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14529,
											"end": 14636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14642,
											"end": 15035,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 14642,
											"end": 15035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14711,
											"end": 14717,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14761,
											"end": 14762,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 14749,
											"end": 14759,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14745,
											"end": 14763,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 14784,
											"end": 14881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 14814,
											"end": 14880,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14803,
											"end": 14812,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14784,
											"end": 14881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 14784,
											"end": 14881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14784,
											"end": 14881,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 14784,
											"end": 14881,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14902,
											"end": 14941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 14932,
											"end": 14940,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 14921,
											"end": 14930,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14902,
											"end": 14941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 14902,
											"end": 14941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14902,
											"end": 14941,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 14902,
											"end": 14941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14890,
											"end": 14941,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 14890,
											"end": 14941,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14974,
											"end": 14978,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14970,
											"end": 14979,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 14963,
											"end": 14968,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14959,
											"end": 14980,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 14950,
											"end": 14980,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14950,
											"end": 14980,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15023,
											"end": 15027,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15013,
											"end": 15021,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 15009,
											"end": 15028,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15002,
											"end": 15007,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14999,
											"end": 15029,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 14989,
											"end": 15029,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14989,
											"end": 15029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14718,
											"end": 15035,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14718,
											"end": 15035,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14642,
											"end": 15035,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14642,
											"end": 15035,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14642,
											"end": 15035,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14642,
											"end": 15035,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14642,
											"end": 15035,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14642,
											"end": 15035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15041,
											"end": 15101,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 15041,
											"end": 15101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15069,
											"end": 15072,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15090,
											"end": 15095,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15083,
											"end": 15095,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15083,
											"end": 15095,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15041,
											"end": 15101,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15041,
											"end": 15101,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15041,
											"end": 15101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15041,
											"end": 15101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15107,
											"end": 15249,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 15107,
											"end": 15249,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15157,
											"end": 15166,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15190,
											"end": 15243,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 15208,
											"end": 15242,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 15217,
											"end": 15241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 15235,
											"end": 15240,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15217,
											"end": 15241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 15217,
											"end": 15241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15217,
											"end": 15241,
											"name": "tag",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 15217,
											"end": 15241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15208,
											"end": 15242,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 15208,
											"end": 15242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15208,
											"end": 15242,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 15208,
											"end": 15242,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15190,
											"end": 15243,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 15190,
											"end": 15243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15190,
											"end": 15243,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 15190,
											"end": 15243,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15177,
											"end": 15243,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15177,
											"end": 15243,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15107,
											"end": 15249,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15107,
											"end": 15249,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15107,
											"end": 15249,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15107,
											"end": 15249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15255,
											"end": 15330,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 15255,
											"end": 15330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15298,
											"end": 15301,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15319,
											"end": 15324,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15312,
											"end": 15324,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15312,
											"end": 15324,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15255,
											"end": 15330,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15255,
											"end": 15330,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15255,
											"end": 15330,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15255,
											"end": 15330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15336,
											"end": 15605,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 15336,
											"end": 15605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15446,
											"end": 15485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 15477,
											"end": 15484,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15446,
											"end": 15485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 15446,
											"end": 15485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15446,
											"end": 15485,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 15446,
											"end": 15485,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15507,
											"end": 15598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 15556,
											"end": 15597,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 15580,
											"end": 15596,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15556,
											"end": 15597,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 15556,
											"end": 15597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15556,
											"end": 15597,
											"name": "tag",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 15556,
											"end": 15597,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15548,
											"end": 15554,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15541,
											"end": 15545,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15535,
											"end": 15546,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 15507,
											"end": 15598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 15507,
											"end": 15598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15507,
											"end": 15598,
											"name": "tag",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 15507,
											"end": 15598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15501,
											"end": 15505,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15494,
											"end": 15599,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 15412,
											"end": 15605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15336,
											"end": 15605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15336,
											"end": 15605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15336,
											"end": 15605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15336,
											"end": 15605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15611,
											"end": 15684,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 15611,
											"end": 15684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15656,
											"end": 15659,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15611,
											"end": 15684,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15611,
											"end": 15684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15690,
											"end": 15879,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 15690,
											"end": 15879,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15767,
											"end": 15799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 15767,
											"end": 15799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 15767,
											"end": 15799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15767,
											"end": 15799,
											"name": "tag",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 15767,
											"end": 15799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15808,
											"end": 15873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 15866,
											"end": 15872,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15858,
											"end": 15864,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15852,
											"end": 15856,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15808,
											"end": 15873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 15808,
											"end": 15873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15808,
											"end": 15873,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 15808,
											"end": 15873,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15743,
											"end": 15879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15690,
											"end": 15879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15690,
											"end": 15879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15690,
											"end": 15879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15885,
											"end": 16071,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 15885,
											"end": 16071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15945,
											"end": 16065,
											"name": "tag",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 15945,
											"end": 16065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15962,
											"end": 15965,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15955,
											"end": 15960,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15952,
											"end": 15966,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 15945,
											"end": 16065,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15945,
											"end": 16065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 15945,
											"end": 16065,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16016,
											"end": 16055,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 16053,
											"end": 16054,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16046,
											"end": 16051,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16016,
											"end": 16055,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 16016,
											"end": 16055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16016,
											"end": 16055,
											"name": "tag",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 16016,
											"end": 16055,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15989,
											"end": 15990,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 15982,
											"end": 15987,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15978,
											"end": 15991,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15969,
											"end": 15991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15969,
											"end": 15991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15945,
											"end": 16065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 15945,
											"end": 16065,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15945,
											"end": 16065,
											"name": "tag",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 15945,
											"end": 16065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15885,
											"end": 16071,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15885,
											"end": 16071,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15885,
											"end": 16071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16620,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 16077,
											"end": 16620,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16178,
											"end": 16180,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 16173,
											"end": 16176,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16170,
											"end": 16181,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 16167,
											"end": 16613,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16167,
											"end": 16613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 16167,
											"end": 16613,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16212,
											"end": 16250,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 16244,
											"end": 16249,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16212,
											"end": 16250,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 16212,
											"end": 16250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16212,
											"end": 16250,
											"name": "tag",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 16212,
											"end": 16250,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16296,
											"end": 16325,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 16314,
											"end": 16324,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16296,
											"end": 16325,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 16296,
											"end": 16325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16296,
											"end": 16325,
											"name": "tag",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 16296,
											"end": 16325,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16286,
											"end": 16294,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16282,
											"end": 16326,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16479,
											"end": 16481,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16467,
											"end": 16477,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 16464,
											"end": 16482,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 16461,
											"end": 16510,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16461,
											"end": 16510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 16461,
											"end": 16510,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16500,
											"end": 16508,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16485,
											"end": 16508,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16485,
											"end": 16508,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16461,
											"end": 16510,
											"name": "tag",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 16461,
											"end": 16510,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16523,
											"end": 16603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 16579,
											"end": 16601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 16597,
											"end": 16600,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 16579,
											"end": 16601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 16579,
											"end": 16601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16579,
											"end": 16601,
											"name": "tag",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 16579,
											"end": 16601,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16569,
											"end": 16577,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16565,
											"end": 16602,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16552,
											"end": 16563,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16523,
											"end": 16603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 16523,
											"end": 16603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16523,
											"end": 16603,
											"name": "tag",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 16523,
											"end": 16603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16182,
											"end": 16613,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16182,
											"end": 16613,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16167,
											"end": 16613,
											"name": "tag",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 16167,
											"end": 16613,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16620,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16620,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16620,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16626,
											"end": 16743,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 16626,
											"end": 16743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16680,
											"end": 16688,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16730,
											"end": 16735,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16724,
											"end": 16728,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16720,
											"end": 16736,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 16699,
											"end": 16736,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16699,
											"end": 16736,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16626,
											"end": 16743,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16626,
											"end": 16743,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16626,
											"end": 16743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16626,
											"end": 16743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16626,
											"end": 16743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16749,
											"end": 16918,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 16749,
											"end": 16918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16793,
											"end": 16799,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16826,
											"end": 16877,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 16874,
											"end": 16875,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16870,
											"end": 16876,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 16862,
											"end": 16867,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16859,
											"end": 16860,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 16855,
											"end": 16868,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 16826,
											"end": 16877,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 16826,
											"end": 16877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16826,
											"end": 16877,
											"name": "tag",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 16826,
											"end": 16877,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16822,
											"end": 16878,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 16907,
											"end": 16911,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16901,
											"end": 16905,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16897,
											"end": 16912,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 16887,
											"end": 16912,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16887,
											"end": 16912,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16800,
											"end": 16918,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16749,
											"end": 16918,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16749,
											"end": 16918,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16749,
											"end": 16918,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16749,
											"end": 16918,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16749,
											"end": 16918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16923,
											"end": 17218,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 16923,
											"end": 17218,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16999,
											"end": 17003,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17145,
											"end": 17174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 17170,
											"end": 17173,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17164,
											"end": 17168,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17145,
											"end": 17174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 17145,
											"end": 17174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17145,
											"end": 17174,
											"name": "tag",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 17145,
											"end": 17174,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17137,
											"end": 17174,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17137,
											"end": 17174,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17207,
											"end": 17210,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17204,
											"end": 17205,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 17200,
											"end": 17211,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 17194,
											"end": 17198,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17191,
											"end": 17212,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 17183,
											"end": 17212,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17183,
											"end": 17212,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16923,
											"end": 17218,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16923,
											"end": 17218,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16923,
											"end": 17218,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16923,
											"end": 17218,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16923,
											"end": 17218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 18626,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 17223,
											"end": 18626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17347,
											"end": 17391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 17387,
											"end": 17390,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17382,
											"end": 17385,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17347,
											"end": 17391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 17347,
											"end": 17391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17347,
											"end": 17391,
											"name": "tag",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 17347,
											"end": 17391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17456,
											"end": 17474,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17448,
											"end": 17454,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17445,
											"end": 17475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 17442,
											"end": 17498,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17442,
											"end": 17498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 17442,
											"end": 17498,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17478,
											"end": 17496,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 17478,
											"end": 17496,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 17478,
											"end": 17496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17478,
											"end": 17496,
											"name": "tag",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 17478,
											"end": 17496,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17442,
											"end": 17498,
											"name": "tag",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 17442,
											"end": 17498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17522,
											"end": 17560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 17554,
											"end": 17558,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17548,
											"end": 17559,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 17522,
											"end": 17560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 17522,
											"end": 17560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17522,
											"end": 17560,
											"name": "tag",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 17522,
											"end": 17560,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17607,
											"end": 17674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 17667,
											"end": 17673,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17659,
											"end": 17665,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17653,
											"end": 17657,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17607,
											"end": 17674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 17607,
											"end": 17674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17607,
											"end": 17674,
											"name": "tag",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 17607,
											"end": 17674,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17701,
											"end": 17702,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17730,
											"end": 17732,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 17722,
											"end": 17728,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17719,
											"end": 17733,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 17747,
											"end": 17748,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 17742,
											"end": 18374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17742,
											"end": 18374,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 17742,
											"end": 18374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 17742,
											"end": 18374,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18418,
											"end": 18419,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18435,
											"end": 18441,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18432,
											"end": 18516,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18432,
											"end": 18516,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 18432,
											"end": 18516,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18491,
											"end": 18500,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18486,
											"end": 18489,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 18482,
											"end": 18501,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18469,
											"end": 18502,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 18460,
											"end": 18502,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18460,
											"end": 18502,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18432,
											"end": 18516,
											"name": "tag",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 18432,
											"end": 18516,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18542,
											"end": 18609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 18602,
											"end": 18608,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 18595,
											"end": 18600,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18542,
											"end": 18609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 18542,
											"end": 18609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18542,
											"end": 18609,
											"name": "tag",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 18542,
											"end": 18609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18536,
											"end": 18540,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 18529,
											"end": 18610,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 18391,
											"end": 18620,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17712,
											"end": 18620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 17712,
											"end": 18620,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17742,
											"end": 18374,
											"name": "tag",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 17742,
											"end": 18374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17794,
											"end": 17798,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 17790,
											"end": 17799,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 17782,
											"end": 17788,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17778,
											"end": 17800,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 17828,
											"end": 17865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 17860,
											"end": 17864,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 17828,
											"end": 17865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 17828,
											"end": 17865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17828,
											"end": 17865,
											"name": "tag",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 17828,
											"end": 17865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17887,
											"end": 17888,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17901,
											"end": 18116,
											"name": "tag",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 17901,
											"end": 18116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17915,
											"end": 17922,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17912,
											"end": 17913,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17909,
											"end": 17923,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 17901,
											"end": 18116,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17901,
											"end": 18116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 17901,
											"end": 18116,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18001,
											"end": 18010,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17996,
											"end": 17999,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 17992,
											"end": 18011,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17979,
											"end": 18012,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 17971,
											"end": 17977,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17964,
											"end": 18013,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 18052,
											"end": 18053,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 18044,
											"end": 18050,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18040,
											"end": 18054,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18030,
											"end": 18054,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18030,
											"end": 18054,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18099,
											"end": 18101,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18088,
											"end": 18097,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 18084,
											"end": 18102,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18071,
											"end": 18102,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 18071,
											"end": 18102,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17938,
											"end": 17942,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17935,
											"end": 17936,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17931,
											"end": 17943,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17926,
											"end": 17943,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17926,
											"end": 17943,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17901,
											"end": 18116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 17901,
											"end": 18116,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17901,
											"end": 18116,
											"name": "tag",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 17901,
											"end": 18116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18144,
											"end": 18150,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 18135,
											"end": 18142,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18132,
											"end": 18151,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 18129,
											"end": 18315,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18129,
											"end": 18315,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 18129,
											"end": 18315,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18209,
											"end": 18218,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18204,
											"end": 18207,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 18200,
											"end": 18219,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18187,
											"end": 18220,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 18252,
											"end": 18300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 18294,
											"end": 18298,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 18286,
											"end": 18292,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 18282,
											"end": 18299,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 18271,
											"end": 18280,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18252,
											"end": 18300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 18252,
											"end": 18300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18252,
											"end": 18300,
											"name": "tag",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 18252,
											"end": 18300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18244,
											"end": 18250,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18237,
											"end": 18301,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 18152,
											"end": 18315,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18129,
											"end": 18315,
											"name": "tag",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 18129,
											"end": 18315,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18361,
											"end": 18362,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 18357,
											"end": 18358,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 18349,
											"end": 18355,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 18345,
											"end": 18359,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 18341,
											"end": 18363,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18335,
											"end": 18339,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 18328,
											"end": 18364,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 17749,
											"end": 18374,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17749,
											"end": 18374,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17749,
											"end": 18374,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17712,
											"end": 18620,
											"name": "tag",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 17712,
											"end": 18620,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17712,
											"end": 18620,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17322,
											"end": 18626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17322,
											"end": 18626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17322,
											"end": 18626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 18626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 18626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 18626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 18626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18632,
											"end": 18826,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 18632,
											"end": 18826,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18672,
											"end": 18676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18692,
											"end": 18712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 18710,
											"end": 18711,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18692,
											"end": 18712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 18692,
											"end": 18712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18692,
											"end": 18712,
											"name": "tag",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 18692,
											"end": 18712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18687,
											"end": 18712,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18687,
											"end": 18712,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18726,
											"end": 18746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 18744,
											"end": 18745,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18726,
											"end": 18746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 18726,
											"end": 18746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18726,
											"end": 18746,
											"name": "tag",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 18726,
											"end": 18746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18721,
											"end": 18746,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18721,
											"end": 18746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18770,
											"end": 18771,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18767,
											"end": 18768,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18763,
											"end": 18772,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 18755,
											"end": 18772,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18755,
											"end": 18772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18794,
											"end": 18795,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18788,
											"end": 18792,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18785,
											"end": 18796,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 18782,
											"end": 18819,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18782,
											"end": 18819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 18782,
											"end": 18819,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18799,
											"end": 18817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 18799,
											"end": 18817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 18799,
											"end": 18817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18799,
											"end": 18817,
											"name": "tag",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 18799,
											"end": 18817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18782,
											"end": 18819,
											"name": "tag",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 18782,
											"end": 18819,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18632,
											"end": 18826,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18632,
											"end": 18826,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18632,
											"end": 18826,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18632,
											"end": 18826,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18632,
											"end": 18826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18832,
											"end": 19012,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 18832,
											"end": 19012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18880,
											"end": 18957,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18877,
											"end": 18878,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18870,
											"end": 18958,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18977,
											"end": 18981,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 18974,
											"end": 18975,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 18967,
											"end": 18982,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19001,
											"end": 19005,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 18998,
											"end": 18999,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18991,
											"end": 19006,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 19018,
											"end": 19198,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 19018,
											"end": 19198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19066,
											"end": 19143,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19063,
											"end": 19064,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19056,
											"end": 19144,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19163,
											"end": 19167,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 19160,
											"end": 19161,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 19153,
											"end": 19168,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19187,
											"end": 19191,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 19184,
											"end": 19185,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19177,
											"end": 19192,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 19204,
											"end": 19322,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 19204,
											"end": 19322,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19291,
											"end": 19315,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 19309,
											"end": 19314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19291,
											"end": 19315,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 19291,
											"end": 19315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19291,
											"end": 19315,
											"name": "tag",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 19291,
											"end": 19315,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19286,
											"end": 19289,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19279,
											"end": 19316,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19204,
											"end": 19322,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19204,
											"end": 19322,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19204,
											"end": 19322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19328,
											"end": 19770,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 19328,
											"end": 19770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19477,
											"end": 19481,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19515,
											"end": 19517,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 19504,
											"end": 19513,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19500,
											"end": 19518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19492,
											"end": 19518,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19492,
											"end": 19518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19528,
											"end": 19599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 19596,
											"end": 19597,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19585,
											"end": 19594,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19581,
											"end": 19598,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19572,
											"end": 19578,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 19528,
											"end": 19599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 19528,
											"end": 19599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19528,
											"end": 19599,
											"name": "tag",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 19528,
											"end": 19599,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19609,
											"end": 19681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 19677,
											"end": 19679,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19666,
											"end": 19675,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19662,
											"end": 19680,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19653,
											"end": 19659,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19609,
											"end": 19681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 19609,
											"end": 19681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19609,
											"end": 19681,
											"name": "tag",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 19609,
											"end": 19681,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19691,
											"end": 19763,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 19759,
											"end": 19761,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 19748,
											"end": 19757,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19744,
											"end": 19762,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19735,
											"end": 19741,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19691,
											"end": 19763,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 19691,
											"end": 19763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19691,
											"end": 19763,
											"name": "tag",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 19691,
											"end": 19763,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19328,
											"end": 19770,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 19328,
											"end": 19770,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 19328,
											"end": 19770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19328,
											"end": 19770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19328,
											"end": 19770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19328,
											"end": 19770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19328,
											"end": 19770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19776,
											"end": 19998,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 19776,
											"end": 19998,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19869,
											"end": 19873,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19907,
											"end": 19909,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19896,
											"end": 19905,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19892,
											"end": 19910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19884,
											"end": 19910,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19884,
											"end": 19910,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19920,
											"end": 19991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 19988,
											"end": 19989,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19977,
											"end": 19986,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19973,
											"end": 19990,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19964,
											"end": 19970,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19920,
											"end": 19991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 19920,
											"end": 19991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19920,
											"end": 19991,
											"name": "tag",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 19920,
											"end": 19991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19776,
											"end": 19998,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19776,
											"end": 19998,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19776,
											"end": 19998,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19776,
											"end": 19998,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19776,
											"end": 19998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"12_ERC-20 Tokens.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"claim()": "4e71d92d",
							"claimAmount()": "830953ab",
							"createIssue(string,uint256)": "8615d855",
							"decimals()": "313ce567",
							"getIssue(uint256)": "976b3113",
							"maxSupply()": "d5abeb01",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"tokensClaimed(address)": "624601b6",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"vote(uint256,uint8)": "943e8216"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AllTokensClaimed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyVoted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoTokensHeld\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QuorumTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokensClaimed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingClosed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_issueDesc\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_quorum\",\"type\":\"uint256\"}],\"name\":\"createIssue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_issueId\",\"type\":\"uint256\"}],\"name\":\"getIssue\",\"outputs\":[{\"components\":[{\"internalType\":\"address[]\",\"name\":\"voters\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"issueDesc\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quorum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAbstain\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"passed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"closed\",\"type\":\"bool\"}],\"internalType\":\"struct WeightedVoting.SerializedIssue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokensClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_issueId\",\"type\":\"uint256\"},{\"internalType\":\"enum WeightedVoting.Vote\",\"name\":\"_vote\",\"type\":\"uint8\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"12_ERC-20 Tokens.sol\":\"WeightedVoting\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"12_ERC-20 Tokens.sol\":{\"keccak256\":\"0xb33f4ea7f378ba533dddfc57cdc5cdb37247fc1bd2f5866a634f030797fd8b04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38bf31653c1baf15d4d83a3bc2e82adf1907fd03a5685c5830751192b6a3448b\",\"dweb:/ipfs/QmVDsnuPshvKZza7FsLmeTJWfYSkqG8VXRnt3SW5r2R264\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 514,
								"contract": "12_ERC-20 Tokens.sol:WeightedVoting",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 520,
								"contract": "12_ERC-20 Tokens.sol:WeightedVoting",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 522,
								"contract": "12_ERC-20 Tokens.sol:WeightedVoting",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 524,
								"contract": "12_ERC-20 Tokens.sol:WeightedVoting",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 526,
								"contract": "12_ERC-20 Tokens.sol:WeightedVoting",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "12_ERC-20 Tokens.sol:WeightedVoting",
								"label": "salt",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 72,
								"contract": "12_ERC-20 Tokens.sol:WeightedVoting",
								"label": "issues",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_struct(Issue)44_storage)dyn_storage"
							},
							{
								"astId": 76,
								"contract": "12_ERC-20 Tokens.sol:WeightedVoting",
								"label": "tokensClaimed",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 79,
								"contract": "12_ERC-20 Tokens.sol:WeightedVoting",
								"label": "maxSupply",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 82,
								"contract": "12_ERC-20 Tokens.sol:WeightedVoting",
								"label": "claimAmount",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 85,
								"contract": "12_ERC-20 Tokens.sol:WeightedVoting",
								"label": "saltt",
								"offset": 0,
								"slot": "10",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Issue)44_storage)dyn_storage": {
								"base": "t_struct(Issue)44_storage",
								"encoding": "dynamic_array",
								"label": "struct WeightedVoting.Issue[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AddressSet)1466_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 1465,
										"contract": "12_ERC-20 Tokens.sol:WeightedVoting",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)1151_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Issue)44_storage": {
								"encoding": "inplace",
								"label": "struct WeightedVoting.Issue",
								"members": [
									{
										"astId": 27,
										"contract": "12_ERC-20 Tokens.sol:WeightedVoting",
										"label": "voters",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(AddressSet)1466_storage"
									},
									{
										"astId": 29,
										"contract": "12_ERC-20 Tokens.sol:WeightedVoting",
										"label": "issueDesc",
										"offset": 0,
										"slot": "2",
										"type": "t_string_storage"
									},
									{
										"astId": 31,
										"contract": "12_ERC-20 Tokens.sol:WeightedVoting",
										"label": "quorum",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 33,
										"contract": "12_ERC-20 Tokens.sol:WeightedVoting",
										"label": "totalVotes",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 35,
										"contract": "12_ERC-20 Tokens.sol:WeightedVoting",
										"label": "votesFor",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 37,
										"contract": "12_ERC-20 Tokens.sol:WeightedVoting",
										"label": "votesAgainst",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 39,
										"contract": "12_ERC-20 Tokens.sol:WeightedVoting",
										"label": "votesAbstain",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 41,
										"contract": "12_ERC-20 Tokens.sol:WeightedVoting",
										"label": "passed",
										"offset": 0,
										"slot": "8",
										"type": "t_bool"
									},
									{
										"astId": 43,
										"contract": "12_ERC-20 Tokens.sol:WeightedVoting",
										"label": "closed",
										"offset": 1,
										"slot": "8",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(Set)1151_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 1146,
										"contract": "12_ERC-20 Tokens.sol:WeightedVoting",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 1150,
										"contract": "12_ERC-20 Tokens.sol:WeightedVoting",
										"label": "_positions",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 514,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 520,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 522,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 524,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 526,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1330:12970  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1330:12970  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201aef9f521eb249c0e85b4522390a93a5261b75e8cd9df030d9dcd26c7d89cde864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201aef9f521eb249c0e85b4522390a93a5261b75e8cd9df030d9dcd26c7d89cde864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xEF SWAP16 MSTORE 0x1E 0xB2 BLOBHASH 0xC0 0xE8 JUMPDEST GASLIMIT 0x22 CODECOPY EXP SWAP4 0xA5 0x26 SHL PUSH22 0xE8CD9DF030D9DCD26C7D89CDE864736F6C634300081A STOP CALLER ",
							"sourceMap": "1330:11640:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201aef9f521eb249c0e85b4522390a93a5261b75e8cd9df030d9dcd26c7d89cde864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xEF SWAP16 MSTORE 0x1E 0xB2 BLOBHASH 0xC0 0xE8 JUMPDEST GASLIMIT 0x22 CODECOPY EXP SWAP4 0xA5 0x26 SHL PUSH22 0xE8CD9DF030D9DCD26C7D89CDE864736F6C634300081A STOP CALLER ",
							"sourceMap": "1330:11640:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201aef9f521eb249c0e85b4522390a93a5261b75e8cd9df030d9dcd26c7d89cde864736f6c634300081a0033",
									".code": [
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"12_ERC-20 Tokens.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"12_ERC-20 Tokens.sol": {
				"ast": {
					"absolutePath": "12_ERC-20 Tokens.sol",
					"exportedSymbols": {
						"Context": [
							1140
						],
						"ERC20": [
							1006
						],
						"EnumerableSet": [
							1753
						],
						"IERC20": [
							1084
						],
						"IERC20Errors": [
							396
						],
						"IERC20Metadata": [
							1110
						],
						"WeightedVoting": [
							354
						]
					},
					"id": 355,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 355,
							"sourceUnit": 1007,
							"src": "66:55:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 355,
							"sourceUnit": 1754,
							"src": "122:65:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "ERC20",
										"nameLocations": [
											"216:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1006,
										"src": "216:5:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "216:5:0"
								}
							],
							"canonicalName": "WeightedVoting",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 354,
							"linearizedBaseContracts": [
								354,
								1006,
								396,
								1110,
								1084,
								1140
							],
							"name": "WeightedVoting",
							"nameLocation": "198:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "salt",
									"nameLocation": "243:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 354,
									"src": "228:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 6,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "228:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "76616c7565",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "250:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_81afeeaff0ed5cee7d05a21078399c2f56226b0cd5657062500cef4c4e736f85",
											"typeString": "literal_string \"value\""
										},
										"value": "value"
									},
									"visibility": "private"
								},
								{
									"global": false,
									"id": 12,
									"libraryName": {
										"id": 9,
										"name": "EnumerableSet",
										"nameLocations": [
											"270:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1753,
										"src": "270:13:0"
									},
									"nodeType": "UsingForDirective",
									"src": "264:49:0",
									"typeName": {
										"id": 11,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 10,
											"name": "EnumerableSet.AddressSet",
											"nameLocations": [
												"288:13:0",
												"302:10:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1466,
											"src": "288:24:0"
										},
										"referencedDeclaration": 1466,
										"src": "288:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$1466_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"errorSelector": "0b1327a6",
									"id": 14,
									"name": "TokensClaimed",
									"nameLocation": "325:13:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "338:2:0"
									},
									"src": "319:22:0"
								},
								{
									"errorSelector": "cbe24831",
									"id": 16,
									"name": "AllTokensClaimed",
									"nameLocation": "353:16:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "369:2:0"
									},
									"src": "347:25:0"
								},
								{
									"errorSelector": "8439960d",
									"id": 18,
									"name": "NoTokensHeld",
									"nameLocation": "384:12:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "396:2:0"
									},
									"src": "378:21:0"
								},
								{
									"errorSelector": "0d927300",
									"id": 20,
									"name": "QuorumTooHigh",
									"nameLocation": "411:13:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:0"
									},
									"src": "405:22:0"
								},
								{
									"errorSelector": "7c9a1cf9",
									"id": 22,
									"name": "AlreadyVoted",
									"nameLocation": "439:12:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "451:2:0"
									},
									"src": "433:21:0"
								},
								{
									"errorSelector": "66b6cb4a",
									"id": 24,
									"name": "VotingClosed",
									"nameLocation": "466:12:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "478:2:0"
									},
									"src": "460:21:0"
								},
								{
									"canonicalName": "WeightedVoting.Issue",
									"id": 44,
									"members": [
										{
											"constant": false,
											"id": 27,
											"mutability": "mutable",
											"name": "voters",
											"nameLocation": "536:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 44,
											"src": "511:31:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressSet_$1466_storage_ptr",
												"typeString": "struct EnumerableSet.AddressSet"
											},
											"typeName": {
												"id": 26,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 25,
													"name": "EnumerableSet.AddressSet",
													"nameLocations": [
														"511:13:0",
														"525:10:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1466,
													"src": "511:24:0"
												},
												"referencedDeclaration": 1466,
												"src": "511:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1466_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 29,
											"mutability": "mutable",
											"name": "issueDesc",
											"nameLocation": "576:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 44,
											"src": "569:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 28,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "569:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 31,
											"mutability": "mutable",
											"name": "quorum",
											"nameLocation": "631:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 44,
											"src": "623:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 30,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "623:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 33,
											"mutability": "mutable",
											"name": "totalVotes",
											"nameLocation": "693:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 44,
											"src": "685:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 32,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "685:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 35,
											"mutability": "mutable",
											"name": "votesFor",
											"nameLocation": "753:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 44,
											"src": "745:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 34,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "745:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 37,
											"mutability": "mutable",
											"name": "votesAgainst",
											"nameLocation": "813:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 44,
											"src": "805:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 36,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "805:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 39,
											"mutability": "mutable",
											"name": "votesAbstain",
											"nameLocation": "876:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 44,
											"src": "868:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 38,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "868:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 41,
											"mutability": "mutable",
											"name": "passed",
											"nameLocation": "938:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 44,
											"src": "933:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 40,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "933:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 43,
											"mutability": "mutable",
											"name": "closed",
											"nameLocation": "998:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 44,
											"src": "993:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 42,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "993:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Issue",
									"nameLocation": "495:5:0",
									"nodeType": "StructDefinition",
									"scope": 354,
									"src": "488:565:0",
									"visibility": "public"
								},
								{
									"canonicalName": "WeightedVoting.SerializedIssue",
									"id": 64,
									"members": [
										{
											"constant": false,
											"id": 47,
											"mutability": "mutable",
											"name": "voters",
											"nameLocation": "1102:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 64,
											"src": "1092:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1092:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 46,
												"nodeType": "ArrayTypeName",
												"src": "1092:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 49,
											"mutability": "mutable",
											"name": "issueDesc",
											"nameLocation": "1144:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 64,
											"src": "1137:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 48,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1137:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 51,
											"mutability": "mutable",
											"name": "quorum",
											"nameLocation": "1199:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 64,
											"src": "1191:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 50,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1191:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 53,
											"mutability": "mutable",
											"name": "totalVotes",
											"nameLocation": "1261:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 64,
											"src": "1253:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 52,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1253:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 55,
											"mutability": "mutable",
											"name": "votesFor",
											"nameLocation": "1321:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 64,
											"src": "1313:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 54,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1313:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 57,
											"mutability": "mutable",
											"name": "votesAgainst",
											"nameLocation": "1381:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 64,
											"src": "1373:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 56,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1373:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 59,
											"mutability": "mutable",
											"name": "votesAbstain",
											"nameLocation": "1444:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 64,
											"src": "1436:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 58,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1436:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 61,
											"mutability": "mutable",
											"name": "passed",
											"nameLocation": "1506:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 64,
											"src": "1501:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 60,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1501:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 63,
											"mutability": "mutable",
											"name": "closed",
											"nameLocation": "1566:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 64,
											"src": "1561:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 62,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1561:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SerializedIssue",
									"nameLocation": "1066:15:0",
									"nodeType": "StructDefinition",
									"scope": 354,
									"src": "1059:562:0",
									"visibility": "public"
								},
								{
									"canonicalName": "WeightedVoting.Vote",
									"id": 68,
									"members": [
										{
											"id": 65,
											"name": "AGAINST",
											"nameLocation": "1647:7:0",
											"nodeType": "EnumValue",
											"src": "1647:7:0"
										},
										{
											"id": 66,
											"name": "FOR",
											"nameLocation": "1664:3:0",
											"nodeType": "EnumValue",
											"src": "1664:3:0"
										},
										{
											"id": 67,
											"name": "ABSTAIN",
											"nameLocation": "1677:7:0",
											"nodeType": "EnumValue",
											"src": "1677:7:0"
										}
									],
									"name": "Vote",
									"nameLocation": "1632:4:0",
									"nodeType": "EnumDefinition",
									"src": "1627:63:0"
								},
								{
									"constant": false,
									"id": 72,
									"mutability": "mutable",
									"name": "issues",
									"nameLocation": "1713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 354,
									"src": "1696:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Issue_$44_storage_$dyn_storage",
										"typeString": "struct WeightedVoting.Issue[]"
									},
									"typeName": {
										"baseType": {
											"id": 70,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 69,
												"name": "Issue",
												"nameLocations": [
													"1696:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 44,
												"src": "1696:5:0"
											},
											"referencedDeclaration": 44,
											"src": "1696:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Issue_$44_storage_ptr",
												"typeString": "struct WeightedVoting.Issue"
											}
										},
										"id": 71,
										"nodeType": "ArrayTypeName",
										"src": "1696:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Issue_$44_storage_$dyn_storage_ptr",
											"typeString": "struct WeightedVoting.Issue[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "624601b6",
									"id": 76,
									"mutability": "mutable",
									"name": "tokensClaimed",
									"nameLocation": "1758:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 354,
									"src": "1726:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 75,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 73,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1734:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1726:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 74,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1745:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d5abeb01",
									"id": 79,
									"mutability": "mutable",
									"name": "maxSupply",
									"nameLocation": "1793:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 354,
									"src": "1778:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 77,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1778:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030303030",
										"id": 78,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1805:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000_by_1",
											"typeString": "int_const 1000000"
										},
										"value": "1000000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "830953ab",
									"id": 82,
									"mutability": "mutable",
									"name": "claimAmount",
									"nameLocation": "1861:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 354,
									"src": "1846:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 80,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1846:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 81,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1875:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 85,
									"mutability": "mutable",
									"name": "saltt",
									"nameLocation": "1926:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 354,
									"src": "1919:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 83,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1919:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "616e79",
										"id": 84,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1934:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_fb79856d4be6e4152983d8f934d820ec61c255bb7f1581914e7da0f335bdbf33",
											"typeString": "literal_string \"any\""
										},
										"value": "any"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "2063:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 96,
															"name": "issues",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "2073:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Issue_$44_storage_$dyn_storage",
																"typeString": "struct WeightedVoting.Issue storage ref[] storage ref"
															}
														},
														"id": 98,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2080:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2073:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Issue_$44_storage_$dyn_storage_ptr_$returns$_t_struct$_Issue_$44_storage_$attached_to$_t_array$_t_struct$_Issue_$44_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct WeightedVoting.Issue storage ref[] storage pointer) returns (struct WeightedVoting.Issue storage ref)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2073:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Issue_$44_storage",
														"typeString": "struct WeightedVoting.Issue storage ref"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "2073:13:0"
											}
										]
									},
									"id": 102,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 92,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 87,
													"src": "2043:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 93,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 89,
													"src": "2050:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 94,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 91,
												"name": "ERC20",
												"nameLocations": [
													"2037:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1006,
												"src": "2037:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2037:21:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "1999:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1985:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 86,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1985:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "2020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "2006:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 88,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2006:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1984:44:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2063:0:0"
									},
									"scope": 354,
									"src": "1973:168:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "2171:450:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 105,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "2234:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2234:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 107,
															"name": "claimAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "2250:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2234:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 109,
														"name": "maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "2264:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2234:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 115,
												"nodeType": "IfStatement",
												"src": "2230:95:0",
												"trueBody": {
													"id": 114,
													"nodeType": "Block",
													"src": "2275:50:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 111,
																	"name": "AllTokensClaimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "2296:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2296:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 113,
															"nodeType": "RevertStatement",
															"src": "2289:25:0"
														}
													]
												}
											},
											{
												"condition": {
													"baseExpression": {
														"id": 116,
														"name": "tokensClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "2396:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 119,
													"indexExpression": {
														"expression": {
															"id": 117,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2410:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2414:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2410:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2396:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 124,
												"nodeType": "IfStatement",
												"src": "2392:78:0",
												"trueBody": {
													"id": 123,
													"nodeType": "Block",
													"src": "2423:47:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 120,
																	"name": "TokensClaimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "2444:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2444:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 122,
															"nodeType": "RevertStatement",
															"src": "2437:22:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 126,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2522:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2526:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2522:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 128,
															"name": "claimAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "2534:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 125,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "2516:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2516:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "2516:30:0"
											},
											{
												"expression": {
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 131,
															"name": "tokensClaimed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "2556:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 134,
														"indexExpression": {
															"expression": {
																"id": 132,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2570:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2574:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2570:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2556:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2584:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2556:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "2556:32:0"
											}
										]
									},
									"functionSelector": "4e71d92d",
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "2156:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2161:2:0"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2171:0:0"
									},
									"scope": 354,
									"src": "2147:474:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "2740:499:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 149,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2812:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2816:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2812:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 148,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "2802:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2802:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2827:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2802:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "2798:78:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "2830:46:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 154,
																	"name": "NoTokensHeld",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2851:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2851:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "2844:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 159,
														"name": "_quorum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "2958:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 160,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "2968:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2968:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2958:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 167,
												"nodeType": "IfStatement",
												"src": "2954:76:0",
												"trueBody": {
													"id": 166,
													"nodeType": "Block",
													"src": "2983:47:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 163,
																	"name": "QuorumTooHigh",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "3004:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3004:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 165,
															"nodeType": "RevertStatement",
															"src": "2997:22:0"
														}
													]
												}
											},
											{
												"assignments": [
													170
												],
												"declarations": [
													{
														"constant": false,
														"id": 170,
														"mutability": "mutable",
														"name": "_issue",
														"nameLocation": "3104:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3090:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Issue_$44_storage_ptr",
															"typeString": "struct WeightedVoting.Issue"
														},
														"typeName": {
															"id": 169,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 168,
																"name": "Issue",
																"nameLocations": [
																	"3090:5:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 44,
																"src": "3090:5:0"
															},
															"referencedDeclaration": 44,
															"src": "3090:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Issue_$44_storage_ptr",
																"typeString": "struct WeightedVoting.Issue"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 174,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 171,
															"name": "issues",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "3113:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Issue_$44_storage_$dyn_storage",
																"typeString": "struct WeightedVoting.Issue storage ref[] storage ref"
															}
														},
														"id": 172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3120:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3113:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Issue_$44_storage_$dyn_storage_ptr_$returns$_t_struct$_Issue_$44_storage_$attached_to$_t_array$_t_struct$_Issue_$44_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct WeightedVoting.Issue storage ref[] storage pointer) returns (struct WeightedVoting.Issue storage ref)"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3113:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Issue_$44_storage",
														"typeString": "struct WeightedVoting.Issue storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3090:36:0"
											},
											{
												"expression": {
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 175,
															"name": "_issue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "3136:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Issue_$44_storage_ptr",
																"typeString": "struct WeightedVoting.Issue storage pointer"
															}
														},
														"id": 177,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3143:9:0",
														"memberName": "issueDesc",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 29,
														"src": "3136:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 178,
														"name": "_issueDesc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "3155:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_calldata_ptr",
															"typeString": "string calldata"
														}
													},
													"src": "3136:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "3136:29:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "_issue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "3175:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Issue_$44_storage_ptr",
																"typeString": "struct WeightedVoting.Issue storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3182:6:0",
														"memberName": "quorum",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 31,
														"src": "3175:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "_quorum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "3191:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3175:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3175:23:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 187,
															"name": "issues",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "3215:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Issue_$44_storage_$dyn_storage",
																"typeString": "struct WeightedVoting.Issue storage ref[] storage ref"
															}
														},
														"id": 188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3222:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3215:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 189,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3231:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3215:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 147,
												"id": 191,
												"nodeType": "Return",
												"src": "3208:24:0"
											}
										]
									},
									"functionSelector": "8615d855",
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createIssue",
									"nameLocation": "2636:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "_issueDesc",
												"nameLocation": "2664:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "2648:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 140,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2648:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "_quorum",
												"nameLocation": "2684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "2676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2676:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:45:0"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "2727:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:9:0"
									},
									"scope": 354,
									"src": "2627:612:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "3356:518:0",
										"statements": [
											{
												"assignments": [
													203
												],
												"declarations": [
													{
														"constant": false,
														"id": 203,
														"mutability": "mutable",
														"name": "_issue",
														"nameLocation": "3380:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 231,
														"src": "3366:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Issue_$44_storage_ptr",
															"typeString": "struct WeightedVoting.Issue"
														},
														"typeName": {
															"id": 202,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 201,
																"name": "Issue",
																"nameLocations": [
																	"3366:5:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 44,
																"src": "3366:5:0"
															},
															"referencedDeclaration": 44,
															"src": "3366:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Issue_$44_storage_ptr",
																"typeString": "struct WeightedVoting.Issue"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 207,
												"initialValue": {
													"baseExpression": {
														"id": 204,
														"name": "issues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "3389:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Issue_$44_storage_$dyn_storage",
															"typeString": "struct WeightedVoting.Issue storage ref[] storage ref"
														}
													},
													"id": 206,
													"indexExpression": {
														"id": 205,
														"name": "_issueId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3396:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3389:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Issue_$44_storage",
														"typeString": "struct WeightedVoting.Issue storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3366:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"expression": {
																		"id": 209,
																		"name": "_issue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 203,
																		"src": "3476:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Issue_$44_storage_ptr",
																			"typeString": "struct WeightedVoting.Issue storage pointer"
																		}
																	},
																	"id": 210,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3483:6:0",
																	"memberName": "voters",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 27,
																	"src": "3476:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressSet_$1466_storage",
																		"typeString": "struct EnumerableSet.AddressSet storage ref"
																	}
																},
																"id": 211,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3490:6:0",
																"memberName": "values",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1619,
																"src": "3476:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1466_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressSet_$1466_storage_ptr_$",
																	"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"
																}
															},
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3476:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"expression": {
																"id": 213,
																"name": "_issue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "3527:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Issue_$44_storage_ptr",
																	"typeString": "struct WeightedVoting.Issue storage pointer"
																}
															},
															"id": 214,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3534:9:0",
															"memberName": "issueDesc",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 29,
															"src": "3527:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														},
														{
															"expression": {
																"id": 215,
																"name": "_issue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "3569:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Issue_$44_storage_ptr",
																	"typeString": "struct WeightedVoting.Issue storage pointer"
																}
															},
															"id": 216,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3576:6:0",
															"memberName": "quorum",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 31,
															"src": "3569:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 217,
																"name": "_issue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "3612:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Issue_$44_storage_ptr",
																	"typeString": "struct WeightedVoting.Issue storage pointer"
																}
															},
															"id": 218,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3619:10:0",
															"memberName": "totalVotes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 33,
															"src": "3612:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 219,
																"name": "_issue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "3657:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Issue_$44_storage_ptr",
																	"typeString": "struct WeightedVoting.Issue storage pointer"
																}
															},
															"id": 220,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3664:8:0",
															"memberName": "votesFor",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 35,
															"src": "3657:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 221,
																"name": "_issue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "3704:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Issue_$44_storage_ptr",
																	"typeString": "struct WeightedVoting.Issue storage pointer"
																}
															},
															"id": 222,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3711:12:0",
															"memberName": "votesAgainst",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 37,
															"src": "3704:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 223,
																"name": "_issue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "3755:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Issue_$44_storage_ptr",
																	"typeString": "struct WeightedVoting.Issue storage pointer"
																}
															},
															"id": 224,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3762:12:0",
															"memberName": "votesAbstain",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 39,
															"src": "3755:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 225,
																"name": "_issue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "3800:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Issue_$44_storage_ptr",
																	"typeString": "struct WeightedVoting.Issue storage pointer"
																}
															},
															"id": 226,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3807:6:0",
															"memberName": "passed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 41,
															"src": "3800:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 227,
																"name": "_issue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "3839:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Issue_$44_storage_ptr",
																	"typeString": "struct WeightedVoting.Issue storage pointer"
																}
															},
															"id": 228,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3846:6:0",
															"memberName": "closed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 43,
															"src": "3839:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 208,
														"name": "SerializedIssue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "3434:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_SerializedIssue_$64_storage_ptr_$",
															"typeString": "type(struct WeightedVoting.SerializedIssue storage pointer)"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"3468:6:0",
														"3516:9:0",
														"3561:6:0",
														"3600:10:0",
														"3647:8:0",
														"3690:12:0",
														"3741:12:0",
														"3792:6:0",
														"3831:6:0"
													],
													"names": [
														"voters",
														"issueDesc",
														"quorum",
														"totalVotes",
														"votesFor",
														"votesAgainst",
														"votesAbstain",
														"passed",
														"closed"
													],
													"nodeType": "FunctionCall",
													"src": "3434:433:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SerializedIssue_$64_memory_ptr",
														"typeString": "struct WeightedVoting.SerializedIssue memory"
													}
												},
												"functionReturnParameters": 200,
												"id": 230,
												"nodeType": "Return",
												"src": "3415:452:0"
											}
										]
									},
									"functionSelector": "976b3113",
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getIssue",
									"nameLocation": "3254:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "_issueId",
												"nameLocation": "3271:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "3263:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3263:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3262:18:0"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "3328:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SerializedIssue_$64_memory_ptr",
													"typeString": "struct WeightedVoting.SerializedIssue"
												},
												"typeName": {
													"id": 198,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 197,
														"name": "SerializedIssue",
														"nameLocations": [
															"3328:15:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 64,
														"src": "3328:15:0"
													},
													"referencedDeclaration": 64,
													"src": "3328:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SerializedIssue_$64_storage_ptr",
														"typeString": "struct WeightedVoting.SerializedIssue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3327:24:0"
									},
									"scope": 354,
									"src": "3245:629:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "3931:911:0",
										"statements": [
											{
												"assignments": [
													242
												],
												"declarations": [
													{
														"constant": false,
														"id": 242,
														"mutability": "mutable",
														"name": "_issue",
														"nameLocation": "3955:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 352,
														"src": "3941:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Issue_$44_storage_ptr",
															"typeString": "struct WeightedVoting.Issue"
														},
														"typeName": {
															"id": 241,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 240,
																"name": "Issue",
																"nameLocations": [
																	"3941:5:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 44,
																"src": "3941:5:0"
															},
															"referencedDeclaration": 44,
															"src": "3941:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Issue_$44_storage_ptr",
																"typeString": "struct WeightedVoting.Issue"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"baseExpression": {
														"id": 243,
														"name": "issues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "3964:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Issue_$44_storage_$dyn_storage",
															"typeString": "struct WeightedVoting.Issue storage ref[] storage ref"
														}
													},
													"id": 245,
													"indexExpression": {
														"id": 244,
														"name": "_issueId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "3971:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3964:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Issue_$44_storage",
														"typeString": "struct WeightedVoting.Issue storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3941:39:0"
											},
											{
												"condition": {
													"expression": {
														"id": 247,
														"name": "_issue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "3994:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Issue_$44_storage_ptr",
															"typeString": "struct WeightedVoting.Issue storage pointer"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4001:6:0",
													"memberName": "closed",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 43,
													"src": "3994:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 253,
												"nodeType": "IfStatement",
												"src": "3990:65:0",
												"trueBody": {
													"id": 252,
													"nodeType": "Block",
													"src": "4009:46:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 249,
																	"name": "VotingClosed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "4030:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4030:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 251,
															"nodeType": "RevertStatement",
															"src": "4023:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"arguments": [
														{
															"expression": {
																"id": 257,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4091:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4095:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4091:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 254,
																"name": "_issue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "4068:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Issue_$44_storage_ptr",
																	"typeString": "struct WeightedVoting.Issue storage pointer"
																}
															},
															"id": 255,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4075:6:0",
															"memberName": "voters",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "4068:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1466_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 256,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4082:8:0",
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1547,
														"src": "4068:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1466_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1466_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4068:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 264,
												"nodeType": "IfStatement",
												"src": "4064:86:0",
												"trueBody": {
													"id": 263,
													"nodeType": "Block",
													"src": "4104:46:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 260,
																	"name": "AlreadyVoted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "4125:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4125:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 262,
															"nodeType": "RevertStatement",
															"src": "4118:21:0"
														}
													]
												}
											},
											{
												"assignments": [
													266
												],
												"declarations": [
													{
														"constant": false,
														"id": 266,
														"mutability": "mutable",
														"name": "nTokens",
														"nameLocation": "4168:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 352,
														"src": "4160:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 265,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4160:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 271,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 268,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4188:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4192:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4188:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 267,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "4178:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4178:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4160:39:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 272,
														"name": "nTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "4261:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 273,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4272:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4261:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 279,
												"nodeType": "IfStatement",
												"src": "4257:64:0",
												"trueBody": {
													"id": 278,
													"nodeType": "Block",
													"src": "4275:46:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 275,
																	"name": "NoTokensHeld",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "4296:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4296:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 277,
															"nodeType": "RevertStatement",
															"src": "4289:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Vote_$68",
														"typeString": "enum WeightedVoting.Vote"
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 280,
														"name": "_vote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "4335:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Vote_$68",
															"typeString": "enum WeightedVoting.Vote"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 281,
															"name": "Vote",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "4344:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Vote_$68_$",
																"typeString": "type(enum WeightedVoting.Vote)"
															}
														},
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4349:7:0",
														"memberName": "AGAINST",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 65,
														"src": "4344:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Vote_$68",
															"typeString": "enum WeightedVoting.Vote"
														}
													},
													"src": "4335:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_Vote_$68",
															"typeString": "enum WeightedVoting.Vote"
														},
														"id": 294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 291,
															"name": "_vote",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "4423:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Vote_$68",
																"typeString": "enum WeightedVoting.Vote"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 292,
																"name": "Vote",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "4432:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Vote_$68_$",
																	"typeString": "type(enum WeightedVoting.Vote)"
																}
															},
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4437:3:0",
															"memberName": "FOR",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 66,
															"src": "4432:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Vote_$68",
																"typeString": "enum WeightedVoting.Vote"
															}
														},
														"src": "4423:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 308,
														"nodeType": "Block",
														"src": "4499:55:0",
														"statements": [
															{
																"expression": {
																	"id": 306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"id": 302,
																			"name": "_issue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 242,
																			"src": "4513:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Issue_$44_storage_ptr",
																				"typeString": "struct WeightedVoting.Issue storage pointer"
																			}
																		},
																		"id": 304,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "4520:12:0",
																		"memberName": "votesAbstain",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 39,
																		"src": "4513:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "+=",
																	"rightHandSide": {
																		"id": 305,
																		"name": "nTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "4536:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4513:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 307,
																"nodeType": "ExpressionStatement",
																"src": "4513:30:0"
															}
														]
													},
													"id": 309,
													"nodeType": "IfStatement",
													"src": "4419:135:0",
													"trueBody": {
														"id": 301,
														"nodeType": "Block",
														"src": "4442:51:0",
														"statements": [
															{
																"expression": {
																	"id": 299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"id": 295,
																			"name": "_issue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 242,
																			"src": "4456:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Issue_$44_storage_ptr",
																				"typeString": "struct WeightedVoting.Issue storage pointer"
																			}
																		},
																		"id": 297,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "4463:8:0",
																		"memberName": "votesFor",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 35,
																		"src": "4456:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "+=",
																	"rightHandSide": {
																		"id": 298,
																		"name": "nTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "4475:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4456:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 300,
																"nodeType": "ExpressionStatement",
																"src": "4456:26:0"
															}
														]
													}
												},
												"id": 310,
												"nodeType": "IfStatement",
												"src": "4331:223:0",
												"trueBody": {
													"id": 290,
													"nodeType": "Block",
													"src": "4358:55:0",
													"statements": [
														{
															"expression": {
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 284,
																		"name": "_issue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 242,
																		"src": "4372:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Issue_$44_storage_ptr",
																			"typeString": "struct WeightedVoting.Issue storage pointer"
																		}
																	},
																	"id": 286,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4379:12:0",
																	"memberName": "votesAgainst",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 37,
																	"src": "4372:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 287,
																	"name": "nTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "4395:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4372:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 289,
															"nodeType": "ExpressionStatement",
															"src": "4372:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 316,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4582:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4586:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4582:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 311,
																"name": "_issue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "4564:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Issue_$44_storage_ptr",
																	"typeString": "struct WeightedVoting.Issue storage pointer"
																}
															},
															"id": 314,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4571:6:0",
															"memberName": "voters",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "4564:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1466_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 315,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4578:3:0",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1493,
														"src": "4564:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1466_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1466_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4564:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "4564:29:0"
											},
											{
												"expression": {
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 320,
															"name": "_issue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "4603:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Issue_$44_storage_ptr",
																"typeString": "struct WeightedVoting.Issue storage pointer"
															}
														},
														"id": 322,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4610:10:0",
														"memberName": "totalVotes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 33,
														"src": "4603:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 323,
														"name": "nTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "4624:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4603:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "4603:28:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 326,
															"name": "_issue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "4646:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Issue_$44_storage_ptr",
																"typeString": "struct WeightedVoting.Issue storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4653:10:0",
														"memberName": "totalVotes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 33,
														"src": "4646:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"id": 328,
															"name": "_issue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "4667:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Issue_$44_storage_ptr",
																"typeString": "struct WeightedVoting.Issue storage pointer"
															}
														},
														"id": 329,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4674:6:0",
														"memberName": "quorum",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 31,
														"src": "4667:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4646:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 351,
												"nodeType": "IfStatement",
												"src": "4642:194:0",
												"trueBody": {
													"id": 350,
													"nodeType": "Block",
													"src": "4682:154:0",
													"statements": [
														{
															"expression": {
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 331,
																		"name": "_issue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 242,
																		"src": "4696:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Issue_$44_storage_ptr",
																			"typeString": "struct WeightedVoting.Issue storage pointer"
																		}
																	},
																	"id": 333,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4703:6:0",
																	"memberName": "closed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 43,
																	"src": "4696:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4712:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "4696:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 336,
															"nodeType": "ExpressionStatement",
															"src": "4696:20:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 337,
																		"name": "_issue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 242,
																		"src": "4734:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Issue_$44_storage_ptr",
																			"typeString": "struct WeightedVoting.Issue storage pointer"
																		}
																	},
																	"id": 338,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4741:8:0",
																	"memberName": "votesFor",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 35,
																	"src": "4734:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 339,
																		"name": "_issue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 242,
																		"src": "4752:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Issue_$44_storage_ptr",
																			"typeString": "struct WeightedVoting.Issue storage pointer"
																		}
																	},
																	"id": 340,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4759:12:0",
																	"memberName": "votesAgainst",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 37,
																	"src": "4752:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4734:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 349,
															"nodeType": "IfStatement",
															"src": "4730:96:0",
															"trueBody": {
																"id": 348,
																"nodeType": "Block",
																"src": "4773:53:0",
																"statements": [
																	{
																		"expression": {
																			"id": 346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 342,
																					"name": "_issue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 242,
																					"src": "4791:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Issue_$44_storage_ptr",
																						"typeString": "struct WeightedVoting.Issue storage pointer"
																					}
																				},
																				"id": 344,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "4798:6:0",
																				"memberName": "passed",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 41,
																				"src": "4791:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 345,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4807:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "4791:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 347,
																		"nodeType": "ExpressionStatement",
																		"src": "4791:20:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"functionSelector": "943e8216",
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vote",
									"nameLocation": "3889:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "_issueId",
												"nameLocation": "3902:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "3894:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "_vote",
												"nameLocation": "3917:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "3912:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Vote_$68",
													"typeString": "enum WeightedVoting.Vote"
												},
												"typeName": {
													"id": 236,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 235,
														"name": "Vote",
														"nameLocations": [
															"3912:4:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 68,
														"src": "3912:4:0"
													},
													"referencedDeclaration": 68,
													"src": "3912:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Vote_$68",
														"typeString": "enum WeightedVoting.Vote"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:30:0"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3931:0:0"
									},
									"scope": 354,
									"src": "3880:962:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 355,
							"src": "189:4655:0",
							"usedErrors": [
								14,
								16,
								18,
								20,
								22,
								24,
								366,
								371,
								376,
								385,
								390,
								395
							],
							"usedEvents": [
								1018,
								1027
							]
						}
					],
					"src": "33:4811:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							491
						],
						"IERC20Errors": [
							396
						],
						"IERC721Errors": [
							444
						]
					},
					"id": 492,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 356,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 357,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 396,
							"linearizedBaseContracts": [
								396
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 366,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 371,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 376,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 385,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 390,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 395,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 492,
							"src": "278:1764:1",
							"usedErrors": [
								366,
								371,
								376,
								385,
								390,
								395
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 397,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 444,
							"linearizedBaseContracts": [
								444
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 402,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 407,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 416,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 421,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 426,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 433,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 438,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 443,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 492,
							"src": "2186:2092:1",
							"usedErrors": [
								402,
								407,
								416,
								421,
								426,
								433,
								438,
								443
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 445,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 491,
							"linearizedBaseContracts": [
								491
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 456,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 461,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 466,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 467,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 473,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 478,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 483,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 490,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 492,
							"src": "4424:2107:1",
							"usedErrors": [
								456,
								461,
								466,
								473,
								478,
								483,
								490
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1140
						],
						"ERC20": [
							1006
						],
						"IERC20": [
							1084
						],
						"IERC20Errors": [
							396
						],
						"IERC20Metadata": [
							1110
						]
					},
					"id": 1007,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 493,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 495,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1007,
							"sourceUnit": 1085,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 494,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1084,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 497,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1007,
							"sourceUnit": 1111,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 496,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1110,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 499,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1007,
							"sourceUnit": 1141,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 498,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1140,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 501,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1007,
							"sourceUnit": 492,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 500,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 396,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 503,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1140,
										"src": "1428:7:2"
									},
									"id": 504,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 505,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1084,
										"src": "1437:6:2"
									},
									"id": 506,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 507,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1110,
										"src": "1445:14:2"
									},
									"id": 508,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 509,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 396,
										"src": "1461:12:2"
									},
									"id": 510,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 502,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 1006,
							"linearizedBaseContracts": [
								1006,
								396,
								1110,
								1084,
								1140
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 514,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1006,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 513,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 511,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 512,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 520,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 1006,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 519,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 515,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 518,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 516,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 517,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 522,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 1006,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 521,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 524,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 1006,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 523,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 526,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1006,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 525,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 534,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 535,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 538,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 539,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 541,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 543,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 528,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 530,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 1006,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1097
									],
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 549,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 524,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 548,
												"id": 550,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 546,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 1006,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1103
									],
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 558,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 526,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 557,
												"id": 559,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 555,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 1006,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1109
									],
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 566,
												"id": 568,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 564,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 1006,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1033
									],
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 576,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 522,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 575,
												"id": 577,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 1006,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1041
									],
									"body": {
										"id": 591,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 587,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 589,
													"indexExpression": {
														"id": 588,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 582,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 586,
												"id": 590,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 1006,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1051
									],
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													603
												],
												"declarations": [
													{
														"constant": false,
														"id": 603,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 615,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 602,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 606,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 604,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1122,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 608,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 609,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 610,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 607,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 612,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 601,
												"id": 614,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 599,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 1006,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1061
									],
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 626,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 628,
														"indexExpression": {
															"id": 627,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 630,
													"indexExpression": {
														"id": 629,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 625,
												"id": 631,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 1006,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1071
									],
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													644
												],
												"declarations": [
													{
														"constant": false,
														"id": 644,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 656,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 643,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 647,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 645,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1122,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 649,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 650,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 651,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 648,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															897,
															957
														],
														"referencedDeclaration": 897,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 642,
												"id": 655,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 640,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 1006,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1083
									],
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													670
												],
												"declarations": [
													{
														"constant": false,
														"id": 670,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 688,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 669,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 673,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 671,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1122,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 675,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 676,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 677,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 674,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 681,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 682,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 683,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 680,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 685,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 668,
												"id": 687,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 666,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 1006,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 699,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 700,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 703,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 713,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 712,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 708,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 707,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 706,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 705,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 711,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 714,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 715,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 718,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 728,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 727,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 723,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 722,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 721,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 720,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 376,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 726,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 730,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 731,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 732,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 729,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 1006,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 746,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 739,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 747,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 750,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 783,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																758
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 758,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 783,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 757,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 762,
															"initialValue": {
																"baseExpression": {
																	"id": 759,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 761,
																"indexExpression": {
																	"id": 760,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 739,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 763,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 758,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 764,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 743,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 773,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 772,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 767,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 739,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 768,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 758,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 769,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 743,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 766,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 366,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 771,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 782,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 774,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 514,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 776,
																			"indexExpression": {
																				"id": 775,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 739,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 779,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 777,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 758,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 778,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 743,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 781,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 784,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 756,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 752,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 753,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 743,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 755,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 785,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 786,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 789,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 804,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 803,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 797,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 514,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 799,
																			"indexExpression": {
																				"id": 798,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 741,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 800,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 743,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 802,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 805,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 796,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 795,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 791,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 522,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 792,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 743,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 794,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 807,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 808,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 809,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 806,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 811,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 1006,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 821,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 822,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 835,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 834,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 830,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 828,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 827,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 376,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 833,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 837,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 841,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 842,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 836,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 1006,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 854,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 849,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 855,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 858,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 868,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 867,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 863,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 861,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 860,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 866,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 870,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 871,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 875,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 869,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 877,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 847,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 1006,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 890,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 891,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 892,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 889,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															897,
															957
														],
														"referencedDeclaration": 957,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 895,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 880,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 1006,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 956,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 909,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 912,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 910,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 913,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 923,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 922,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 918,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 916,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 915,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 921,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 924,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 925,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 938,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 937,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 933,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 931,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 930,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 936,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 939,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 942,
															"indexExpression": {
																"id": 940,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 900,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 943,
														"indexExpression": {
															"id": 941,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 944,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 946,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 947,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 906,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 955,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 954,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 949,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 900,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 950,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 902,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 951,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 904,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 948,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1027,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 953,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 905,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 1006,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													968
												],
												"declarations": [
													{
														"constant": false,
														"id": 968,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 1004,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 967,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 973,
												"initialValue": {
													"arguments": [
														{
															"id": 970,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 971,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 969,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 974,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 976,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 975,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1003,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 1002,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 981,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 968,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 982,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 964,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 991,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 990,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 985,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 962,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 986,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 968,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 987,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 964,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 984,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 385,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 989,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 1001,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 993,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 960,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 994,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 962,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 997,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 995,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 968,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 996,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 964,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 998,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 992,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				897,
																				957
																			],
																			"referencedDeclaration": 957,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1000,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 1006,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1007,
							"src": "1401:9741:2",
							"usedErrors": [
								366,
								371,
								376,
								385,
								390,
								395
							],
							"usedEvents": [
								1018,
								1027
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1084
						]
					},
					"id": 1085,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1008,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1009,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1084,
							"linearizedBaseContracts": [
								1084
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1018,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1027,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 1028,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1033,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 1084,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1041,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 1084,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1042,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1051,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1048,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 1084,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1061,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 1084,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1062,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1071,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1068,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 1084,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1072,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1083,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1080,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 1084,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1085,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								1018,
								1027
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1084
						],
						"IERC20Metadata": [
							1110
						]
					},
					"id": 1111,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1086,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1088,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1111,
							"sourceUnit": 1085,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1087,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1084,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1090,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1084,
										"src": "305:6:4"
									},
									"id": 1091,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1089,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1110,
							"linearizedBaseContracts": [
								1110,
								1084
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1097,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1094,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 1110,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1098,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1103,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1100,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 1110,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1106,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 1110,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1111,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								1018,
								1027
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1140
						]
					},
					"id": 1141,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1112,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1113,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1140,
							"linearizedBaseContracts": [
								1140
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1121,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1118,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1117,
												"id": 1120,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 1122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 1140,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1127,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1126,
												"id": 1129,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 1131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1124,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 1140,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1138,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1135,
												"id": 1137,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 1139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 1140,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1141,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							1753
						]
					},
					"id": 1754,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1142,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "205:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumerableSet",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1143,
								"nodeType": "StructuredDocumentation",
								"src": "231:1098:6",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="
							},
							"fullyImplemented": true,
							"id": 1753,
							"linearizedBaseContracts": [
								1753
							],
							"name": "EnumerableSet",
							"nameLocation": "1338:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 1151,
									"members": [
										{
											"constant": false,
											"id": 1146,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "1862:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 1151,
											"src": "1852:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 1144,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1145,
												"nodeType": "ArrayTypeName",
												"src": "1852:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1150,
											"mutability": "mutable",
											"name": "_positions",
											"nameLocation": "2054:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 1151,
											"src": "2020:44:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 1149,
												"keyName": "value",
												"keyNameLocation": "2036:5:6",
												"keyType": {
													"id": 1147,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2028:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "2020:33:6",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2045:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "1805:3:6",
									"nodeType": "StructDefinition",
									"scope": 1753,
									"src": "1798:273:6",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1192,
										"nodeType": "Block",
										"src": "2310:337:6",
										"statements": [
											{
												"condition": {
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2324:22:6",
													"subExpression": {
														"arguments": [
															{
																"id": 1163,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1155,
																"src": "2335:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 1164,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1157,
																"src": "2340:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1162,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1296,
															"src": "2325:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1151_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 1165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2325:21:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1190,
													"nodeType": "Block",
													"src": "2604:37:6",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2625:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1161,
															"id": 1189,
															"nodeType": "Return",
															"src": "2618:12:6"
														}
													]
												},
												"id": 1191,
												"nodeType": "IfStatement",
												"src": "2320:321:6",
												"trueBody": {
													"id": 1187,
													"nodeType": "Block",
													"src": "2348:250:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1172,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1157,
																		"src": "2379:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1167,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1155,
																			"src": "2362:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1170,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2366:7:6",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1146,
																		"src": "2362:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2374:4:6",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2362:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2362:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1174,
															"nodeType": "ExpressionStatement",
															"src": "2362:23:6"
														},
														{
															"expression": {
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 1175,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1155,
																			"src": "2520:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1178,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2524:10:6",
																		"memberName": "_positions",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1150,
																		"src": "2520:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1179,
																	"indexExpression": {
																		"id": 1177,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1157,
																		"src": "2535:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2520:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1180,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1155,
																			"src": "2544:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1181,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2548:7:6",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1146,
																		"src": "2544:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2556:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2544:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2520:42:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1184,
															"nodeType": "ExpressionStatement",
															"src": "2520:42:6"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2583:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1161,
															"id": 1186,
															"nodeType": "Return",
															"src": "2576:11:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1152,
										"nodeType": "StructuredDocumentation",
										"src": "2077:159:6",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "2250:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2267:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "2255:15:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1154,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1153,
														"name": "Set",
														"nameLocations": [
															"2255:3:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1151,
														"src": "2255:3:6"
													},
													"referencedDeclaration": 1151,
													"src": "2255:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2280:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "2272:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1156,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2272:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2254:32:6"
									},
									"returnParameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "2304:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1159,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2304:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2303:6:6"
									},
									"scope": 1753,
									"src": "2241:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1276,
										"nodeType": "Block",
										"src": "2887:1296:6",
										"statements": [
											{
												"assignments": [
													1205
												],
												"declarations": [
													{
														"constant": false,
														"id": 1205,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "2999:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1276,
														"src": "2991:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1204,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2991:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1210,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1206,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "3010:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1207,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3014:10:6",
														"memberName": "_positions",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1150,
														"src": "3010:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 1209,
													"indexExpression": {
														"id": 1208,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "3025:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3010:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2991:40:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1211,
														"name": "position",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "3046:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3058:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3046:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1274,
													"nodeType": "Block",
													"src": "4140:37:6",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4161:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1203,
															"id": 1273,
															"nodeType": "Return",
															"src": "4154:12:6"
														}
													]
												},
												"id": 1275,
												"nodeType": "IfStatement",
												"src": "3042:1135:6",
												"trueBody": {
													"id": 1271,
													"nodeType": "Block",
													"src": "3061:1073:6",
													"statements": [
														{
															"assignments": [
																1215
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1215,
																	"mutability": "mutable",
																	"name": "valueIndex",
																	"nameLocation": "3421:10:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1271,
																	"src": "3413:18:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1214,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3413:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1219,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1216,
																	"name": "position",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1205,
																	"src": "3434:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3445:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3434:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3413:33:6"
														},
														{
															"assignments": [
																1221
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1221,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "3468:9:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1271,
																	"src": "3460:17:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1220,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3460:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1227,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 1222,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1197,
																			"src": "3480:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3484:7:6",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1146,
																		"src": "3480:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3492:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3480:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3501:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3480:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3460:42:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1228,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1215,
																	"src": "3521:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1229,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1221,
																	"src": "3535:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3521:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1255,
															"nodeType": "IfStatement",
															"src": "3517:378:6",
															"trueBody": {
																"id": 1254,
																"nodeType": "Block",
																"src": "3546:349:6",
																"statements": [
																	{
																		"assignments": [
																			1232
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1232,
																				"mutability": "mutable",
																				"name": "lastValue",
																				"nameLocation": "3572:9:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1254,
																				"src": "3564:17:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1231,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3564:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1237,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 1233,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1197,
																					"src": "3584:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 1234,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3588:7:6",
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1146,
																				"src": "3584:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 1236,
																			"indexExpression": {
																				"id": 1235,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1221,
																				"src": "3596:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3584:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3564:42:6"
																	},
																	{
																		"expression": {
																			"id": 1244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 1238,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1197,
																						"src": "3705:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 1241,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3709:7:6",
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1146,
																					"src": "3705:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 1242,
																				"indexExpression": {
																					"id": 1240,
																					"name": "valueIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1215,
																					"src": "3717:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3705:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1243,
																				"name": "lastValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1232,
																				"src": "3731:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3705:35:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 1245,
																		"nodeType": "ExpressionStatement",
																		"src": "3705:35:6"
																	},
																	{
																		"expression": {
																			"id": 1252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 1246,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1197,
																						"src": "3844:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 1249,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3848:10:6",
																					"memberName": "_positions",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1150,
																					"src": "3844:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 1250,
																				"indexExpression": {
																					"id": 1248,
																					"name": "lastValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1232,
																					"src": "3859:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3844:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1251,
																				"name": "position",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1205,
																				"src": "3872:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3844:36:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1253,
																		"nodeType": "ExpressionStatement",
																		"src": "3844:36:6"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 1256,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1197,
																			"src": "3973:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1259,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3977:7:6",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1146,
																		"src": "3973:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3985:3:6",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "3973:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 1261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3973:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1262,
															"nodeType": "ExpressionStatement",
															"src": "3973:17:6"
														},
														{
															"expression": {
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4069:28:6",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 1263,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1197,
																			"src": "4076:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1264,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4080:10:6",
																		"memberName": "_positions",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1150,
																		"src": "4076:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1266,
																	"indexExpression": {
																		"id": 1265,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1199,
																		"src": "4091:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4076:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1268,
															"nodeType": "ExpressionStatement",
															"src": "4069:28:6"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4119:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1203,
															"id": 1270,
															"nodeType": "Return",
															"src": "4112:11:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1194,
										"nodeType": "StructuredDocumentation",
										"src": "2653:157:6",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "2824:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2844:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "2832:15:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1196,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1195,
														"name": "Set",
														"nameLocations": [
															"2832:3:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1151,
														"src": "2832:3:6"
													},
													"referencedDeclaration": 1151,
													"src": "2832:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2857:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "2849:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1198,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2849:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2831:32:6"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "2881:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1201,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2881:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2880:6:6"
									},
									"scope": 1753,
									"src": "2815:1368:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1295,
										"nodeType": "Block",
										"src": "4343:50:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 1288,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1281,
																"src": "4360:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4364:10:6",
															"memberName": "_positions",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1150,
															"src": "4360:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 1291,
														"indexExpression": {
															"id": 1290,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "4375:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4360:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1292,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4385:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4360:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1287,
												"id": 1294,
												"nodeType": "Return",
												"src": "4353:33:6"
											}
										]
									},
									"documentation": {
										"id": 1278,
										"nodeType": "StructuredDocumentation",
										"src": "4189:70:6",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "4273:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4295:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "4283:15:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1280,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1279,
														"name": "Set",
														"nameLocations": [
															"4283:3:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1151,
														"src": "4283:3:6"
													},
													"referencedDeclaration": 1151,
													"src": "4283:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4308:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "4300:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1282,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4300:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4282:32:6"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "4337:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4337:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4336:6:6"
									},
									"scope": 1753,
									"src": "4264:129:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1309,
										"nodeType": "Block",
										"src": "4539:42:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1305,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1300,
															"src": "4556:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1306,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4560:7:6",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1146,
														"src": "4556:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4568:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4556:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1304,
												"id": 1308,
												"nodeType": "Return",
												"src": "4549:25:6"
											}
										]
									},
									"documentation": {
										"id": 1297,
										"nodeType": "StructuredDocumentation",
										"src": "4399:70:6",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 1310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "4483:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4503:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "4491:15:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1299,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1298,
														"name": "Set",
														"nameLocations": [
															"4491:3:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1151,
														"src": "4491:3:6"
													},
													"referencedDeclaration": 1151,
													"src": "4491:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4490:17:6"
									},
									"returnParameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "4530:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4530:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4529:9:6"
									},
									"scope": 1753,
									"src": "4474:107:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1326,
										"nodeType": "Block",
										"src": "4999:42:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 1321,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "5016:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1322,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5020:7:6",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1146,
														"src": "5016:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1324,
													"indexExpression": {
														"id": 1323,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1316,
														"src": "5028:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5016:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1320,
												"id": 1325,
												"nodeType": "Return",
												"src": "5009:25:6"
											}
										]
									},
									"documentation": {
										"id": 1311,
										"nodeType": "StructuredDocumentation",
										"src": "4587:331:6",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "4932:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4948:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "4936:15:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1313,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1312,
														"name": "Set",
														"nameLocations": [
															"4936:3:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1151,
														"src": "4936:3:6"
													},
													"referencedDeclaration": 1151,
													"src": "4936:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4961:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "4953:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4953:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4935:32:6"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "4990:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1318,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4990:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4989:9:6"
									},
									"scope": 1753,
									"src": "4923:118:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1340,
										"nodeType": "Block",
										"src": "5655:35:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1337,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1331,
														"src": "5672:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 1338,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5676:7:6",
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1146,
													"src": "5672:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 1336,
												"id": 1339,
												"nodeType": "Return",
												"src": "5665:18:6"
											}
										]
									},
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "5047:529:6",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "5590:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5610:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "5598:15:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1330,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1329,
														"name": "Set",
														"nameLocations": [
															"5598:3:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1151,
														"src": "5598:3:6"
													},
													"referencedDeclaration": 1151,
													"src": "5598:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5597:17:6"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "5637:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1333,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5637:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1334,
													"nodeType": "ArrayTypeName",
													"src": "5637:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5636:18:6"
									},
									"scope": 1753,
									"src": "5581:109:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 1345,
									"members": [
										{
											"constant": false,
											"id": 1344,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5747:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1345,
											"src": "5743:10:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1343,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1342,
													"name": "Set",
													"nameLocations": [
														"5743:3:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1151,
													"src": "5743:3:6"
												},
												"referencedDeclaration": 1151,
												"src": "5743:3:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "5722:10:6",
									"nodeType": "StructDefinition",
									"scope": 1753,
									"src": "5715:45:6",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1362,
										"nodeType": "Block",
										"src": "6006:47:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1357,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1349,
																"src": "6028:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1345_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6032:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1344,
															"src": "6028:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1359,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1351,
															"src": "6040:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1356,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "6023:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1151_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6023:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1355,
												"id": 1361,
												"nodeType": "Return",
												"src": "6016:30:6"
											}
										]
									},
									"documentation": {
										"id": 1346,
										"nodeType": "StructuredDocumentation",
										"src": "5766:159:6",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "5939:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5962:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "5943:22:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1345_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1348,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1347,
														"name": "Bytes32Set",
														"nameLocations": [
															"5943:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1345,
														"src": "5943:10:6"
													},
													"referencedDeclaration": 1345,
													"src": "5943:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1345_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5975:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "5967:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5967:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5942:39:6"
									},
									"returnParameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "6000:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1353,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6000:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5999:6:6"
									},
									"scope": 1753,
									"src": "5930:123:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1380,
										"nodeType": "Block",
										"src": "6300:50:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1375,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1367,
																"src": "6325:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1345_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1376,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6329:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1344,
															"src": "6325:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "6337:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1374,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "6317:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1151_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6317:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1373,
												"id": 1379,
												"nodeType": "Return",
												"src": "6310:33:6"
											}
										]
									},
									"documentation": {
										"id": 1364,
										"nodeType": "StructuredDocumentation",
										"src": "6059:157:6",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6230:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6256:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "6237:22:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1345_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1366,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1365,
														"name": "Bytes32Set",
														"nameLocations": [
															"6237:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1345,
														"src": "6237:10:6"
													},
													"referencedDeclaration": 1345,
													"src": "6237:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1345_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6269:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "6261:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1368,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6261:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6236:39:6"
									},
									"returnParameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "6294:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1371,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6294:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:6:6"
									},
									"scope": 1753,
									"src": "6221:129:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1398,
										"nodeType": "Block",
										"src": "6517:52:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1393,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1385,
																"src": "6544:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1345_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1394,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6548:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1344,
															"src": "6544:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1395,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1387,
															"src": "6556:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1392,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "6534:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1151_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6534:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1391,
												"id": 1397,
												"nodeType": "Return",
												"src": "6527:35:6"
											}
										]
									},
									"documentation": {
										"id": 1382,
										"nodeType": "StructuredDocumentation",
										"src": "6356:70:6",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6440:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6468:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "6449:22:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1345_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1384,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1383,
														"name": "Bytes32Set",
														"nameLocations": [
															"6449:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1345,
														"src": "6449:10:6"
													},
													"referencedDeclaration": 1345,
													"src": "6449:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1345_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6481:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "6473:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1386,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6473:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6448:39:6"
									},
									"returnParameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "6511:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1389,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6511:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6510:6:6"
									},
									"scope": 1753,
									"src": "6431:138:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1413,
										"nodeType": "Block",
										"src": "6722:43:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1409,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "6747:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1345_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1410,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6751:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1344,
															"src": "6747:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1408,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "6739:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1151_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6739:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1407,
												"id": 1412,
												"nodeType": "Return",
												"src": "6732:26:6"
											}
										]
									},
									"documentation": {
										"id": 1400,
										"nodeType": "StructuredDocumentation",
										"src": "6575:70:6",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6659:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6685:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "6666:22:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1345_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1402,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1401,
														"name": "Bytes32Set",
														"nameLocations": [
															"6666:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1345,
														"src": "6666:10:6"
													},
													"referencedDeclaration": 1345,
													"src": "6666:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1345_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:24:6"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "6713:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6713:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6712:9:6"
									},
									"scope": 1753,
									"src": "6650:115:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1431,
										"nodeType": "Block",
										"src": "7190:46:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1426,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "7211:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1345_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1427,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7215:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1344,
															"src": "7211:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1428,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1420,
															"src": "7223:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1425,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "7207:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1151_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7207:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1424,
												"id": 1430,
												"nodeType": "Return",
												"src": "7200:29:6"
											}
										]
									},
									"documentation": {
										"id": 1415,
										"nodeType": "StructuredDocumentation",
										"src": "6771:331:6",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "7116:2:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7138:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "7119:22:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1345_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1417,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1416,
														"name": "Bytes32Set",
														"nameLocations": [
															"7119:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1345,
														"src": "7119:10:6"
													},
													"referencedDeclaration": 1345,
													"src": "7119:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1345_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7151:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "7143:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7143:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7118:39:6"
									},
									"returnParameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "7181:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1422,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7181:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7180:9:6"
									},
									"scope": 1753,
									"src": "7107:129:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1461,
										"nodeType": "Block",
										"src": "7857:219:6",
										"statements": [
											{
												"assignments": [
													1446
												],
												"declarations": [
													{
														"constant": false,
														"id": 1446,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "7884:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1461,
														"src": "7867:22:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1444,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7867:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1445,
															"nodeType": "ArrayTypeName",
															"src": "7867:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1451,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1448,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1436,
																"src": "7900:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1345_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1449,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7904:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1344,
															"src": "7900:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1447,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "7892:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1151_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7892:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7867:44:6"
											},
											{
												"assignments": [
													1456
												],
												"declarations": [
													{
														"constant": false,
														"id": 1456,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7938:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1461,
														"src": "7921:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1454,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7921:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1455,
															"nodeType": "ArrayTypeName",
															"src": "7921:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1457,
												"nodeType": "VariableDeclarationStatement",
												"src": "7921:23:6"
											},
											{
												"AST": {
													"nativeSrc": "8007:39:6",
													"nodeType": "YulBlock",
													"src": "8007:39:6",
													"statements": [
														{
															"nativeSrc": "8021:15:6",
															"nodeType": "YulAssignment",
															"src": "8021:15:6",
															"value": {
																"name": "store",
																"nativeSrc": "8031:5:6",
																"nodeType": "YulIdentifier",
																"src": "8031:5:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "8021:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8021:6:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1456,
														"isOffset": false,
														"isSlot": false,
														"src": "8021:6:6",
														"valueSize": 1
													},
													{
														"declaration": 1446,
														"isOffset": false,
														"isSlot": false,
														"src": "8031:5:6",
														"valueSize": 1
													}
												],
												"id": 1458,
												"nodeType": "InlineAssembly",
												"src": "7998:48:6"
											},
											{
												"expression": {
													"id": 1459,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1456,
													"src": "8063:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 1441,
												"id": 1460,
												"nodeType": "Return",
												"src": "8056:13:6"
											}
										]
									},
									"documentation": {
										"id": 1433,
										"nodeType": "StructuredDocumentation",
										"src": "7242:529:6",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "7785:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7811:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "7792:22:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1345_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1435,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1434,
														"name": "Bytes32Set",
														"nameLocations": [
															"7792:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1345,
														"src": "7792:10:6"
													},
													"referencedDeclaration": 1345,
													"src": "7792:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1345_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7791:24:6"
									},
									"returnParameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "7839:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1438,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7839:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1439,
													"nodeType": "ArrayTypeName",
													"src": "7839:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7838:18:6"
									},
									"scope": 1753,
									"src": "7776:300:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 1466,
									"members": [
										{
											"constant": false,
											"id": 1465,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "8133:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1466,
											"src": "8129:10:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1464,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1463,
													"name": "Set",
													"nameLocations": [
														"8129:3:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1151,
													"src": "8129:3:6"
												},
												"referencedDeclaration": 1151,
												"src": "8129:3:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "8108:10:6",
									"nodeType": "StructDefinition",
									"scope": 1753,
									"src": "8101:45:6",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1492,
										"nodeType": "Block",
										"src": "8392:74:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1478,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1470,
																"src": "8414:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1466_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1479,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8418:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1465,
															"src": "8414:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1486,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1472,
																					"src": "8450:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1485,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8442:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1484,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8442:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8442:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8434:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1482,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8434:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8434:23:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1481,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8426:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1480,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8426:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8426:32:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1477,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "8409:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1151_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8409:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1476,
												"id": 1491,
												"nodeType": "Return",
												"src": "8402:57:6"
											}
										]
									},
									"documentation": {
										"id": 1467,
										"nodeType": "StructuredDocumentation",
										"src": "8152:159:6",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8325:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8348:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "8329:22:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1466_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1469,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1468,
														"name": "AddressSet",
														"nameLocations": [
															"8329:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1466,
														"src": "8329:10:6"
													},
													"referencedDeclaration": 1466,
													"src": "8329:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1466_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8361:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "8353:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8353:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8328:39:6"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "8386:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1474,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8386:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8385:6:6"
									},
									"scope": 1753,
									"src": "8316:150:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1519,
										"nodeType": "Block",
										"src": "8713:77:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1505,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1497,
																"src": "8738:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1466_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1506,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8742:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1465,
															"src": "8738:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1513,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1499,
																					"src": "8774:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1512,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8766:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1511,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8766:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8766:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8758:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1509,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8758:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8758:23:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8750:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1507,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8750:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8750:32:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1504,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "8730:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1151_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8730:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1503,
												"id": 1518,
												"nodeType": "Return",
												"src": "8723:60:6"
											}
										]
									},
									"documentation": {
										"id": 1494,
										"nodeType": "StructuredDocumentation",
										"src": "8472:157:6",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8643:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8669:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "8650:22:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1466_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1496,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1495,
														"name": "AddressSet",
														"nameLocations": [
															"8650:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1466,
														"src": "8650:10:6"
													},
													"referencedDeclaration": 1466,
													"src": "8650:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1466_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8682:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "8674:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8674:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8649:39:6"
									},
									"returnParameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "8707:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1501,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8707:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8706:6:6"
									},
									"scope": 1753,
									"src": "8634:156:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1546,
										"nodeType": "Block",
										"src": "8957:79:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1532,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1524,
																"src": "8984:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1466_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1533,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8988:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1465,
															"src": "8984:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1540,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1526,
																					"src": "9020:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1539,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9012:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1538,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "9012:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9012:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9004:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1536,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9004:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9004:23:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8996:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1534,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8996:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8996:32:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1531,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "8974:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1151_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8974:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1530,
												"id": 1545,
												"nodeType": "Return",
												"src": "8967:62:6"
											}
										]
									},
									"documentation": {
										"id": 1521,
										"nodeType": "StructuredDocumentation",
										"src": "8796:70:6",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "8880:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8908:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "8889:22:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1466_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1523,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1522,
														"name": "AddressSet",
														"nameLocations": [
															"8889:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1466,
														"src": "8889:10:6"
													},
													"referencedDeclaration": 1466,
													"src": "8889:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1466_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8921:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "8913:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8913:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8888:39:6"
									},
									"returnParameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "8951:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1528,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8951:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8950:6:6"
									},
									"scope": 1753,
									"src": "8871:165:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1561,
										"nodeType": "Block",
										"src": "9189:43:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1557,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1551,
																"src": "9214:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1466_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1558,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9218:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1465,
															"src": "9214:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1556,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "9206:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1151_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9206:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1555,
												"id": 1560,
												"nodeType": "Return",
												"src": "9199:26:6"
											}
										]
									},
									"documentation": {
										"id": 1548,
										"nodeType": "StructuredDocumentation",
										"src": "9042:70:6",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "9126:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9152:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "9133:22:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1466_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1550,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1549,
														"name": "AddressSet",
														"nameLocations": [
															"9133:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1466,
														"src": "9133:10:6"
													},
													"referencedDeclaration": 1466,
													"src": "9133:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1466_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9132:24:6"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "9180:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9180:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9179:9:6"
									},
									"scope": 1753,
									"src": "9117:115:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1588,
										"nodeType": "Block",
										"src": "9657:73:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1580,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1566,
																						"src": "9702:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$1466_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 1581,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9706:6:6",
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1465,
																					"src": "9702:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$1151_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 1582,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1568,
																					"src": "9714:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$1151_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1579,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1327,
																				"src": "9698:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1151_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 1583,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9698:22:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 1578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9690:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1577,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9690:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9690:31:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9682:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1575,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "9682:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9682:40:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1574,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9674:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1573,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9674:7:6",
															"typeDescriptions": {}
														}
													},
													"id": 1586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9674:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1572,
												"id": 1587,
												"nodeType": "Return",
												"src": "9667:56:6"
											}
										]
									},
									"documentation": {
										"id": 1563,
										"nodeType": "StructuredDocumentation",
										"src": "9238:331:6",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9583:2:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9605:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "9586:22:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1466_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1565,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1564,
														"name": "AddressSet",
														"nameLocations": [
															"9586:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1466,
														"src": "9586:10:6"
													},
													"referencedDeclaration": 1466,
													"src": "9586:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1466_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9618:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "9610:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9610:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9585:39:6"
									},
									"returnParameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "9648:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9648:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9647:9:6"
									},
									"scope": 1753,
									"src": "9574:156:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1618,
										"nodeType": "Block",
										"src": "10351:219:6",
										"statements": [
											{
												"assignments": [
													1603
												],
												"declarations": [
													{
														"constant": false,
														"id": 1603,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "10378:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1618,
														"src": "10361:22:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1601,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "10361:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1602,
															"nodeType": "ArrayTypeName",
															"src": "10361:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1608,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1605,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1593,
																"src": "10394:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1466_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1606,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10398:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1465,
															"src": "10394:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1604,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "10386:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1151_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10386:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10361:44:6"
											},
											{
												"assignments": [
													1613
												],
												"declarations": [
													{
														"constant": false,
														"id": 1613,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10432:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1618,
														"src": "10415:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1611,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10415:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1612,
															"nodeType": "ArrayTypeName",
															"src": "10415:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1614,
												"nodeType": "VariableDeclarationStatement",
												"src": "10415:23:6"
											},
											{
												"AST": {
													"nativeSrc": "10501:39:6",
													"nodeType": "YulBlock",
													"src": "10501:39:6",
													"statements": [
														{
															"nativeSrc": "10515:15:6",
															"nodeType": "YulAssignment",
															"src": "10515:15:6",
															"value": {
																"name": "store",
																"nativeSrc": "10525:5:6",
																"nodeType": "YulIdentifier",
																"src": "10525:5:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "10515:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10515:6:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1613,
														"isOffset": false,
														"isSlot": false,
														"src": "10515:6:6",
														"valueSize": 1
													},
													{
														"declaration": 1603,
														"isOffset": false,
														"isSlot": false,
														"src": "10525:5:6",
														"valueSize": 1
													}
												],
												"id": 1615,
												"nodeType": "InlineAssembly",
												"src": "10492:48:6"
											},
											{
												"expression": {
													"id": 1616,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1613,
													"src": "10557:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 1598,
												"id": 1617,
												"nodeType": "Return",
												"src": "10550:13:6"
											}
										]
									},
									"documentation": {
										"id": 1590,
										"nodeType": "StructuredDocumentation",
										"src": "9736:529:6",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "10279:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10305:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "10286:22:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1466_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1592,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1591,
														"name": "AddressSet",
														"nameLocations": [
															"10286:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1466,
														"src": "10286:10:6"
													},
													"referencedDeclaration": 1466,
													"src": "10286:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1466_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10285:24:6"
									},
									"returnParameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "10333:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1595,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10333:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1596,
													"nodeType": "ArrayTypeName",
													"src": "10333:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10332:18:6"
									},
									"scope": 1753,
									"src": "10270:300:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 1623,
									"members": [
										{
											"constant": false,
											"id": 1622,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "10621:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1623,
											"src": "10617:10:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1621,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1620,
													"name": "Set",
													"nameLocations": [
														"10617:3:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1151,
													"src": "10617:3:6"
												},
												"referencedDeclaration": 1151,
												"src": "10617:3:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1151_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "10599:7:6",
									"nodeType": "StructDefinition",
									"scope": 1753,
									"src": "10592:42:6",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1643,
										"nodeType": "Block",
										"src": "10877:56:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1635,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1627,
																"src": "10899:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1623_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1636,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10903:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1622,
															"src": "10899:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1639,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1629,
																	"src": "10919:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10911:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1637,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10911:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10911:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1634,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "10894:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1151_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10894:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1633,
												"id": 1642,
												"nodeType": "Return",
												"src": "10887:39:6"
											}
										]
									},
									"documentation": {
										"id": 1624,
										"nodeType": "StructuredDocumentation",
										"src": "10640:159:6",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "10813:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10833:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "10817:19:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1623_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1626,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1625,
														"name": "UintSet",
														"nameLocations": [
															"10817:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1623,
														"src": "10817:7:6"
													},
													"referencedDeclaration": 1623,
													"src": "10817:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1623_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10846:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "10838:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10838:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10816:36:6"
									},
									"returnParameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "10871:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1631,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10871:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10870:6:6"
									},
									"scope": 1753,
									"src": "10804:129:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1664,
										"nodeType": "Block",
										"src": "11177:59:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1656,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1648,
																"src": "11202:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1623_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1657,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11206:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1622,
															"src": "11202:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1660,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1650,
																	"src": "11222:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1659,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11214:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1658,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11214:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11214:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1655,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "11194:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1151_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11194:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1654,
												"id": 1663,
												"nodeType": "Return",
												"src": "11187:42:6"
											}
										]
									},
									"documentation": {
										"id": 1645,
										"nodeType": "StructuredDocumentation",
										"src": "10939:157:6",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "11110:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11133:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "11117:19:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1623_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1647,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1646,
														"name": "UintSet",
														"nameLocations": [
															"11117:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1623,
														"src": "11117:7:6"
													},
													"referencedDeclaration": 1623,
													"src": "11117:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1623_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11146:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "11138:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11138:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11116:36:6"
									},
									"returnParameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "11171:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1652,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11171:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11170:6:6"
									},
									"scope": 1753,
									"src": "11101:135:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1685,
										"nodeType": "Block",
										"src": "11400:61:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1677,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "11427:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1623_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1678,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11431:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1622,
															"src": "11427:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1681,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1671,
																	"src": "11447:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11439:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1679,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11439:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11439:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1676,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "11417:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1151_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11417:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1675,
												"id": 1684,
												"nodeType": "Return",
												"src": "11410:44:6"
											}
										]
									},
									"documentation": {
										"id": 1666,
										"nodeType": "StructuredDocumentation",
										"src": "11242:70:6",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "11326:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11351:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "11335:19:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1623_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1668,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1667,
														"name": "UintSet",
														"nameLocations": [
															"11335:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1623,
														"src": "11335:7:6"
													},
													"referencedDeclaration": 1623,
													"src": "11335:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1623_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11364:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "11356:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11356:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11334:36:6"
									},
									"returnParameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "11394:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1673,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11394:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11393:6:6"
									},
									"scope": 1753,
									"src": "11317:144:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1700,
										"nodeType": "Block",
										"src": "11611:43:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1696,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1690,
																"src": "11636:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1623_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1697,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11640:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1622,
															"src": "11636:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1695,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "11628:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1151_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11628:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1694,
												"id": 1699,
												"nodeType": "Return",
												"src": "11621:26:6"
											}
										]
									},
									"documentation": {
										"id": 1687,
										"nodeType": "StructuredDocumentation",
										"src": "11467:70:6",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "11551:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11574:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "11558:19:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1623_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1689,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1688,
														"name": "UintSet",
														"nameLocations": [
															"11558:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1623,
														"src": "11558:7:6"
													},
													"referencedDeclaration": 1623,
													"src": "11558:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1623_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11557:21:6"
									},
									"returnParameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "11602:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11602:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11601:9:6"
									},
									"scope": 1753,
									"src": "11542:112:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1721,
										"nodeType": "Block",
										"src": "12076:55:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1715,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1705,
																		"src": "12105:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$1623_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 1716,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12109:6:6",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1622,
																	"src": "12105:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$1151_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 1717,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1707,
																	"src": "12117:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$1151_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1714,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1327,
																"src": "12101:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1151_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 1718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12101:22:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1713,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12093:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1712,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12093:7:6",
															"typeDescriptions": {}
														}
													},
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12093:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1711,
												"id": 1720,
												"nodeType": "Return",
												"src": "12086:38:6"
											}
										]
									},
									"documentation": {
										"id": 1702,
										"nodeType": "StructuredDocumentation",
										"src": "11660:331:6",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "12005:2:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12024:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "12008:19:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1623_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1704,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1703,
														"name": "UintSet",
														"nameLocations": [
															"12008:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1623,
														"src": "12008:7:6"
													},
													"referencedDeclaration": 1623,
													"src": "12008:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1623_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12037:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "12029:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12029:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12007:36:6"
									},
									"returnParameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "12067:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12067:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12066:9:6"
									},
									"scope": 1753,
									"src": "11996:135:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1751,
										"nodeType": "Block",
										"src": "12749:219:6",
										"statements": [
											{
												"assignments": [
													1736
												],
												"declarations": [
													{
														"constant": false,
														"id": 1736,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "12776:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1751,
														"src": "12759:22:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1734,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12759:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1735,
															"nodeType": "ArrayTypeName",
															"src": "12759:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1741,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1738,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1726,
																"src": "12792:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1623_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1739,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12796:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1622,
															"src": "12792:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1151_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1737,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "12784:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1151_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12784:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12759:44:6"
											},
											{
												"assignments": [
													1746
												],
												"declarations": [
													{
														"constant": false,
														"id": 1746,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12830:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1751,
														"src": "12813:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1744,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12813:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1745,
															"nodeType": "ArrayTypeName",
															"src": "12813:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1747,
												"nodeType": "VariableDeclarationStatement",
												"src": "12813:23:6"
											},
											{
												"AST": {
													"nativeSrc": "12899:39:6",
													"nodeType": "YulBlock",
													"src": "12899:39:6",
													"statements": [
														{
															"nativeSrc": "12913:15:6",
															"nodeType": "YulAssignment",
															"src": "12913:15:6",
															"value": {
																"name": "store",
																"nativeSrc": "12923:5:6",
																"nodeType": "YulIdentifier",
																"src": "12923:5:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "12913:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12913:6:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1746,
														"isOffset": false,
														"isSlot": false,
														"src": "12913:6:6",
														"valueSize": 1
													},
													{
														"declaration": 1736,
														"isOffset": false,
														"isSlot": false,
														"src": "12923:5:6",
														"valueSize": 1
													}
												],
												"id": 1748,
												"nodeType": "InlineAssembly",
												"src": "12890:48:6"
											},
											{
												"expression": {
													"id": 1749,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1746,
													"src": "12955:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1731,
												"id": 1750,
												"nodeType": "Return",
												"src": "12948:13:6"
											}
										]
									},
									"documentation": {
										"id": 1723,
										"nodeType": "StructuredDocumentation",
										"src": "12137:529:6",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "12680:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12703:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "12687:19:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1623_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1725,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1724,
														"name": "UintSet",
														"nameLocations": [
															"12687:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1623,
														"src": "12687:7:6"
													},
													"referencedDeclaration": 1623,
													"src": "12687:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1623_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12686:21:6"
									},
									"returnParameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "12731:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1728,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12731:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1729,
													"nodeType": "ArrayTypeName",
													"src": "12731:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12730:18:6"
									},
									"scope": 1753,
									"src": "12671:297:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1754,
							"src": "1330:11640:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "205:12766:6"
				},
				"id": 6
			}
		}
	}
}